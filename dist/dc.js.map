{"version":3,"file":"dc.js","sources":["../src/core/bad-argument-exception.js","../src/core/constants.js","../src/core/logger.js","../src/core/config.js","../src/core/chart-registry.js","../src/core/core.js","../src/core/events.js","../src/core/filters.js","../src/core/invalid-state-exception.js","../src/core/utils.js","../src/core/printers.js","../src/core/units.js","../src/base/base-mixin.js","../src/base/color-mixin.js","../src/base/bubble-mixin.js","../src/base/cap-mixin.js","../src/base/margin-mixin.js","../src/base/coordinate-grid-mixin.js","../src/base/d3.box.js","../src/base/stack-mixin.js","../src/charts/bar-chart.js","../src/charts/box-plot.js","../src/charts/bubble-chart.js","../src/charts/bubble-overlay.js","../src/charts/cbox-menu.js","../src/charts/composite-chart.js","../src/charts/data-count.js","../src/charts/data-grid.js","../src/charts/data-table.js","../src/charts/geo-choropleth-chart.js","../src/charts/heatmap.js","../src/charts/html-legend.js","../src/charts/legend.js","../src/charts/line-chart.js","../src/charts/number-display.js","../src/charts/pie-chart.js","../src/charts/row-chart.js","../src/charts/scatter-plot.js","../src/charts/select-menu.js","../src/charts/series-chart.js","../src/charts/sunburst-chart.js","../src/charts/text-filter-widget.js"],"sourcesContent":["\r\nexport class BadArgumentException extends Error { }\r\n","export const constants = {\r\n    CHART_CLASS: 'dc-chart',\r\n    DEBUG_GROUP_CLASS: 'debug',\r\n    STACK_CLASS: 'stack',\r\n    DESELECTED_CLASS: 'deselected',\r\n    SELECTED_CLASS: 'selected',\r\n    NODE_INDEX_NAME: '__index__',\r\n    GROUP_INDEX_NAME: '__group_index__',\r\n    DEFAULT_CHART_GROUP: '__default_chart_group__',\r\n    EVENT_DELAY: 40,\r\n    NEGLIGIBLE_NUMBER: 1e-10\r\n};\r\n","/**\r\n * Provides basis logging and deprecation utilities\r\n */\r\nexport class Logger {\r\n\r\n    constructor () {\r\n        /**\r\n         * Enable debug level logging. Set to `false` by default.\r\n         * @name enableDebugLog\r\n         * @memberof Logger\r\n         * @instance\r\n         */\r\n        this.enableDebugLog = false;\r\n\r\n        this._alreadyWarned = {};\r\n    }\r\n\r\n    /**\r\n     * Put a warning message to console\r\n     * @example\r\n     * logger.warn('Invalid use of .tension on CurveLinear');\r\n     * @param {String} [msg]\r\n     * @returns {Logger}\r\n     */\r\n    warn (msg) {\r\n        if (console) {\r\n            if (console.warn) {\r\n                console.warn(msg);\r\n            } else if (console.log) {\r\n                console.log(msg);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Put a warning message to console. It will warn only on unique messages.\r\n     * @example\r\n     * logger.warnOnce('Invalid use of .tension on CurveLinear');\r\n     * @param {String} [msg]\r\n     * @returns {Logger}\r\n     */\r\n    warnOnce (msg) {\r\n        if (!this._alreadyWarned[msg]) {\r\n            this._alreadyWarned[msg] = true;\r\n\r\n            logger.warn(msg);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Put a debug message to console. It is controlled by `logger.enableDebugLog`\r\n     * @example\r\n     * logger.debug('Total number of slices: ' + numSlices);\r\n     * @param {String} [msg]\r\n     * @returns {Logger}\r\n     */\r\n    debug (msg) {\r\n        if (this.enableDebugLog && console) {\r\n            if (console.debug) {\r\n                console.debug(msg);\r\n            } else if (console.log) {\r\n                console.log(msg);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nexport const logger = new Logger();\r\n","import {timeFormat} from 'd3-time-format';\r\n\r\nimport {logger} from './logger';\r\n\r\n/**\r\n * General configuration\r\n */\r\nexport class Config {\r\n    constructor () {\r\n        this._defaultColors = Config._schemeCategory20c;\r\n\r\n        /**\r\n         * The default date format for dc.js\r\n         * @type {Function}\r\n         * @default d3.timeFormat('%m/%d/%Y')\r\n         */\r\n        this.dateFormat = timeFormat('%m/%d/%Y');\r\n\r\n        this._renderlet = null;\r\n\r\n        /**\r\n         * If this boolean is set truthy, all transitions will be disabled, and changes to the charts will happen\r\n         * immediately.\r\n         * @type {Boolean}\r\n         * @default false\r\n         */\r\n        this.disableTransitions = false;\r\n    }\r\n\r\n    /**\r\n     * Set the default color scheme for ordinal charts. Changing it will impact all ordinal charts.\r\n     *\r\n     * By default it is set to a copy of\r\n     * `d3.schemeCategory20c` for backward compatibility. This color scheme has been\r\n     * [removed from D3v5](https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50).\r\n     * In DC 3.1 release it will change to a more appropriate default.\r\n     *\r\n     * @example\r\n     * config.defaultColors(d3.schemeSet1)\r\n     * @param {Array} [colors]\r\n     * @returns {Array|config}\r\n     */\r\n    defaultColors (colors) {\r\n        if (!arguments.length) {\r\n            // Issue warning if it uses _schemeCategory20c\r\n            if (this._defaultColors === Config._schemeCategory20c) {\r\n                logger.warnOnce('You are using d3.schemeCategory20c, which has been removed in D3v5. ' +\r\n                    'See the explanation at https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50. ' +\r\n                    'DC is using it for backward compatibility, however it will be changed in DCv3.1. ' +\r\n                    'You can change it by calling dc.config.defaultColors(newScheme). ' +\r\n                    'See https://github.com/d3/d3-scale-chromatic for some alternatives.');\r\n            }\r\n            return this._defaultColors;\r\n        }\r\n        this._defaultColors = colors;\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\n// D3v5 has removed schemeCategory20c, copied here for backward compatibility\r\nConfig._schemeCategory20c = [\r\n    '#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d',\r\n    '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476',\r\n    '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc',\r\n    '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\r\n\r\n/**\r\n * General configuration object; see {@link Config} for members.\r\n */\r\nexport const config = new Config();\r\n","import {constants} from './constants';\r\nimport {config} from './config';\r\n\r\n/**\r\n * The ChartRegistry maintains sets of all instantiated dc.js charts under named groups\r\n * and the default group. There is a single global ChartRegistry object named `chartRegistry`\r\n *\r\n * A chart group often corresponds to a crossfilter instance. It specifies\r\n * the set of charts which should be updated when a filter changes on one of the charts or when the\r\n * global functions {@link filterAll filterAll}, {@link refocusAll refocusAll},\r\n * {@link renderAll renderAll}, {@link redrawAll redrawAll}, or chart functions\r\n * {@link baseMixin#renderGroup baseMixin.renderGroup},\r\n * {@link baseMixin#redrawGroup baseMixin.redrawGroup} are called.\r\n */\r\nclass ChartRegistry {\r\n    constructor () {\r\n        // chartGroup:string => charts:array\r\n        this._chartMap = {};\r\n    }\r\n\r\n    _initializeChartGroup (group) {\r\n        if (!group) {\r\n            group = constants.DEFAULT_CHART_GROUP;\r\n        }\r\n\r\n        if (!(this._chartMap)[group]) {\r\n            (this._chartMap)[group] = [];\r\n        }\r\n\r\n        return group;\r\n    }\r\n\r\n    /**\r\n     * Determine if a given chart instance resides in any group in the registry.\r\n     * @param {Object} chart dc.js chart instance\r\n     * @returns {Boolean}\r\n     */\r\n    has (chart) {\r\n        for (const e in this._chartMap) {\r\n            if ((this._chartMap)[e].indexOf(chart) >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Add given chart instance to the given group, creating the group if necessary.\r\n     * If no group is provided, the default group `constants.DEFAULT_CHART_GROUP` will be used.\r\n     * @param {Object} chart dc.js chart instance\r\n     * @param {String} [group] Group name\r\n     * @return {undefined}\r\n     */\r\n    register (chart, group) {\r\n        const _chartMap = this._chartMap;\r\n        group = this._initializeChartGroup(group);\r\n        _chartMap[group].push(chart);\r\n    }\r\n\r\n    /**\r\n     * Remove given chart instance from the given group, creating the group if necessary.\r\n     * If no group is provided, the default group `constants.DEFAULT_CHART_GROUP` will be used.\r\n     * @param {Object} chart dc.js chart instance\r\n     * @param {String} [group] Group name\r\n     * @return {undefined}\r\n     */\r\n    deregister (chart, group) {\r\n        group = this._initializeChartGroup(group);\r\n        for (let i = 0; i < (this._chartMap)[group].length; i++) {\r\n            if ((this._chartMap)[group][i].anchorName() === chart.anchorName()) {\r\n                (this._chartMap)[group].splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear given group if one is provided, otherwise clears all groups.\r\n     * @param {String} group Group name\r\n     * @return {undefined}\r\n     */\r\n    clear (group) {\r\n        if (group) {\r\n            delete (this._chartMap)[group];\r\n        } else {\r\n            this._chartMap = {};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get an array of each chart instance in the given group.\r\n     * If no group is provided, the charts in the default group are returned.\r\n     * @param {String} [group] Group name\r\n     * @returns {Array<Object>}\r\n     */\r\n    list (group) {\r\n        group = this._initializeChartGroup(group);\r\n        return (this._chartMap)[group];\r\n    }\r\n}\r\n\r\n/**\r\n * The chartRegistry object maintains sets of all instantiated dc.js charts under named groups\r\n * and the default group. See {@link ChartRegistry ChartRegistry} for its methods.\r\n */\r\nexport const chartRegistry = new ChartRegistry();\r\n\r\n/**\r\n * Add given chart instance to the given group, creating the group if necessary.\r\n * If no group is provided, the default group `constants.DEFAULT_CHART_GROUP` will be used.\r\n * @function registerChart\r\n * @param {Object} chart dc.js chart instance\r\n * @param {String} [group] Group name\r\n * @return {undefined}\r\n */\r\nexport const registerChart = function (chart, group) {\r\n    chartRegistry.register(chart, group);\r\n};\r\n\r\n/**\r\n * Remove given chart instance from the given group, creating the group if necessary.\r\n * If no group is provided, the default group `constants.DEFAULT_CHART_GROUP` will be used.\r\n * @function deregisterChart\r\n * @param {Object} chart dc.js chart instance\r\n * @param {String} [group] Group name\r\n * @return {undefined}\r\n */\r\nexport const deregisterChart = function (chart, group) {\r\n    chartRegistry.deregister(chart, group);\r\n};\r\n\r\n/**\r\n * Determine if a given chart instance resides in any group in the registry.\r\n * @function hasChart\r\n * @param {Object} chart dc.js chart instance\r\n * @returns {Boolean}\r\n */\r\nexport const hasChart = function (chart) {\r\n    return chartRegistry.has(chart);\r\n};\r\n\r\n/**\r\n * Clear given group if one is provided, otherwise clears all groups.\r\n * @function deregisterAllCharts\r\n * @param {String} group Group name\r\n * @return {undefined}\r\n */\r\nexport const deregisterAllCharts = function (group) {\r\n    chartRegistry.clear(group);\r\n};\r\n\r\n/**\r\n * Clear all filters on all charts within the given chart group. If the chart group is not given then\r\n * only charts that belong to the default chart group will be reset.\r\n * @function filterAll\r\n * @param {String} [group]\r\n * @return {undefined}\r\n */\r\nexport const filterAll = function (group) {\r\n    const charts = chartRegistry.list(group);\r\n    for (let i = 0; i < charts.length; ++i) {\r\n        charts[i].filterAll();\r\n    }\r\n};\r\n\r\n/**\r\n * Reset zoom level / focus on all charts that belong to the given chart group. If the chart group is\r\n * not given then only charts that belong to the default chart group will be reset.\r\n * @function refocusAll\r\n * @param {String} [group]\r\n * @return {undefined}\r\n */\r\nexport const refocusAll = function (group) {\r\n    const charts = chartRegistry.list(group);\r\n    for (let i = 0; i < charts.length; ++i) {\r\n        if (charts[i].focus) {\r\n            charts[i].focus();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Re-render all charts belong to the given chart group. If the chart group is not given then only\r\n * charts that belong to the default chart group will be re-rendered.\r\n * @function renderAll\r\n * @param {String} [group]\r\n * @return {undefined}\r\n */\r\nexport const renderAll = function (group) {\r\n    const charts = chartRegistry.list(group);\r\n    for (let i = 0; i < charts.length; ++i) {\r\n        charts[i].render();\r\n    }\r\n\r\n    if (config._renderlet !== null) {\r\n        config._renderlet(group);\r\n    }\r\n};\r\n\r\n/**\r\n * Redraw all charts belong to the given chart group. If the chart group is not given then only charts\r\n * that belong to the default chart group will be re-drawn. Redraw is different from re-render since\r\n * when redrawing dc tries to update the graphic incrementally, using transitions, instead of starting\r\n * from scratch.\r\n * @function redrawAll\r\n * @param {String} [group]\r\n * @return {undefined}\r\n */\r\nexport const redrawAll = function (group) {\r\n    const charts = chartRegistry.list(group);\r\n    for (let i = 0; i < charts.length; ++i) {\r\n        charts[i].redraw();\r\n    }\r\n\r\n    if (config._renderlet !== null) {\r\n        config._renderlet(group);\r\n    }\r\n};\r\n","import {config} from './config';\r\n\r\n/**\r\n * Start a transition on a selection if transitions are globally enabled\r\n * ({@link disableTransitions} is false) and the duration is greater than zero; otherwise return\r\n * the selection. Since most operations are the same on a d3 selection and a d3 transition, this\r\n * allows a common code path for both cases.\r\n * @function transition\r\n * @param {d3.selection} selection - the selection to be transitioned\r\n * @param {Number|Function} [duration=250] - the duration of the transition in milliseconds, a\r\n * function returning the duration, or 0 for no transition\r\n * @param {Number|Function} [delay] - the delay of the transition in milliseconds, or a function\r\n * returning the delay, or 0 for no delay\r\n * @param {String} [name] - the name of the transition (if concurrent transitions on the same\r\n * elements are needed)\r\n * @returns {d3.transition|d3.selection}\r\n */\r\nexport const transition = function (selection, duration, delay, name) {\r\n    if (config.disableTransitions || duration <= 0) {\r\n        return selection;\r\n    }\r\n\r\n    let s = selection.transition(name);\r\n\r\n    if (duration >= 0 || duration !== undefined) {\r\n        s = s.duration(duration);\r\n    }\r\n    if (delay >= 0 || delay !== undefined) {\r\n        s = s.delay(delay);\r\n    }\r\n\r\n    return s;\r\n};\r\n\r\n/* somewhat silly, but to avoid duplicating logic */\r\nexport const optionalTransition = function (enable, duration, delay, name) {\r\n    if (enable) {\r\n        return function (selection) {\r\n            return transition(selection, duration, delay, name);\r\n        };\r\n    } else {\r\n        return function (selection) {\r\n            return selection;\r\n        };\r\n    }\r\n};\r\n\r\n// See http://stackoverflow.com/a/20773846\r\nexport const afterTransition = function (_transition, callback) {\r\n    if (_transition.empty() || !_transition.duration) {\r\n        callback.call(_transition);\r\n    } else {\r\n        let n = 0;\r\n        _transition\r\n            .each(() => { ++n; })\r\n            .on('end', () => {\r\n                if (!--n) {\r\n                    callback.call(_transition);\r\n                }\r\n            });\r\n    }\r\n};\r\n\r\nexport const renderlet = function (_) {\r\n    if (!arguments.length) {\r\n        return config._renderlet;\r\n    }\r\n    config._renderlet = _;\r\n    return null;\r\n};\r\n\r\nexport const instanceOfChart = function (o) {\r\n    return o instanceof Object && o.__dcFlag__ && true;\r\n};\r\n","export const events = {\r\n    current: null\r\n};\r\n\r\n/**\r\n * This function triggers a throttled event function with a specified delay (in milli-seconds).  Events\r\n * that are triggered repetitively due to user interaction such brush dragging might flood the library\r\n * and invoke more renders than can be executed in time. Using this function to wrap your event\r\n * function allows the library to smooth out the rendering by throttling events and only responding to\r\n * the most recent event.\r\n * @name events.trigger\r\n * @example\r\n * chart.on('renderlet', function(chart) {\r\n *     // smooth the rendering through event throttling\r\n *     events.trigger(function(){\r\n *         // focus some other chart to the range selected by user on this chart\r\n *         someOtherChart.focus(chart.filter());\r\n *     });\r\n * })\r\n * @param {Function} closure\r\n * @param {Number} [delay]\r\n * @return {undefined}\r\n */\r\nevents.trigger = function (closure, delay) {\r\n    if (!delay) {\r\n        closure();\r\n        return;\r\n    }\r\n\r\n    events.current = closure;\r\n\r\n    setTimeout(() => {\r\n        if (closure === events.current) {\r\n            closure();\r\n        }\r\n    }, delay);\r\n};\r\n","/**\r\n * The dc.js filters are functions which are passed into crossfilter to chose which records will be\r\n * accumulated to produce values for the charts.  In the crossfilter model, any filters applied on one\r\n * dimension will affect all the other dimensions but not that one.  dc always applies a filter\r\n * function to the dimension; the function combines multiple filters and if any of them accept a\r\n * record, it is filtered in.\r\n *\r\n * These filter constructors are used as appropriate by the various charts to implement brushing.  We\r\n * mention below which chart uses which filter.  In some cases, many instances of a filter will be added.\r\n *\r\n * Each of the dc.js filters is an object with the following properties:\r\n * * `isFiltered` - a function that returns true if a value is within the filter\r\n * * `filterType` - a string identifying the filter, here the name of the constructor\r\n *\r\n * Currently these filter objects are also arrays, but this is not a requirement. Custom filters\r\n * can be used as long as they have the properties above.\r\n * @namespace filters\r\n * @type {{}}\r\n */\r\nexport const filters = {};\r\n\r\n/**\r\n * RangedFilter is a filter which accepts keys between `low` and `high`.  It is used to implement X\r\n * axis brushing for the {@link CoordinateGridMixin coordinate grid charts}.\r\n *\r\n * Its `filterType` is 'RangedFilter'\r\n * @name RangedFilter\r\n * @memberof filters\r\n * @param {Number} low\r\n * @param {Number} high\r\n * @returns {Array<Number>}\r\n * @constructor\r\n */\r\nfilters.RangedFilter = function (low, high) {\r\n    const range = new Array(low, high);\r\n    range.isFiltered = function (value) {\r\n        return value >= this[0] && value < this[1];\r\n    };\r\n    range.filterType = 'RangedFilter';\r\n\r\n    return range;\r\n};\r\n\r\n/**\r\n * TwoDimensionalFilter is a filter which accepts a single two-dimensional value.  It is used by the\r\n * {@link HeatMap heat map chart} to include particular cells as they are clicked.  (Rows and columns are\r\n * filtered by filtering all the cells in the row or column.)\r\n *\r\n * Its `filterType` is 'TwoDimensionalFilter'\r\n * @name TwoDimensionalFilter\r\n * @memberof filters\r\n * @param {Array<Number>} filter\r\n * @returns {Array<Number>}\r\n * @constructor\r\n */\r\nfilters.TwoDimensionalFilter = function (filter) {\r\n    if (filter === null) { return null; }\r\n\r\n    const f = filter;\r\n    f.isFiltered = function (value) {\r\n        return value.length && value.length === f.length &&\r\n               value[0] === f[0] && value[1] === f[1];\r\n    };\r\n    f.filterType = 'TwoDimensionalFilter';\r\n\r\n    return f;\r\n};\r\n\r\n/**\r\n * The RangedTwoDimensionalFilter allows filtering all values which fit within a rectangular\r\n * region. It is used by the {@link ScatterPlot scatter plot} to implement rectangular brushing.\r\n *\r\n * It takes two two-dimensional points in the form `[[x1,y1],[x2,y2]]`, and normalizes them so that\r\n * `x1 <= x2` and `y1 <= y2`. It then returns a filter which accepts any points which are in the\r\n * rectangular range including the lower values but excluding the higher values.\r\n *\r\n * If an array of two values are given to the RangedTwoDimensionalFilter, it interprets the values as\r\n * two x coordinates `x1` and `x2` and returns a filter which accepts any points for which `x1 <= x <\r\n * x2`.\r\n *\r\n * Its `filterType` is 'RangedTwoDimensionalFilter'\r\n * @name RangedTwoDimensionalFilter\r\n * @memberof filters\r\n * @param {Array<Array<Number>>} filter\r\n * @returns {Array<Array<Number>>}\r\n * @constructor\r\n */\r\nfilters.RangedTwoDimensionalFilter = function (filter) {\r\n    if (filter === null) { return null; }\r\n\r\n    const f = filter;\r\n    let fromBottomLeft;\r\n\r\n    if (f[0] instanceof Array) {\r\n        fromBottomLeft = [\r\n            [Math.min(filter[0][0], filter[1][0]), Math.min(filter[0][1], filter[1][1])],\r\n            [Math.max(filter[0][0], filter[1][0]), Math.max(filter[0][1], filter[1][1])]\r\n        ];\r\n    } else {\r\n        fromBottomLeft = [[filter[0], -Infinity], [filter[1], Infinity]];\r\n    }\r\n\r\n    f.isFiltered = function (value) {\r\n        let x, y;\r\n\r\n        if (value instanceof Array) {\r\n            x = value[0];\r\n            y = value[1];\r\n        } else {\r\n            x = value;\r\n            y = fromBottomLeft[0][1];\r\n        }\r\n\r\n        return x >= fromBottomLeft[0][0] && x < fromBottomLeft[1][0] &&\r\n               y >= fromBottomLeft[0][1] && y < fromBottomLeft[1][1];\r\n    };\r\n    f.filterType = 'RangedTwoDimensionalFilter';\r\n\r\n    return f;\r\n};\r\n\r\n// ******** Sunburst Chart ********\r\n\r\n/**\r\n * HierarchyFilter is a filter which accepts a key path as an array. It matches any node at, or\r\n * child of, the given path. It is used by the {@link SunburstChart sunburst chart} to include particular cells and all\r\n * their children as they are clicked.\r\n *\r\n * @name HierarchyFilter\r\n * @memberof filters\r\n * @param {String} path\r\n * @returns {Array<String>}\r\n * @constructor\r\n */\r\nfilters.HierarchyFilter = function (path) {\r\n    if (path === null) {\r\n        return null;\r\n    }\r\n\r\n    const filter = path.slice(0);\r\n    filter.isFiltered = function (value) {\r\n        if (!(filter.length && value && value.length && value.length >= filter.length)) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i < filter.length; i++) {\r\n            if (value[i] !== filter[i]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n    return filter;\r\n};\r\n","\r\nexport class InvalidStateException extends Error { }\r\n","import {timeDay, timeHour, timeMinute, timeMonth, timeSecond, timeWeek, timeYear} from 'd3-time';\r\nimport {format} from 'd3-format';\r\n\r\nimport {constants} from './constants';\r\nimport {config} from './config';\r\n\r\n/**\r\n * Returns a function that given a string property name, can be used to pluck the property off an object.  A function\r\n * can be passed as the second argument to also alter the data being returned.\r\n *\r\n * This can be a useful shorthand method to create accessor functions.\r\n * @example\r\n * var xPluck = pluck('x');\r\n * var objA = {x: 1};\r\n * xPluck(objA) // 1\r\n * @example\r\n * var xPosition = pluck('x', function (x, i) {\r\n *     // `this` is the original datum,\r\n *     // `x` is the x property of the datum,\r\n *     // `i` is the position in the array\r\n *     return this.radius + x;\r\n * });\r\n * selectAll('.circle').data(...).x(xPosition);\r\n * @function pluck\r\n * @param {String} n\r\n * @param {Function} [f]\r\n * @returns {Function}\r\n */\r\nexport const pluck = function (n, f) {\r\n    if (!f) {\r\n        return function (d) { return d[n]; };\r\n    }\r\n    return function (d, i) { return f.call(d, d[n], i); };\r\n};\r\n\r\n/**\r\n * @namespace utils\r\n * @type {{}}\r\n */\r\nexport const utils = {};\r\n\r\n/**\r\n * Print a single value filter.\r\n * @method printSingleValue\r\n * @memberof utils\r\n * @param {any} filter\r\n * @returns {String}\r\n */\r\nutils.printSingleValue = function (filter) {\r\n    let s = `${filter}`;\r\n\r\n    if (filter instanceof Date) {\r\n        s = config.dateFormat(filter);\r\n    } else if (typeof (filter) === 'string') {\r\n        s = filter;\r\n    } else if (utils.isFloat(filter)) {\r\n        s = utils.printSingleValue.fformat(filter);\r\n    } else if (utils.isInteger(filter)) {\r\n        s = Math.round(filter);\r\n    }\r\n\r\n    return s;\r\n};\r\nutils.printSingleValue.fformat = format('.2f');\r\n\r\n// convert 'day' to d3.timeDay and similar\r\nutils._toTimeFunc = function (t) {\r\n    const mappings = {\r\n        'second': timeSecond,\r\n        'minute': timeMinute,\r\n        'hour': timeHour,\r\n        'day': timeDay,\r\n        'week': timeWeek,\r\n        'month': timeMonth,\r\n        'year': timeYear\r\n    };\r\n    return mappings[t];\r\n};\r\n\r\n/**\r\n * Arbitrary add one value to another.\r\n *\r\n * If the value l is of type Date, adds r units to it. t becomes the unit.\r\n * For example utils.add(dt, 3, 'week') will add 3 (r = 3) weeks (t= 'week') to dt.\r\n *\r\n * If l is of type numeric, t is ignored. In this case if r is of type string,\r\n * it is assumed to be percentage (whether or not it includes %). For example\r\n * utils.add(30, 10) will give 40 and utils.add(30, '10') will give 33.\r\n *\r\n * They also generate strange results if l is a string.\r\n * @method add\r\n * @memberof utils\r\n * @param {Date|Number} l the value to modify\r\n * @param {String|Number} r the amount by which to modify the value\r\n * @param {Function|String} [t=d3.timeDay] if `l` is a `Date`, then this should be a\r\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\r\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\r\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\r\n * @returns {Date|Number}\r\n */\r\nutils.add = function (l, r, t) {\r\n    if (typeof r === 'string') {\r\n        r = r.replace('%', '');\r\n    }\r\n\r\n    if (l instanceof Date) {\r\n        if (typeof r === 'string') {\r\n            r = +r;\r\n        }\r\n        if (t === 'millis') {\r\n            return new Date(l.getTime() + r);\r\n        }\r\n        t = t || timeDay;\r\n        if (typeof t !== 'function') {\r\n            t = utils._toTimeFunc(t);\r\n        }\r\n        return t.offset(l, r);\r\n    } else if (typeof r === 'string') {\r\n        const percentage = (+r / 100);\r\n        return l > 0 ? l * (1 + percentage) : l * (1 - percentage);\r\n    } else {\r\n        return l + r;\r\n    }\r\n};\r\n\r\n/**\r\n * Arbitrary subtract one value from another.\r\n *\r\n * If the value l is of type Date, subtracts r units from it. t becomes the unit.\r\n * For example utils.subtract(dt, 3, 'week') will subtract 3 (r = 3) weeks (t= 'week') from dt.\r\n *\r\n * If l is of type numeric, t is ignored. In this case if r is of type string,\r\n * it is assumed to be percentage (whether or not it includes %). For example\r\n * utils.subtract(30, 10) will give 20 and utils.subtract(30, '10') will give 27.\r\n *\r\n * They also generate strange results if l is a string.\r\n * @method subtract\r\n * @memberof utils\r\n * @param {Date|Number} l the value to modify\r\n * @param {String|Number} r the amount by which to modify the value\r\n * @param {Function|String} [t=d3.timeDay] if `l` is a `Date`, then this should be a\r\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\r\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\r\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\r\n * @returns {Date|Number}\r\n */\r\nutils.subtract = function (l, r, t) {\r\n    if (typeof r === 'string') {\r\n        r = r.replace('%', '');\r\n    }\r\n\r\n    if (l instanceof Date) {\r\n        if (typeof r === 'string') {\r\n            r = +r;\r\n        }\r\n        if (t === 'millis') {\r\n            return new Date(l.getTime() - r);\r\n        }\r\n        t = t || timeDay;\r\n        if (typeof t !== 'function') {\r\n            t = utils._toTimeFunc(t);\r\n        }\r\n        return t.offset(l, -r);\r\n    } else if (typeof r === 'string') {\r\n        const percentage = (+r / 100);\r\n        return l < 0 ? l * (1 + percentage) : l * (1 - percentage);\r\n    } else {\r\n        return l - r;\r\n    }\r\n};\r\n\r\n/**\r\n * Is the value a number?\r\n * @method isNumber\r\n * @memberof utils\r\n * @param {any} n\r\n * @returns {Boolean}\r\n */\r\nutils.isNumber = function (n) {\r\n    return n === +n;\r\n};\r\n\r\n/**\r\n * Is the value a float?\r\n * @method isFloat\r\n * @memberof utils\r\n * @param {any} n\r\n * @returns {Boolean}\r\n */\r\nutils.isFloat = function (n) {\r\n    return n === +n && n !== (n | 0);\r\n};\r\n\r\n/**\r\n * Is the value an integer?\r\n * @method isInteger\r\n * @memberof utils\r\n * @param {any} n\r\n * @returns {Boolean}\r\n */\r\nutils.isInteger = function (n) {\r\n    return n === +n && n === (n | 0);\r\n};\r\n\r\n/**\r\n * Is the value very close to zero?\r\n * @method isNegligible\r\n * @memberof utils\r\n * @param {any} n\r\n * @returns {Boolean}\r\n */\r\nutils.isNegligible = function (n) {\r\n    return !utils.isNumber(n) || (n < constants.NEGLIGIBLE_NUMBER && n > -constants.NEGLIGIBLE_NUMBER);\r\n};\r\n\r\n/**\r\n * Ensure the value is no greater or less than the min/max values.  If it is return the boundary value.\r\n * @method clamp\r\n * @memberof utils\r\n * @param {any} val\r\n * @param {any} min\r\n * @param {any} max\r\n * @returns {any}\r\n */\r\nutils.clamp = function (val, min, max) {\r\n    return val < min ? min : (val > max ? max : val);\r\n};\r\n\r\n/**\r\n * Given `x`, return a function that always returns `x`.\r\n *\r\n * {@link https://github.com/d3/d3/blob/master/CHANGES.md#internals `d3.functor` was removed in d3 version 4}.\r\n * This function helps to implement the replacement,\r\n * `typeof x === \"function\" ? x : utils.constant(x)`\r\n * @method constant\r\n * @memberof utils\r\n * @param {any} x\r\n * @returns {Function}\r\n */\r\nutils.constant = function (x) {\r\n    return function () {\r\n        return x;\r\n    };\r\n};\r\n\r\n/**\r\n * Using a simple static counter, provide a unique integer id.\r\n * @method uniqueId\r\n * @memberof utils\r\n * @returns {Number}\r\n */\r\nlet _idCounter = 0;\r\nutils.uniqueId = function () {\r\n    return ++_idCounter;\r\n};\r\n\r\n/**\r\n * Convert a name to an ID.\r\n * @method nameToId\r\n * @memberof utils\r\n * @param {String} name\r\n * @returns {String}\r\n */\r\nutils.nameToId = function (name) {\r\n    return name.toLowerCase().replace(/[\\s]/g, '_').replace(/[\\.']/g, '');\r\n};\r\n\r\n/**\r\n * Append or select an item on a parent element.\r\n * @method appendOrSelect\r\n * @memberof utils\r\n * @param {d3.selection} parent\r\n * @param {String} selector\r\n * @param {String} tag\r\n * @returns {d3.selection}\r\n */\r\nutils.appendOrSelect = function (parent, selector, tag) {\r\n    tag = tag || selector;\r\n    let element = parent.select(selector);\r\n    if (element.empty()) {\r\n        element = parent.append(tag);\r\n    }\r\n    return element;\r\n};\r\n\r\n/**\r\n * Return the number if the value is a number; else 0.\r\n * @method safeNumber\r\n * @memberof utils\r\n * @param {Number|any} n\r\n * @returns {Number}\r\n */\r\nutils.safeNumber = function (n) { return utils.isNumber(+n) ? +n : 0;};\r\n\r\n/**\r\n * Return true if both arrays are equal, if both array are null these are considered equal\r\n * @method arraysEqual\r\n * @memberof utils\r\n * @param {Array|null} a1\r\n * @param {Array|null} a2\r\n * @returns {Boolean}\r\n */\r\nutils.arraysEqual = function (a1, a2) {\r\n    if (!a1 && !a2) {\r\n        return true;\r\n    }\r\n\r\n    if (!a1 || !a2) {\r\n        return false;\r\n    }\r\n\r\n    return a1.length === a2.length &&\r\n        // If elements are not integers/strings, we hope that it will match because of toString\r\n        // Test cases cover dates as well.\r\n        a1.every((elem, i) => elem.valueOf() === a2[i].valueOf());\r\n};\r\n\r\n// ******** Sunburst Chart ********\r\nutils.allChildren = function (node) {\r\n    let paths = [];\r\n    paths.push(node.path);\r\n    console.log('currentNode', node);\r\n    if (node.children) {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            paths = paths.concat(utils.allChildren(node.children[i]));\r\n        }\r\n    }\r\n    return paths;\r\n};\r\n\r\n// builds a d3 Hierarchy from a collection\r\n// TODO: turn this monster method something better.\r\nutils.toHierarchy = function (list, accessor) {\r\n    const root = {'key': 'root', 'children': []};\r\n    for (let i = 0; i < list.length; i++) {\r\n        const data = list[i];\r\n        const parts = data.key;\r\n        const value = accessor(data);\r\n        let currentNode = root;\r\n        for (let j = 0; j < parts.length; j++) {\r\n            const currentPath = parts.slice(0, j + 1);\r\n            const children = currentNode.children;\r\n            const nodeName = parts[j];\r\n            let childNode;\r\n            if (j + 1 < parts.length) {\r\n                // Not yet at the end of the sequence; move down the tree.\r\n                childNode = findChild(children, nodeName);\r\n\r\n                // If we don't already have a child node for this branch, create it.\r\n                if (childNode === void 0) {\r\n                    childNode = {'key': nodeName, 'children': [], 'path': currentPath};\r\n                    children.push(childNode);\r\n                }\r\n                currentNode = childNode;\r\n            } else {\r\n                // Reached the end of the sequence; create a leaf node.\r\n                childNode = {'key': nodeName, 'value': value, 'data': data, 'path': currentPath};\r\n                children.push(childNode);\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n};\r\n\r\nfunction findChild (children, nodeName) {\r\n    for (let k = 0; k < children.length; k++) {\r\n        if (children[k].key === nodeName) {\r\n            return children[k];\r\n        }\r\n    }\r\n}\r\n\r\nutils.getAncestors = function (node) {\r\n    const path = [];\r\n    let current = node;\r\n    while (current.parent) {\r\n        path.unshift(current.name);\r\n        current = current.parent;\r\n    }\r\n    return path;\r\n};\r\n\r\nutils.arraysIdentical = function (a, b) {\r\n    let i = a.length;\r\n    if (i !== b.length) {\r\n        return false;\r\n    }\r\n    while (i--) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n","import {utils} from './utils';\r\n\r\n/**\r\n * @namespace printers\r\n * @type {{}}\r\n */\r\nexport const printers = {};\r\n\r\n/**\r\n * Converts a list of filters into a readable string.\r\n * @method filters\r\n * @memberof printers\r\n * @param {Array<filters>} filters\r\n * @returns {String}\r\n */\r\nprinters.filters = function (filters) {\r\n    let s = '';\r\n\r\n    for (let i = 0; i < filters.length; ++i) {\r\n        if (i > 0) {\r\n            s += ', ';\r\n        }\r\n        s += printers.filter(filters[i]);\r\n    }\r\n\r\n    return s;\r\n};\r\n\r\n/**\r\n * Converts a filter into a readable string.\r\n * @method filter\r\n * @memberof printers\r\n * @param {filters|any|Array<any>} filter\r\n * @returns {String}\r\n */\r\nprinters.filter = function (filter) {\r\n    let s = '';\r\n\r\n    if (typeof filter !== 'undefined' && filter !== null) {\r\n        if (filter instanceof Array) {\r\n            if (filter.length >= 2) {\r\n                s = `[${filter.map(e => utils.printSingleValue(e)).join(' -> ')}]`;\r\n            } else if (filter.length >= 1) {\r\n                s = utils.printSingleValue(filter[0]);\r\n            }\r\n        } else {\r\n            s = utils.printSingleValue(filter);\r\n        }\r\n    }\r\n\r\n    return s;\r\n};\r\n","import {utils} from './utils';\r\n\r\n/**\r\n * @namespace units\r\n * @type {{}}\r\n */\r\nexport const units = {};\r\n\r\n/**\r\n * The default value for {@link CoordinateGridMixin#xUnits .xUnits} for the\r\n * {@link CoordinateGridMixin Coordinate Grid Chart} and should\r\n * be used when the x values are a sequence of integers.\r\n * It is a function that counts the number of integers in the range supplied in its start and end parameters.\r\n * @method integers\r\n * @memberof units\r\n * @see {@link CoordinateGridMixin#xUnits coordinateGridMixin.xUnits}\r\n * @example\r\n * chart.xUnits(units.integers) // already the default\r\n * @param {Number} start\r\n * @param {Number} end\r\n * @returns {Number}\r\n */\r\nunits.integers = function (start, end) {\r\n    return Math.abs(end - start);\r\n};\r\n\r\n/**\r\n * This argument can be passed to the {@link CoordinateGridMixin#xUnits .xUnits} function of a\r\n * coordinate grid chart to specify ordinal units for the x axis. Usually this parameter is used in\r\n * combination with passing\r\n * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal}\r\n * to {@link CoordinateGridMixin#x .x}.\r\n *\r\n * As of dc.js 3.0, this is purely a placeholder or magic value which causes the chart to go into ordinal mode; the\r\n * function is not called.\r\n * @method ordinal\r\n * @memberof units\r\n * @return {uncallable}\r\n * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal}\r\n * @see {@link CoordinateGridMixin#xUnits coordinateGridMixin.xUnits}\r\n * @see {@link CoordinateGridMixin#x coordinateGridMixin.x}\r\n * @example\r\n * chart.xUnits(units.ordinal)\r\n *      .x(d3.scaleOrdinal())\r\n */\r\nunits.ordinal = function () {\r\n    throw new Error('dc.units.ordinal should not be called - it is a placeholder');\r\n};\r\n\r\n/**\r\n * @namespace fp\r\n * @memberof units\r\n * @type {{}}\r\n */\r\nunits.fp = {};\r\n/**\r\n * This function generates an argument for the {@link CoordinateGridMixin Coordinate Grid Chart}\r\n * {@link CoordinateGridMixin#xUnits .xUnits} function specifying that the x values are floating-point\r\n * numbers with the given precision.\r\n * The returned function determines how many values at the given precision will fit into the range\r\n * supplied in its start and end parameters.\r\n * @method precision\r\n * @memberof units.fp\r\n * @see {@link CoordinateGridMixin#xUnits coordinateGridMixin.xUnits}\r\n * @example\r\n * // specify values (and ticks) every 0.1 units\r\n * chart.xUnits(units.fp.precision(0.1)\r\n * // there are 500 units between 0.5 and 1 if the precision is 0.001\r\n * var thousandths = units.fp.precision(0.001);\r\n * thousandths(0.5, 1.0) // returns 500\r\n * @param {Number} precision\r\n * @returns {Function} start-end unit function\r\n */\r\nunits.fp.precision = function (precision) {\r\n    const _f = function (s, e) {\r\n        const d = Math.abs((e - s) / _f.resolution);\r\n        if (utils.isNegligible(d - Math.floor(d))) {\r\n            return Math.floor(d);\r\n        } else {\r\n            return Math.ceil(d);\r\n        }\r\n    };\r\n    _f.resolution = precision;\r\n    return _f;\r\n};\r\n","import {select} from 'd3-selection';\r\nimport {dispatch} from 'd3-dispatch';\r\nimport {ascending} from 'd3-array';\r\n\r\nimport {pluck, utils} from '../core/utils';\r\nimport {instanceOfChart} from '../core/core';\r\nimport {deregisterChart, redrawAll, registerChart, renderAll} from '../core/chart-registry';\r\nimport {constants} from '../core/constants';\r\nimport {events} from '../core/events';\r\nimport {logger} from '../core/logger';\r\nimport {printers} from '../core/printers';\r\nimport {InvalidStateException} from '../core/invalid-state-exception';\r\nimport {BadArgumentException} from '../core/bad-argument-exception';\r\n\r\nconst _defaultFilterHandler = (dimension, filters) => {\r\n    if (filters.length === 0) {\r\n        dimension.filter(null);\r\n    } else if (filters.length === 1 && !filters[0].isFiltered) {\r\n        // single value and not a function-based filter\r\n        dimension.filterExact(filters[0]);\r\n    } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\r\n        // single range-based filter\r\n        dimension.filterRange(filters[0]);\r\n    } else {\r\n        dimension.filterFunction(d => {\r\n            for (let i = 0; i < filters.length; i++) {\r\n                const filter = filters[i];\r\n                if (filter.isFiltered) {\r\n                    if(filter.isFiltered(d)) {\r\n                        return true;\r\n                    }\r\n                } else if (filter <= d && filter >= d) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    return filters;\r\n};\r\n\r\nconst _defaultHasFilterHandler = (filters, filter) => {\r\n    if (filter === null || typeof (filter) === 'undefined') {\r\n        return filters.length > 0;\r\n    }\r\n    return filters.some(f => filter <= f && filter >= f);\r\n};\r\n\r\nconst _defaultRemoveFilterHandler = (filters, filter) => {\r\n    for (let i = 0; i < filters.length; i++) {\r\n        if (filters[i] <= filter && filters[i] >= filter) {\r\n            filters.splice(i, 1);\r\n            break;\r\n        }\r\n    }\r\n    return filters;\r\n};\r\n\r\nconst _defaultAddFilterHandler = (filters, filter) => {\r\n    filters.push(filter);\r\n    return filters;\r\n};\r\n\r\nconst _defaultResetFilterHandler = filters => [];\r\n\r\n/**\r\n * `BaseMixin` is an abstract functional object representing a basic `dc` chart object\r\n * for all chart and widget implementations. Methods from the {@link #BaseMixin BaseMixin} are inherited\r\n * and available on all chart implementations in the `dc` library.\r\n * @mixin BaseMixin\r\n */\r\nexport class BaseMixin {\r\n    constructor () {\r\n        this.__dcFlag__ = utils.uniqueId();\r\n\r\n        this._dimension = undefined;\r\n        this._group = undefined;\r\n\r\n        this._anchor = undefined;\r\n        this._root = undefined;\r\n        this._svg = undefined;\r\n        this._isChild = undefined;\r\n\r\n        this._minWidth = 200;\r\n        this._defaultWidthCalc = element => {\r\n            const width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\r\n            return (width && width > this._minWidth) ? width : this._minWidth;\r\n        };\r\n        this._widthCalc = this._defaultWidthCalc;\r\n\r\n        this._minHeight = 200;\r\n        this._defaultHeightCalc = element => {\r\n            const height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\r\n            return (height && height > this._minHeight) ? height : this._minHeight;\r\n        };\r\n        this._heightCalc = this._defaultHeightCalc;\r\n        this._width = undefined;\r\n        this._height = undefined;\r\n        this._useViewBoxResizing = false;\r\n\r\n        this._keyAccessor = pluck('key');\r\n        this._valueAccessor = pluck('value');\r\n        this._label = pluck('key');\r\n\r\n        this._ordering = pluck('key');\r\n\r\n        this._renderLabel = false;\r\n\r\n        this._title = d => `${this.keyAccessor()(d)}: ${this.valueAccessor()(d)}`;\r\n        this._renderTitle = true;\r\n        this._controlsUseVisibility = false;\r\n\r\n        this._transitionDuration = 750;\r\n\r\n        this._transitionDelay = 0;\r\n\r\n        this._filterPrinter = printers.filters;\r\n\r\n        this._mandatoryAttributesList = ['dimension', 'group'];\r\n\r\n        this._chartGroup = constants.DEFAULT_CHART_GROUP;\r\n\r\n        this._listeners = dispatch(\r\n            'preRender',\r\n            'postRender',\r\n            'preRedraw',\r\n            'postRedraw',\r\n            'filtered',\r\n            'zoomed',\r\n            'renderlet',\r\n            'pretransition');\r\n\r\n        this._legend = undefined;\r\n        this._commitHandler = undefined;\r\n\r\n        this._defaultData = group => group.all();\r\n        this._data = this._defaultData;\r\n\r\n        this._filters = [];\r\n\r\n        this._filterHandler = _defaultFilterHandler;\r\n        this._hasFilterHandler = _defaultHasFilterHandler;\r\n        this._removeFilterHandler = _defaultRemoveFilterHandler;\r\n        this._addFilterHandler = _defaultAddFilterHandler;\r\n        this._resetFilterHandler = _defaultResetFilterHandler;\r\n    }\r\n\r\n    /**\r\n     * Set or get the height attribute of a chart. The height is applied to the SVGElement generated by\r\n     * the chart when rendered (or re-rendered). If a value is given, then it will be used to calculate\r\n     * the new height and the chart returned for method chaining.  The value can either be a numeric, a\r\n     * function, or falsy. If no value is specified then the value of the current height attribute will\r\n     * be returned.\r\n     *\r\n     * By default, without an explicit height being given, the chart will select the width of its\r\n     * anchor element. If that isn't possible it defaults to 200 (provided by the\r\n     * {@link BaseMixin#minHeight minHeight} property). Setting the value falsy will return\r\n     * the chart to the default behavior.\r\n     * @see {@link BaseMixin#minHeight minHeight}\r\n     * @example\r\n     * // Default height\r\n     * chart.height(function (element) {\r\n     *     var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\r\n     *     return (height && height > chart.minHeight()) ? height : chart.minHeight();\r\n     * });\r\n     *\r\n     * chart.height(250); // Set the chart's height to 250px;\r\n     * chart.height(function(anchor) { return doSomethingWith(anchor); }); // set the chart's height with a function\r\n     * chart.height(null); // reset the height to the default auto calculation\r\n     * @param {Number|Function} [height]\r\n     * @returns {Number|BaseMixin}\r\n     */\r\n    height (height) {\r\n        if (!arguments.length) {\r\n            if (!utils.isNumber(this._height)) {\r\n                // only calculate once\r\n                this._height = this._heightCalc(this._root.node());\r\n            }\r\n            return this._height;\r\n        }\r\n        this._heightCalc = height ? (typeof height === 'function' ? height : utils.constant(height)) : this._defaultHeightCalc;\r\n        this._height = undefined;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the width attribute of a chart.\r\n     * @see {@link BaseMixin#height height}\r\n     * @see {@link BaseMixin#minWidth minWidth}\r\n     * @example\r\n     * // Default width\r\n     * chart.width(function (element) {\r\n     *     var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\r\n     *     return (width && width > chart.minWidth()) ? width : chart.minWidth();\r\n     * });\r\n     * @param {Number|Function} [width]\r\n     * @returns {Number|BaseMixin}\r\n     */\r\n    width (width) {\r\n        if (!arguments.length) {\r\n            if (!utils.isNumber(this._width)) {\r\n                // only calculate once\r\n                this._width = this._widthCalc(this._root.node());\r\n            }\r\n            return this._width;\r\n        }\r\n        this._widthCalc = width ? (typeof width === 'function' ? width : utils.constant(width)) : this._defaultWidthCalc;\r\n        this._width = undefined;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the minimum width attribute of a chart. This only has effect when used with the default\r\n     * {@link BaseMixin#width width} function.\r\n     * @see {@link BaseMixin#width width}\r\n     * @param {Number} [minWidth=200]\r\n     * @returns {Number|BaseMixin}\r\n     */\r\n    minWidth (minWidth) {\r\n        if (!arguments.length) {\r\n            return this._minWidth;\r\n        }\r\n        this._minWidth = minWidth;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the minimum height attribute of a chart. This only has effect when used with the default\r\n     * {@link BaseMixin#height height} function.\r\n     * @see {@link BaseMixin#height height}\r\n     * @param {Number} [minHeight=200]\r\n     * @returns {Number|BaseMixin}\r\n     */\r\n    minHeight (minHeight) {\r\n        if (!arguments.length) {\r\n            return this._minHeight;\r\n        }\r\n        this._minHeight = minHeight;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn on/off using the SVG\r\n     * {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox `viewBox` attribute}.\r\n     * When enabled, `viewBox` will be set on the svg root element instead of `width` and `height`.\r\n     * Requires that the chart aspect ratio be defined using chart.width(w) and chart.height(h).\r\n     *\r\n     * This will maintain the aspect ratio while enabling the chart to resize responsively to the\r\n     * space given to the chart using CSS. For example, the chart can use `width: 100%; height:\r\n     * 100%` or absolute positioning to resize to its parent div.\r\n     *\r\n     * Since the text will be sized as if the chart is drawn according to the width and height, and\r\n     * will be resized if the chart is any other size, you need to set the chart width and height so\r\n     * that the text looks good. In practice, 600x400 seems to work pretty well for most charts.\r\n     *\r\n     * You can see examples of this resizing strategy in the [Chart Resizing\r\n     * Examples](http://dc-js.github.io/dc.js/resizing/); just add `?resize=viewbox` to any of the\r\n     * one-chart examples to enable `useViewBoxResizing`.\r\n     * @param {Boolean} [useViewBoxResizing=false]\r\n     * @returns {Boolean|BaseMixin}\r\n     */\r\n    useViewBoxResizing (useViewBoxResizing) {\r\n        if (!arguments.length) {\r\n            return this._useViewBoxResizing;\r\n        }\r\n        this._useViewBoxResizing = useViewBoxResizing;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * **mandatory**\r\n     *\r\n     * Set or get the dimension attribute of a chart. In `dc`, a dimension can be any valid\r\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter dimension}\r\n     *\r\n     * If a value is given, then it will be used as the new dimension. If no value is specified then\r\n     * the current dimension will be returned.\r\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter.dimension}\r\n     * @example\r\n     * var index = crossfilter([]);\r\n     * var dimension = index.dimension(pluck('key'));\r\n     * chart.dimension(dimension);\r\n     * @param {crossfilter.dimension} [dimension]\r\n     * @returns {crossfilter.dimension|BaseMixin}\r\n     */\r\n    dimension (dimension) {\r\n        if (!arguments.length) {\r\n            return this._dimension;\r\n        }\r\n        this._dimension = dimension;\r\n        this.expireCache();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the data callback or retrieve the chart's data set. The data callback is passed the chart's\r\n     * group and by default will return\r\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all}.\r\n     * This behavior may be modified to, for instance, return only the top 5 groups.\r\n     * @example\r\n     * // Default data function\r\n     * chart.data(function (group) { return group.all(); });\r\n     *\r\n     * chart.data(function (group) { return group.top(5); });\r\n     * @param {Function} [callback]\r\n     * @returns {*|BaseMixin}\r\n     */\r\n    data (callback) {\r\n        if (!arguments.length) {\r\n            return this._data(this._group);\r\n        }\r\n        this._data = typeof callback === 'function' ? callback : utils.constant(callback);\r\n        this.expireCache();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * **mandatory**\r\n     *\r\n     * Set or get the group attribute of a chart. In `dc` a group is a\r\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter group}.\r\n     * Usually the group should be created from the particular dimension associated with the same chart. If a value is\r\n     * given, then it will be used as the new group.\r\n     *\r\n     * If no value specified then the current group will be returned.\r\n     * If `name` is specified then it will be used to generate legend label.\r\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\r\n     * @example\r\n     * var index = crossfilter([]);\r\n     * var dimension = index.dimension(pluck('key'));\r\n     * chart.dimension(dimension);\r\n     * chart.group(dimension.group().reduceSum());\r\n     * @param {crossfilter.group} [group]\r\n     * @param {String} [name]\r\n     * @returns {crossfilter.group|BaseMixin}\r\n     */\r\n    group (group, name) {\r\n        if (!arguments.length) {\r\n            return this._group;\r\n        }\r\n        this._group = group;\r\n        this._groupName = name;\r\n        this.expireCache();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set an accessor to order ordinal dimensions.  The chart uses\r\n     * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort Array.sort}\r\n     * to sort elements; this accessor returns the value to order on.\r\n     * @example\r\n     * // Default ordering accessor\r\n     * _chart.ordering(pluck('key'));\r\n     * @param {Function} [orderFunction]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    ordering (orderFunction) {\r\n        if (!arguments.length) {\r\n            return this._ordering;\r\n        }\r\n        this._ordering = orderFunction;\r\n        this.expireCache();\r\n        return this;\r\n    }\r\n\r\n    _computeOrderedGroups (data) {\r\n        // clone the array before sorting, otherwise Array.sort sorts in-place\r\n        return Array.from(data).sort((a, b) => ascending(this._ordering(a), this._ordering(b)));\r\n    }\r\n\r\n    /**\r\n     * Clear all filters associated with this chart. The same effect can be achieved by calling\r\n     * {@link BaseMixin#filter chart.filter(null)}.\r\n     * @returns {BaseMixin}\r\n     */\r\n    filterAll () {\r\n        return this.filter(null);\r\n    }\r\n\r\n    /**\r\n     * Execute d3 single selection in the chart's scope using the given selector and return the d3\r\n     * selection.\r\n     *\r\n     * This function is **not chainable** since it does not return a chart instance; however the d3\r\n     * selection result can be chained to d3 function calls.\r\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3.select}\r\n     * @example\r\n     * // Has the same effect as d3.select('#chart-id').select(selector)\r\n     * chart.select(selector)\r\n     * @param {String} sel CSS selector string\r\n     * @returns {d3.selection}\r\n     */\r\n    select (sel) {\r\n        return this._root.select(sel);\r\n    }\r\n\r\n    /**\r\n     * Execute in scope d3 selectAll using the given selector and return d3 selection result.\r\n     *\r\n     * This function is **not chainable** since it does not return a chart instance; however the d3\r\n     * selection result can be chained to d3 function calls.\r\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#selectAll d3.selectAll}\r\n     * @example\r\n     * // Has the same effect as d3.select('#chart-id').selectAll(selector)\r\n     * chart.selectAll(selector)\r\n     * @param {String} sel CSS selector string\r\n     * @returns {d3.selection}\r\n     */\r\n    selectAll (sel) {\r\n        return this._root ? this._root.selectAll(sel) : null;\r\n    }\r\n\r\n    /**\r\n     * Set the root SVGElement to either be an existing chart's root; or any valid [d3 single\r\n     * selector](https://github.com/d3/d3-selection/blob/master/README.md#selecting-elements) specifying a dom\r\n     * block element such as a div; or a dom element or d3 selection. Optionally registers the chart\r\n     * within the chartGroup. This class is called internally on chart initialization, but be called\r\n     * again to relocate the chart. However, it will orphan any previously created SVGElements.\r\n     * @param {anchorChart|anchorSelector|anchorNode} [parent]\r\n     * @param {String} [chartGroup]\r\n     * @returns {String|node|d3.selection|BaseMixin}\r\n     */\r\n    anchor (parent, chartGroup) {\r\n        if (!arguments.length) {\r\n            return this._anchor;\r\n        }\r\n        if (instanceOfChart(parent)) {\r\n            this._anchor = parent.anchor();\r\n            if (this._anchor.children) { // is _anchor a div?\r\n                this._anchor = `#${parent.anchorName()}`;\r\n            }\r\n            this._root = parent.root();\r\n            this._isChild = true;\r\n        } else if (parent) {\r\n            if (parent.select && parent.classed) { // detect d3 selection\r\n                this._anchor = parent.node();\r\n            } else {\r\n                this._anchor = parent;\r\n            }\r\n            this._root = select(this._anchor);\r\n            this._root.classed(constants.CHART_CLASS, true);\r\n            registerChart(this, chartGroup);\r\n            this._isChild = false;\r\n        } else {\r\n            throw new BadArgumentException('parent must be defined');\r\n        }\r\n        this._chartGroup = chartGroup;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the DOM id for the chart's anchored location.\r\n     * @returns {String}\r\n     */\r\n    anchorName () {\r\n        const a = this.anchor();\r\n        if (a && a.id) {\r\n            return a.id;\r\n        }\r\n        if (a && a.replace) {\r\n            return a.replace('#', '');\r\n        }\r\n        return `dc-chart${this.chartID()}`;\r\n    }\r\n\r\n    /**\r\n     * Returns the root element where a chart resides. Usually it will be the parent div element where\r\n     * the SVGElement was created. You can also pass in a new root element however this is usually handled by\r\n     * dc internally. Resetting the root element on a chart outside of dc internals may have\r\n     * unexpected consequences.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement HTMLElement}\r\n     * @param {HTMLElement} [rootElement]\r\n     * @returns {HTMLElement|BaseMixin}\r\n     */\r\n    root (rootElement) {\r\n        if (!arguments.length) {\r\n            return this._root;\r\n        }\r\n        this._root = rootElement;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the top SVGElement for this specific chart. You can also pass in a new SVGElement,\r\n     * however this is usually handled by dc internally. Resetting the SVGElement on a chart outside\r\n     * of dc internals may have unexpected consequences.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\r\n     * @param {SVGElement|d3.selection} [svgElement]\r\n     * @returns {SVGElement|d3.selection|BaseMixin}\r\n     */\r\n    svg (svgElement) {\r\n        if (!arguments.length) {\r\n            return this._svg;\r\n        }\r\n        this._svg = svgElement;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove the chart's SVGElements from the dom and recreate the container SVGElement.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\r\n     * @returns {SVGElement}\r\n     */\r\n    resetSvg () {\r\n        this.select('svg').remove();\r\n        return this.generateSvg();\r\n    }\r\n\r\n    sizeSvg () {\r\n        if (this._svg) {\r\n            if (!this._useViewBoxResizing) {\r\n                this._svg\r\n                    .attr('width', this.width())\r\n                    .attr('height', this.height());\r\n            } else if (!this._svg.attr('viewBox')) {\r\n                this._svg\r\n                    .attr('viewBox', `0 0 ${this.width()} ${this.height()}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    generateSvg () {\r\n        this._svg = this.root().append('svg');\r\n        this.sizeSvg();\r\n        return this._svg;\r\n    }\r\n\r\n    /**\r\n     * Set or get the filter printer function. The filter printer function is used to generate human\r\n     * friendly text for filter value(s) associated with the chart instance. The text will get shown\r\n     * in the `.filter element; see {@link BaseMixin#turnOnControls turnOnControls}.\r\n     *\r\n     * By default dc charts use a default filter printer {@link printers.filters printers.filters}\r\n     * that provides simple printing support for both single value and ranged filters.\r\n     * @example\r\n     * // for a chart with an ordinal brush, print the filters in upper case\r\n     * chart.filterPrinter(function(filters) {\r\n     *   return filters.map(function(f) { return f.toUpperCase(); }).join(', ');\r\n     * });\r\n     * // for a chart with a range brush, print the filter as start and extent\r\n     * chart.filterPrinter(function(filters) {\r\n     *   return 'start ' + utils.printSingleValue(filters[0][0]) +\r\n     *     ' extent ' + utils.printSingleValue(filters[0][1] - filters[0][0]);\r\n     * });\r\n     * @param {Function} [filterPrinterFunction=printers.filters]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    filterPrinter (filterPrinterFunction) {\r\n        if (!arguments.length) {\r\n            return this._filterPrinter;\r\n        }\r\n        this._filterPrinter = filterPrinterFunction;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * If set, use the `visibility` attribute instead of the `display` attribute for showing/hiding\r\n     * chart reset and filter controls, for less disruption to the layout.\r\n     * @param {Boolean} [controlsUseVisibility=false]\r\n     * @returns {Boolean|BaseMixin}\r\n     */\r\n    controlsUseVisibility (controlsUseVisibility) {\r\n        if (!arguments.length) {\r\n            return this._controlsUseVisibility;\r\n        }\r\n        this._controlsUseVisibility = controlsUseVisibility;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn on optional control elements within the root element. dc currently supports the\r\n     * following html control elements.\r\n     * * root.selectAll('.reset') - elements are turned on if the chart has an active filter. This type\r\n     * of control element is usually used to store a reset link to allow user to reset filter on a\r\n     * certain chart. This element will be turned off automatically if the filter is cleared.\r\n     * * root.selectAll('.filter') elements are turned on if the chart has an active filter. The text\r\n     * content of this element is then replaced with the current filter value using the filter printer\r\n     * function. This type of element will be turned off automatically if the filter is cleared.\r\n     * @returns {BaseMixin}\r\n     */\r\n    turnOnControls () {\r\n        if (this._root) {\r\n            const attribute = this.controlsUseVisibility() ? 'visibility' : 'display';\r\n            this.selectAll('.reset').style(attribute, null);\r\n            this.selectAll('.filter').text(this._filterPrinter(this.filters())).style(attribute, null);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn off optional control elements within the root element.\r\n     * @see {@link BaseMixin#turnOnControls turnOnControls}\r\n     * @returns {BaseMixin}\r\n     */\r\n    turnOffControls () {\r\n        if (this._root) {\r\n            const attribute = this.controlsUseVisibility() ? 'visibility' : 'display';\r\n            const value = this.controlsUseVisibility() ? 'hidden' : 'none';\r\n            this.selectAll('.reset').style(attribute, value);\r\n            this.selectAll('.filter').style(attribute, value).text(this.filter());\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the animation transition duration (in milliseconds) for this chart instance.\r\n     * @param {Number} [duration=750]\r\n     * @returns {Number|BaseMixin}\r\n     */\r\n    transitionDuration (duration) {\r\n        if (!arguments.length) {\r\n            return this._transitionDuration;\r\n        }\r\n        this._transitionDuration = duration;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the animation transition delay (in milliseconds) for this chart instance.\r\n     * @param {Number} [delay=0]\r\n     * @returns {Number|BaseMixin}\r\n     */\r\n    transitionDelay (delay) {\r\n        if (!arguments.length) {\r\n            return this._transitionDelay;\r\n        }\r\n        this._transitionDelay = delay;\r\n        return this;\r\n    }\r\n\r\n    _mandatoryAttributes (_) {\r\n        if (!arguments.length) {\r\n            return this._mandatoryAttributesList;\r\n        }\r\n        this._mandatoryAttributesList = _;\r\n        return this;\r\n    }\r\n\r\n    checkForMandatoryAttributes (a) {\r\n        if (!this[a] || !this[a]()) {\r\n            throw new InvalidStateException(`Mandatory attribute chart.${a} is missing on chart[#${this.anchorName()}]`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invoking this method will force the chart to re-render everything from scratch. Generally it\r\n     * should only be used to render the chart for the first time on the page or if you want to make\r\n     * sure everything is redrawn from scratch instead of relying on the default incremental redrawing\r\n     * behaviour.\r\n     * @returns {BaseMixin}\r\n     */\r\n    render () {\r\n        this._height = this._width = undefined; // force recalculate\r\n        this._listeners.call('preRender', this, this);\r\n\r\n        if (this._mandatoryAttributesList) {\r\n            this._mandatoryAttributesList.forEach(e => this.checkForMandatoryAttributes(e));\r\n        }\r\n\r\n        const result = this._doRender();\r\n\r\n        if (this._legend) {\r\n            this._legend.render();\r\n        }\r\n\r\n        this._activateRenderlets('postRender');\r\n\r\n        return result;\r\n    }\r\n\r\n    _activateRenderlets (event) {\r\n        this._listeners.call('pretransition', this, this);\r\n        if (this.transitionDuration() > 0 && this._svg) {\r\n            this._svg.transition().duration(this.transitionDuration()).delay(this.transitionDelay())\r\n                .on('end', () => {\r\n                    this._listeners.call('renderlet', this, this);\r\n                    if (event) {\r\n                        this._listeners.call(event, this, this);\r\n                    }\r\n                });\r\n        } else {\r\n            this._listeners.call('renderlet', this, this);\r\n            if (event) {\r\n                this._listeners.call(event, this, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calling redraw will cause the chart to re-render data changes incrementally. If there is no\r\n     * change in the underlying data dimension then calling this method will have no effect on the\r\n     * chart. Most chart interaction in dc will automatically trigger this method through internal\r\n     * events (in particular {@link redrawAll redrawAll}); therefore, you only need to\r\n     * manually invoke this function if data is manipulated outside of dc's control (for example if\r\n     * data is loaded in the background using\r\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}).\r\n     * @returns {BaseMixin}\r\n     */\r\n    redraw () {\r\n        this.sizeSvg();\r\n        this._listeners.call('preRedraw', this, this);\r\n\r\n        const result = this._doRedraw();\r\n\r\n        if (this._legend) {\r\n            this._legend.render();\r\n        }\r\n\r\n        this._activateRenderlets('postRedraw');\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Gets/sets the commit handler. If the chart has a commit handler, the handler will be called when\r\n     * the chart's filters have changed, in order to send the filter data asynchronously to a server.\r\n     *\r\n     * Unlike other functions in dc.js, the commit handler is asynchronous. It takes two arguments:\r\n     * a flag indicating whether this is a render (true) or a redraw (false), and a callback to be\r\n     * triggered once the commit is done. The callback has the standard node.js continuation signature\r\n     * with error first and result second.\r\n     * @param {Function} commitHandler\r\n     * @returns {BaseMixin}\r\n     */\r\n    commitHandler (commitHandler) {\r\n        if (!arguments.length) {\r\n            return this._commitHandler;\r\n        }\r\n        this._commitHandler = commitHandler;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Redraws all charts in the same group as this chart, typically in reaction to a filter\r\n     * change. If the chart has a {@link BaseMixin.commitFilter commitHandler}, it will\r\n     * be executed and waited for.\r\n     * @returns {BaseMixin}\r\n     */\r\n    redrawGroup () {\r\n        if (this._commitHandler) {\r\n            this._commitHandler(false, (error, result) => {\r\n                if (error) {\r\n                    console.log(error);\r\n                } else {\r\n                    redrawAll(this.chartGroup());\r\n                }\r\n            });\r\n        } else {\r\n            redrawAll(this.chartGroup());\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Renders all charts in the same group as this chart. If the chart has a\r\n     * {@link BaseMixin.commitFilter commitHandler}, it will be executed and waited for\r\n     * @returns {BaseMixin}\r\n     */\r\n    renderGroup () {\r\n        if (this._commitHandler) {\r\n            this._commitHandler(false, (error, result) => {\r\n                if (error) {\r\n                    console.log(error);\r\n                } else {\r\n                    renderAll(this.chartGroup());\r\n                }\r\n            });\r\n        } else {\r\n            renderAll(this.chartGroup());\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _invokeFilteredListener (f) {\r\n        if (f !== undefined) {\r\n            this._listeners.call('filtered', this, this, f);\r\n        }\r\n    }\r\n\r\n    _invokeZoomedListener () {\r\n        this._listeners.call('zoomed', this, this);\r\n    }\r\n\r\n    /**\r\n     * Set or get the has-filter handler. The has-filter handler is a function that checks to see if\r\n     * the chart's current filters (first argument) include a specific filter (second argument).  Using a custom has-filter handler allows\r\n     * you to change the way filters are checked for and replaced.\r\n     * @example\r\n     * // default has-filter handler\r\n     * chart.hasFilterHandler(function (filters, filter) {\r\n     *     if (filter === null || typeof(filter) === 'undefined') {\r\n     *         return filters.length > 0;\r\n     *     }\r\n     *     return filters.some(function (f) {\r\n     *         return filter <= f && filter >= f;\r\n     *     });\r\n     * });\r\n     *\r\n     * // custom filter handler (no-op)\r\n     * chart.hasFilterHandler(function(filters, filter) {\r\n     *     return false;\r\n     * });\r\n     * @param {Function} [hasFilterHandler]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    hasFilterHandler (hasFilterHandler) {\r\n        if (!arguments.length) {\r\n            return this._hasFilterHandler;\r\n        }\r\n        this._hasFilterHandler = hasFilterHandler;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check whether any active filter or a specific filter is associated with particular chart instance.\r\n     * This function is **not chainable**.\r\n     * @see {@link BaseMixin#hasFilterHandler hasFilterHandler}\r\n     * @param {*} [filter]\r\n     * @returns {Boolean}\r\n     */\r\n    hasFilter (filter) {\r\n        return this._hasFilterHandler(this._filters, filter);\r\n    }\r\n\r\n    /**\r\n     * Set or get the remove filter handler. The remove filter handler is a function that removes a\r\n     * filter from the chart's current filters. Using a custom remove filter handler allows you to\r\n     * change how filters are removed or perform additional work when removing a filter, e.g. when\r\n     * using a filter server other than crossfilter.\r\n     *\r\n     * The handler should return a new or modified array as the result.\r\n     * @example\r\n     * // default remove filter handler\r\n     * chart.removeFilterHandler(function (filters, filter) {\r\n     *     for (var i = 0; i < filters.length; i++) {\r\n     *         if (filters[i] <= filter && filters[i] >= filter) {\r\n     *             filters.splice(i, 1);\r\n     *             break;\r\n     *         }\r\n     *     }\r\n     *     return filters;\r\n     * });\r\n     *\r\n     * // custom filter handler (no-op)\r\n     * chart.removeFilterHandler(function(filters, filter) {\r\n     *     return filters;\r\n     * });\r\n     * @param {Function} [removeFilterHandler]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    removeFilterHandler (removeFilterHandler) {\r\n        if (!arguments.length) {\r\n            return this._removeFilterHandler;\r\n        }\r\n        this._removeFilterHandler = removeFilterHandler;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the add filter handler. The add filter handler is a function that adds a filter to\r\n     * the chart's filter list. Using a custom add filter handler allows you to change the way filters\r\n     * are added or perform additional work when adding a filter, e.g. when using a filter server other\r\n     * than crossfilter.\r\n     *\r\n     * The handler should return a new or modified array as the result.\r\n     * @example\r\n     * // default add filter handler\r\n     * chart.addFilterHandler(function (filters, filter) {\r\n     *     filters.push(filter);\r\n     *     return filters;\r\n     * });\r\n     *\r\n     * // custom filter handler (no-op)\r\n     * chart.addFilterHandler(function(filters, filter) {\r\n     *     return filters;\r\n     * });\r\n     * @param {Function} [addFilterHandler]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    addFilterHandler (addFilterHandler) {\r\n        if (!arguments.length) {\r\n            return this._addFilterHandler;\r\n        }\r\n        this._addFilterHandler = addFilterHandler;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the reset filter handler. The reset filter handler is a function that resets the\r\n     * chart's filter list by returning a new list. Using a custom reset filter handler allows you to\r\n     * change the way filters are reset, or perform additional work when resetting the filters,\r\n     * e.g. when using a filter server other than crossfilter.\r\n     *\r\n     * The handler should return a new or modified array as the result.\r\n     * @example\r\n     * // default remove filter handler\r\n     * function (filters) {\r\n     *     return [];\r\n     * }\r\n     *\r\n     * // custom filter handler (no-op)\r\n     * chart.resetFilterHandler(function(filters) {\r\n     *     return filters;\r\n     * });\r\n     * @param {Function} [resetFilterHandler]\r\n     * @returns {BaseMixin}\r\n     */\r\n    resetFilterHandler (resetFilterHandler) {\r\n        if (!arguments.length) {\r\n            return this._resetFilterHandler;\r\n        }\r\n        this._resetFilterHandler = resetFilterHandler;\r\n        return this;\r\n    }\r\n\r\n    applyFilters (filters) {\r\n        if (this.dimension() && this.dimension().filter) {\r\n            const fs = this._filterHandler(this.dimension(), filters);\r\n            if (fs) {\r\n                filters = fs;\r\n            }\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    /**\r\n     * Replace the chart filter. This is equivalent to calling `chart.filter(null).filter(filter)`\r\n     * but more efficient because the filter is only applied once.\r\n     *\r\n     * @param {*} [filter]\r\n     * @returns {BaseMixin}\r\n     */\r\n    replaceFilter (filter) {\r\n        this._filters = this._resetFilterHandler(this._filters);\r\n        this.filter(filter);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Filter the chart by the given parameter, or return the current filter if no input parameter\r\n     * is given.\r\n     *\r\n     * The filter parameter can take one of these forms:\r\n     * * A single value: the value will be toggled (added if it is not present in the current\r\n     * filters, removed if it is present)\r\n     * * An array containing a single array of values (`[[value,value,value]]`): each value is\r\n     * toggled\r\n     * * When appropriate for the chart, a {@link filters dc filter object} such as\r\n     *   * {@link filters.RangedFilter `filters.RangedFilter`} for the\r\n     * {@link CoordinateGridMixin CoordinateGridMixin} charts\r\n     *   * {@link filters.TwoDimensionalFilter `filters.TwoDimensionalFilter`} for the\r\n     * {@link HeatMap heat map}\r\n     *   * {@link filters.RangedTwoDimensionalFilter `filters.RangedTwoDimensionalFilter`}\r\n     * for the {@link ScatterPlot scatter plot}\r\n     * * `null`: the filter will be reset using the\r\n     * {@link BaseMixin#resetFilterHandler resetFilterHandler}\r\n     *\r\n     * Note that this is always a toggle (even when it doesn't make sense for the filter type). If\r\n     * you wish to replace the current filter, either call `chart.filter(null)` first - or it's more\r\n     * efficient to call {@link BaseMixin#replaceFilter `chart.replaceFilter(filter)`} instead.\r\n     *\r\n     * Each toggle is executed by checking if the value is already present using the\r\n     * {@link BaseMixin#hasFilterHandler hasFilterHandler}; if it is not present, it is added\r\n     * using the {@link BaseMixin#addFilterHandler addFilterHandler}; if it is already present,\r\n     * it is removed using the {@link BaseMixin#removeFilterHandler removeFilterHandler}.\r\n     *\r\n     * Once the filters array has been updated, the filters are applied to the\r\n     * crossfilter dimension, using the {@link BaseMixin#filterHandler filterHandler}.\r\n     *\r\n     * Once you have set the filters, call {@link BaseMixin#redrawGroup `chart.redrawGroup()`}\r\n     * (or {@link redrawAll `redrawAll()`}) to redraw the chart's group.\r\n     * @see {@link BaseMixin#addFilterHandler addFilterHandler}\r\n     * @see {@link BaseMixin#removeFilterHandler removeFilterHandler}\r\n     * @see {@link BaseMixin#resetFilterHandler resetFilterHandler}\r\n     * @see {@link BaseMixin#filterHandler filterHandler}\r\n     * @example\r\n     * // filter by a single string\r\n     * chart.filter('Sunday');\r\n     * // filter by a single age\r\n     * chart.filter(18);\r\n     * // filter by a set of states\r\n     * chart.filter([['MA', 'TX', 'ND', 'WA']]);\r\n     * // filter by range -- note the use of filters.RangedFilter, which is different\r\n     * // from the syntax for filtering a crossfilter dimension directly, dimension.filter([15,20])\r\n     * chart.filter(filters.RangedFilter(15,20));\r\n     * @param {*} [filter]\r\n     * @returns {BaseMixin}\r\n     */\r\n    filter (filter) {\r\n        if (!arguments.length) {\r\n            return this._filters.length > 0 ? this._filters[0] : null;\r\n        }\r\n        let filters = this._filters;\r\n        if (filter instanceof Array && filter[0] instanceof Array && !filter.isFiltered) {\r\n            // toggle each filter\r\n            filter[0].forEach(f => {\r\n                if (this._hasFilterHandler(filters, f)) {\r\n                    filters = this._removeFilterHandler(filters, f);\r\n                } else {\r\n                    filters = this._addFilterHandler(filters, f);\r\n                }\r\n            });\r\n        } else if (filter === null) {\r\n            filters = this._resetFilterHandler(filters);\r\n        } else {\r\n            if (this._hasFilterHandler(filters, filter)) {\r\n                filters = this._removeFilterHandler(filters, filter);\r\n            } else {\r\n                filters = this._addFilterHandler(filters, filter);\r\n            }\r\n        }\r\n        this._filters = this.applyFilters(filters);\r\n        this._invokeFilteredListener(filter);\r\n\r\n        if (this._root !== null && this.hasFilter()) {\r\n            this.turnOnControls();\r\n        } else {\r\n            this.turnOffControls();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns all current filters. This method does not perform defensive cloning of the internal\r\n     * filter array before returning, therefore any modification of the returned array will effect the\r\n     * chart's internal filter storage.\r\n     * @returns {Array<*>}\r\n     */\r\n    filters () {\r\n        return this._filters;\r\n    }\r\n\r\n    highlightSelected (e) {\r\n        select(e).classed(constants.SELECTED_CLASS, true);\r\n        select(e).classed(constants.DESELECTED_CLASS, false);\r\n    }\r\n\r\n    fadeDeselected (e) {\r\n        select(e).classed(constants.SELECTED_CLASS, false);\r\n        select(e).classed(constants.DESELECTED_CLASS, true);\r\n    }\r\n\r\n    resetHighlight (e) {\r\n        select(e).classed(constants.SELECTED_CLASS, false);\r\n        select(e).classed(constants.DESELECTED_CLASS, false);\r\n    }\r\n\r\n    /**\r\n     * This function is passed to d3 as the onClick handler for each chart. The default behavior is to\r\n     * filter on the clicked datum (passed to the callback) and redraw the chart group.\r\n     *\r\n     * This function can be replaced in order to change the click behavior (but first look at\r\n     * @example\r\n     * var oldHandler = chart.onClick;\r\n     * chart.onClick = function(datum) {\r\n     *   // use datum.\r\n     * @param {*} datum\r\n     * @return {undefined}\r\n     */\r\n    onClick (datum) {\r\n        const filter = this.keyAccessor()(datum);\r\n        events.trigger(() => {\r\n            this.filter(filter);\r\n            this.redrawGroup();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set or get the filter handler. The filter handler is a function that performs the filter action\r\n     * on a specific dimension. Using a custom filter handler allows you to perform additional logic\r\n     * before or after filtering.\r\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter crossfilter.dimension.filter}\r\n     * @example\r\n     * // the default filter handler handles all possible cases for the charts in dc.js\r\n     * // you can replace it with something more specialized for your own chart\r\n     * chart.filterHandler(function (dimension, filters) {\r\n     *     if (filters.length === 0) {\r\n     *         // the empty case (no filtering)\r\n     *         dimension.filter(null);\r\n     *     } else if (filters.length === 1 && !filters[0].isFiltered) {\r\n     *         // single value and not a function-based filter\r\n     *         dimension.filterExact(filters[0]);\r\n     *     } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\r\n     *         // single range-based filter\r\n     *         dimension.filterRange(filters[0]);\r\n     *     } else {\r\n     *         // an array of values, or an array of filter objects\r\n     *         dimension.filterFunction(function (d) {\r\n     *             for (var i = 0; i < filters.length; i++) {\r\n     *                 var filter = filters[i];\r\n     *                 if (filter.isFiltered && filter.isFiltered(d)) {\r\n     *                     return true;\r\n     *                 } else if (filter <= d && filter >= d) {\r\n     *                     return true;\r\n     *                 }\r\n     *             }\r\n     *             return false;\r\n     *         });\r\n     *     }\r\n     *     return filters;\r\n     * });\r\n     *\r\n     * // custom filter handler\r\n     * chart.filterHandler(function(dimension, filter){\r\n     *     var newFilter = filter + 10;\r\n     *     dimension.filter(newFilter);\r\n     *     return newFilter; // set the actual filter value to the new value\r\n     * });\r\n     * @param {Function} [filterHandler]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    filterHandler (filterHandler) {\r\n        if (!arguments.length) {\r\n            return this._filterHandler;\r\n        }\r\n        this._filterHandler = filterHandler;\r\n        return this;\r\n    }\r\n\r\n    // abstract function stub\r\n    _doRender () {\r\n        // do nothing in base, should be overridden by sub-function\r\n        return this;\r\n    }\r\n\r\n    _doRedraw () {\r\n        // do nothing in base, should be overridden by sub-function\r\n        return this;\r\n    }\r\n\r\n    legendables () {\r\n        // do nothing in base, should be overridden by sub-function\r\n        return [];\r\n    }\r\n\r\n    legendHighlight () {\r\n        // do nothing in base, should be overridden by sub-function\r\n    }\r\n\r\n    legendReset () {\r\n        // do nothing in base, should be overridden by sub-function\r\n    }\r\n\r\n    legendToggle () {\r\n        // do nothing in base, should be overriden by sub-function\r\n    }\r\n\r\n    isLegendableHidden () {\r\n        // do nothing in base, should be overridden by sub-function\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Set or get the key accessor function. The key accessor function is used to retrieve the key\r\n     * value from the crossfilter group. Key values are used differently in different charts, for\r\n     * example keys correspond to slices in a pie chart and x axis positions in a grid coordinate chart.\r\n     * @example\r\n     * // default key accessor\r\n     * chart.keyAccessor(function(d) { return d.key; });\r\n     * // custom key accessor for a multi-value crossfilter reduction\r\n     * chart.keyAccessor(function(p) { return p.value.absGain; });\r\n     * @param {Function} [keyAccessor]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    keyAccessor (keyAccessor) {\r\n        if (!arguments.length) {\r\n            return this._keyAccessor;\r\n        }\r\n        this._keyAccessor = keyAccessor;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the value accessor function. The value accessor function is used to retrieve the\r\n     * value from the crossfilter group. Group values are used differently in different charts, for\r\n     * example values correspond to slice sizes in a pie chart and y axis positions in a grid\r\n     * coordinate chart.\r\n     * @example\r\n     * // default value accessor\r\n     * chart.valueAccessor(function(d) { return d.value; });\r\n     * // custom value accessor for a multi-value crossfilter reduction\r\n     * chart.valueAccessor(function(p) { return p.value.percentageGain; });\r\n     * @param {Function} [valueAccessor]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    valueAccessor (valueAccessor) {\r\n        if (!arguments.length) {\r\n            return this._valueAccessor;\r\n        }\r\n        this._valueAccessor = valueAccessor;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the label function. The chart class will use this function to render labels for each\r\n     * child element in the chart, e.g. slices in a pie chart or bubbles in a bubble chart. Not every\r\n     * chart supports the label function, for example line chart does not use this function\r\n     * at all. By default, enables labels; pass false for the second parameter if this is not desired.\r\n     * @example\r\n     * // default label function just return the key\r\n     * chart.label(function(d) { return d.key; });\r\n     * // label function has access to the standard d3 data binding and can get quite complicated\r\n     * chart.label(function(d) { return d.data.key + '(' + Math.floor(d.data.value / all.value() * 100) + '%)'; });\r\n     * @param {Function} [labelFunction]\r\n     * @param {Boolean} [enableLabels=true]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    label (labelFunction, enableLabels) {\r\n        if (!arguments.length) {\r\n            return this._label;\r\n        }\r\n        this._label = labelFunction;\r\n        if ((enableLabels === undefined) || enableLabels) {\r\n            this._renderLabel = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn on/off label rendering\r\n     * @param {Boolean} [renderLabel=false]\r\n     * @returns {Boolean|BaseMixin}\r\n     */\r\n    renderLabel (renderLabel) {\r\n        if (!arguments.length) {\r\n            return this._renderLabel;\r\n        }\r\n        this._renderLabel = renderLabel;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the title function. The chart class will use this function to render the SVGElement title\r\n     * (usually interpreted by browser as tooltips) for each child element in the chart, e.g. a slice\r\n     * in a pie chart or a bubble in a bubble chart. Almost every chart supports the title function;\r\n     * however in grid coordinate charts you need to turn off the brush in order to see titles, because\r\n     * otherwise the brush layer will block tooltip triggering.\r\n     * @example\r\n     * // default title function shows \"key: value\"\r\n     * chart.title(function(d) { return d.key + ': ' + d.value; });\r\n     * // title function has access to the standard d3 data binding and can get quite complicated\r\n     * chart.title(function(p) {\r\n     *    return p.key.getFullYear()\r\n     *        + '\\n'\r\n     *        + 'Index Gain: ' + numberFormat(p.value.absGain) + '\\n'\r\n     *        + 'Index Gain in Percentage: ' + numberFormat(p.value.percentageGain) + '%\\n'\r\n     *        + 'Fluctuation / Index Ratio: ' + numberFormat(p.value.fluctuationPercentage) + '%';\r\n     * });\r\n     * @param {Function} [titleFunction]\r\n     * @returns {Function|BaseMixin}\r\n     */\r\n    title (titleFunction) {\r\n        if (!arguments.length) {\r\n            return this._title;\r\n        }\r\n        this._title = titleFunction;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn on/off title rendering, or return the state of the render title flag if no arguments are\r\n     * given.\r\n     * @param {Boolean} [renderTitle=true]\r\n     * @returns {Boolean|BaseMixin}\r\n     */\r\n    renderTitle (renderTitle) {\r\n        if (!arguments.length) {\r\n            return this._renderTitle;\r\n        }\r\n        this._renderTitle = renderTitle;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the chart group to which this chart belongs. Chart groups are rendered or redrawn\r\n     * together since it is expected they share the same underlying crossfilter data set.\r\n     * @param {String} [chartGroup]\r\n     * @returns {String|BaseMixin}\r\n     */\r\n    chartGroup (chartGroup) {\r\n        if (!arguments.length) {\r\n            return this._chartGroup;\r\n        }\r\n        if (!this._isChild) {\r\n            deregisterChart(this, this._chartGroup);\r\n        }\r\n        this._chartGroup = chartGroup;\r\n        if (!this._isChild) {\r\n            registerChart(this, this._chartGroup);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Expire the internal chart cache. dc charts cache some data internally on a per chart basis to\r\n     * speed up rendering and avoid unnecessary calculation; however it might be useful to clear the\r\n     * cache if you have changed state which will affect rendering.  For example, if you invoke\r\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add crossfilter.add}\r\n     * function or reset group or dimension after rendering, it is a good idea to\r\n     * clear the cache to make sure charts are rendered properly.\r\n     * @returns {BaseMixin}\r\n     */\r\n    expireCache () {\r\n        // do nothing in base, should be overridden by sub-function\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Attach a Legend widget to this chart. The legend widget will automatically draw legend labels\r\n     * based on the color setting and names associated with each group.\r\n     * @example\r\n     * chart.legend(new Legend().x(400).y(10).itemHeight(13).gap(5))\r\n     * @param {Legend} [legend]\r\n     * @returns {Legend|BaseMixin}\r\n     */\r\n    legend (legend) {\r\n        if (!arguments.length) {\r\n            return this._legend;\r\n        }\r\n        this._legend = legend;\r\n        this._legend.parent(this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the internal numeric ID of the chart.\r\n     * @returns {String}\r\n     */\r\n    chartID () {\r\n        return this.__dcFlag__;\r\n    }\r\n\r\n    /**\r\n     * Set chart options using a configuration object. Each key in the object will cause the method of\r\n     * the same name to be called with the value to set that attribute for the chart.\r\n     * @example\r\n     * chart.options({dimension: myDimension, group: myGroup});\r\n     * @param {{}} opts\r\n     * @returns {BaseMixin}\r\n     */\r\n    options (opts) {\r\n        const applyOptions = [\r\n            'anchor',\r\n            'group',\r\n            'xAxisLabel',\r\n            'yAxisLabel',\r\n            'stack',\r\n            'title',\r\n            'point',\r\n            'getColor',\r\n            'overlayGeoJson'\r\n        ];\r\n\r\n        for (const o in opts) {\r\n            if (typeof (this[o]) === 'function') {\r\n                if (opts[o] instanceof Array && applyOptions.indexOf(o) !== -1) {\r\n                    this[o].apply(this, opts[o]);\r\n                } else {\r\n                    this[o].call(this, opts[o]);\r\n                }\r\n            } else {\r\n                logger.debug(`Not a valid option setter name: ${o}`);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * All dc chart instance supports the following listeners.\r\n     * Supports the following events:\r\n     * * `renderlet` - This listener function will be invoked after transitions after redraw and render. Replaces the\r\n     * deprecated {@link BaseMixin#renderlet renderlet} method.\r\n     * * `pretransition` - Like `.on('renderlet', ...)` but the event is fired before transitions start.\r\n     * * `preRender` - This listener function will be invoked before chart rendering.\r\n     * * `postRender` - This listener function will be invoked after chart finish rendering including\r\n     * all renderlets' logic.\r\n     * * `preRedraw` - This listener function will be invoked before chart redrawing.\r\n     * * `postRedraw` - This listener function will be invoked after chart finish redrawing\r\n     * including all renderlets' logic.\r\n     * * `filtered` - This listener function will be invoked after a filter is applied, added or removed.\r\n     * * `zoomed` - This listener function will be invoked after a zoom is triggered.\r\n     * @see {@link https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_on d3.dispatch.on}\r\n     * @example\r\n     * .on('renderlet', function(chart, filter){...})\r\n     * .on('pretransition', function(chart, filter){...})\r\n     * .on('preRender', function(chart){...})\r\n     * .on('postRender', function(chart){...})\r\n     * .on('preRedraw', function(chart){...})\r\n     * .on('postRedraw', function(chart){...})\r\n     * .on('filtered', function(chart, filter){...})\r\n     * .on('zoomed', function(chart, filter){...})\r\n     * @param {String} event\r\n     * @param {Function} listener\r\n     * @returns {BaseMixin}\r\n     */\r\n    on (event, listener) {\r\n        this._listeners.on(event, listener);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * A renderlet is similar to an event listener on rendering event. Multiple renderlets can be added\r\n     * to an individual chart.  Each time a chart is rerendered or redrawn the renderlets are invoked\r\n     * right after the chart finishes its transitions, giving you a way to modify the SVGElements.\r\n     * Renderlet functions take the chart instance as the only input parameter and you can\r\n     * use the dc API or use raw d3 to achieve pretty much any effect.\r\n     *\r\n     * Use {@link BaseMixin#on on} with a 'renderlet' prefix.\r\n     * Generates a random key for the renderlet, which makes it hard to remove.\r\n     * @deprecated chart.renderlet has been deprecated. Please use chart.on(\"renderlet.<renderletKey>\", renderletFunction)\r\n     * @example\r\n     * // do this instead of .renderlet(function(chart) { ... })\r\n     * chart.on(\"renderlet\", function(chart){\r\n     *     // mix of dc API and d3 manipulation\r\n     *     chart.select('g.y').style('display', 'none');\r\n     *     // its a closure so you can also access other chart variable available in the closure scope\r\n     *     moveChart.filter(chart.filter());\r\n     * });\r\n     * @param {Function} renderletFunction\r\n     * @returns {BaseMixin}\r\n     */\r\n    renderlet (renderletFunction) {\r\n        logger.warnOnce('chart.renderlet has been deprecated. Please use chart.on(\"renderlet.<renderletKey>\", renderletFunction)');\r\n        this.on(`renderlet.${utils.uniqueId()}`, renderletFunction);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport const baseMixin = () => new BaseMixin();\r\n","import {scaleLinear, scaleOrdinal, scaleQuantize} from 'd3-scale';\r\nimport {interpolateHcl} from 'd3-interpolate';\r\nimport {max, min} from 'd3-array';\r\n\r\nimport {config} from '../core/config';\r\nimport {utils} from '../core/utils';\r\n\r\n/**\r\n * The Color Mixin is an abstract chart functional class providing universal coloring support\r\n * as a mix-in for any concrete chart implementation.\r\n * @mixin ColorMixin\r\n * @param {Object} Base\r\n * @returns {ColorMixin}\r\n */\r\nexport const ColorMixin = Base => class extends Base {\r\n    constructor () {\r\n        super();\r\n\r\n        this._colors = scaleOrdinal(config.defaultColors());\r\n\r\n        this._colorAccessor = d => this.keyAccessor()(d);\r\n        this._colorCalculator = undefined;\r\n\r\n        {\r\n            const chart = this;\r\n            // ES6: this method is called very differently from stack-mixin and derived charts\r\n            // Removing and placing it as a member method is tricky\r\n\r\n            /**\r\n                 * Get the color for the datum d and counter i. This is used internally by charts to retrieve a color.\r\n                 * @method getColor\r\n                 * @memberof ColorMixin\r\n                 * @instance\r\n                 * @param {*} d\r\n                 * @param {Number} [i]\r\n                 * @returns {String}\r\n                 */\r\n            chart.getColor = function (d, i) {\r\n                return chart._colorCalculator ?\r\n                    chart._colorCalculator.call(this, d, i) :\r\n                    chart._colors(chart._colorAccessor.call(this, d, i));\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n         * Set the domain by determining the min and max values as retrieved by\r\n         * {@link ColorMixin#colorAccessor .colorAccessor} over the chart's dataset.\r\n         * @memberof ColorMixin\r\n         * @instance\r\n         * @returns {ColorMixin}\r\n         */\r\n    calculateColorDomain () {\r\n        const newDomain = [min(this.data(), this.colorAccessor()),\r\n                           max(this.data(), this.colorAccessor())];\r\n        this._colors.domain(newDomain);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Retrieve current color scale or set a new color scale. This methods accepts any function that\r\n         * operates like a d3 scale.\r\n         * @memberof ColorMixin\r\n         * @instance\r\n         * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\r\n         * @example\r\n         * // alternate categorical scale\r\n         * chart.colors(d3.scale.category20b());\r\n         * // ordinal scale\r\n         * chart.colors(d3.scaleOrdinal().range(['red','green','blue']));\r\n         * // convenience method, the same as above\r\n         * chart.ordinalColors(['red','green','blue']);\r\n         * // set a linear scale\r\n         * chart.linearColors([\"#4575b4\", \"#ffffbf\", \"#a50026\"]);\r\n         * @param {d3.scale} [colorScale=d3.scaleOrdinal(d3.schemeCategory20c)]\r\n         * @returns {d3.scale|ColorMixin}\r\n         */\r\n    colors (colorScale) {\r\n        if (!arguments.length) {\r\n            return this._colors;\r\n        }\r\n        if (colorScale instanceof Array) {\r\n            this._colors = scaleQuantize().range(colorScale); // deprecated legacy support, note: this fails for ordinal domains\r\n        } else {\r\n            this._colors = typeof colorScale === 'function' ? colorScale : utils.constant(colorScale);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Convenience method to set the color scale to\r\n         * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales d3.scaleOrdinal} with\r\n         * range `r`.\r\n         * @memberof ColorMixin\r\n         * @instance\r\n         * @param {Array<String>} r\r\n         * @returns {ColorMixin}\r\n         */\r\n    ordinalColors (r) {\r\n        return this.colors(scaleOrdinal().range(r));\r\n    }\r\n\r\n    /**\r\n         * Convenience method to set the color scale to an Hcl interpolated linear scale with range `r`.\r\n         * @memberof ColorMixin\r\n         * @instance\r\n         * @param {Array<Number>} r\r\n         * @returns {ColorMixin}\r\n         */\r\n    linearColors (r) {\r\n        return this.colors(scaleLinear()\r\n                .range(r)\r\n                .interpolate(interpolateHcl));\r\n    }\r\n\r\n    /**\r\n         * Set or the get color accessor function. This function will be used to map a data point in a\r\n         * crossfilter group to a color value on the color scale. The default function uses the key\r\n         * accessor.\r\n         * @memberof ColorMixin\r\n         * @instance\r\n         * @example\r\n         * // default index based color accessor\r\n         * .colorAccessor(function (d, i){return i;})\r\n         * // color accessor for a multi-value crossfilter reduction\r\n         * .colorAccessor(function (d){return d.value.absGain;})\r\n         * @param {Function} [colorAccessor]\r\n         * @returns {Function|ColorMixin}\r\n         */\r\n    colorAccessor (colorAccessor) {\r\n        if (!arguments.length) {\r\n            return this._colorAccessor;\r\n        }\r\n        this._colorAccessor = colorAccessor;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Set or get the current domain for the color mapping function. The domain must be supplied as an\r\n         * array.\r\n         *\r\n         * Note: previously this method accepted a callback function. Instead you may use a custom scale\r\n         * set by {@link ColorMixin#colors .colors}.\r\n         * @memberof ColorMixin\r\n         * @instance\r\n         * @param {Array<String>} [domain]\r\n         * @returns {Array<String>|ColorMixin}\r\n         */\r\n    colorDomain (domain) {\r\n        if (!arguments.length) {\r\n            return this._colors.domain();\r\n        }\r\n        this._colors.domain(domain);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Overrides the color selection algorithm, replacing it with a simple function.\r\n         *\r\n         * Normally colors will be determined by calling the `colorAccessor` to get a value, and then passing that\r\n         * value through the `colorScale`.\r\n         *\r\n         * But sometimes it is difficult to get a color scale to produce the desired effect. The `colorCalculator`\r\n         * takes the datum and index and returns a color directly.\r\n         * @memberof ColorMixin\r\n         * @instance\r\n         * @param {*} [colorCalculator]\r\n         * @returns {Function|ColorMixin}\r\n         */\r\n    colorCalculator (colorCalculator) {\r\n        if (!arguments.length) {\r\n            return this._colorCalculator || this.getColor;\r\n        }\r\n        this._colorCalculator = colorCalculator;\r\n        return this;\r\n    }\r\n};\r\n","import { descending, min, max } from 'd3-array';\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport {ColorMixin} from './color-mixin';\r\nimport {transition} from '../core/core';\r\nimport {events} from '../core/events';\r\n\r\n/**\r\n * This Mixin provides reusable functionalities for any chart that needs to visualize data using bubbles.\r\n * @mixin BubbleMixin\r\n * @mixes ColorMixin\r\n * @param {Object} Base\r\n * @returns {BubbleMixin}\r\n */\r\nexport const BubbleMixin = Base => class extends ColorMixin(Base) {\r\n    constructor () {\r\n        super();\r\n\r\n        this._maxBubbleRelativeSize = 0.3;\r\n        this._minRadiusWithLabel = 10;\r\n        this._sortBubbleSize = false;\r\n        this._elasticRadius = false;\r\n        this._excludeElasticZero = true;\r\n\r\n        // These cane be used by derived classes as well, so member status\r\n        this.BUBBLE_NODE_CLASS = 'node';\r\n        this.BUBBLE_CLASS = 'bubble';\r\n        this.MIN_RADIUS = 10;\r\n\r\n        this.renderLabel(true);\r\n\r\n        this.data(group => {\r\n            const data = group.all();\r\n            if (this._sortBubbleSize) {\r\n                // sort descending so smaller bubbles are on top\r\n                const radiusAccessor = this.radiusValueAccessor();\r\n                data.sort((a, b) => descending(radiusAccessor(a), radiusAccessor(b)));\r\n            }\r\n            return data;\r\n        });\r\n\r\n        this._r = scaleLinear().domain([0, 100]);\r\n    }\r\n\r\n    _rValueAccessor (d) {\r\n        return d.r;\r\n    }\r\n\r\n    /**\r\n         * Get or set the bubble radius scale. By default the bubble chart uses\r\n         * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleLinear d3.scaleLinear().domain([0, 100])}\r\n         * as its radius scale.\r\n         * @memberof BubbleMixin\r\n         * @instance\r\n         * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\r\n         * @param {d3.scale} [bubbleRadiusScale=d3.scaleLinear().domain([0, 100])]\r\n         * @returns {d3.scale|BubbleMixin}\r\n         */\r\n    r (bubbleRadiusScale) {\r\n        if (!arguments.length) {\r\n            return this._r;\r\n        }\r\n        this._r = bubbleRadiusScale;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Turn on or off the elastic bubble radius feature, or return the value of the flag. If this\r\n         * feature is turned on, then bubble radii will be automatically rescaled to fit the chart better.\r\n         * @memberof BubbleMixin\r\n         * @instance\r\n         * @param {Boolean} [elasticRadius=false]\r\n         * @returns {Boolean|BubbleChart}\r\n         */\r\n    elasticRadius (elasticRadius) {\r\n        if (!arguments.length) {\r\n            return this._elasticRadius;\r\n        }\r\n        this._elasticRadius = elasticRadius;\r\n        return this;\r\n    }\r\n\r\n    calculateRadiusDomain () {\r\n        if (this._elasticRadius) {\r\n            this.r().domain([this.rMin(), this.rMax()]);\r\n        }\r\n    }\r\n\r\n    /**\r\n         * Get or set the radius value accessor function. If set, the radius value accessor function will\r\n         * be used to retrieve a data value for each bubble. The data retrieved then will be mapped using\r\n         * the r scale to the actual bubble radius. This allows you to encode a data dimension using bubble\r\n         * size.\r\n         * @memberof BubbleMixin\r\n         * @instance\r\n         * @param {Function} [radiusValueAccessor]\r\n         * @returns {Function|BubbleMixin}\r\n         */\r\n    radiusValueAccessor (radiusValueAccessor) {\r\n        if (!arguments.length) {\r\n            return this._rValueAccessor;\r\n        }\r\n        this._rValueAccessor = radiusValueAccessor;\r\n        return this;\r\n    }\r\n\r\n    rMin () {\r\n        let values = this.data().map(this.radiusValueAccessor());\r\n        if(this._excludeElasticZero) {\r\n            values = values.filter(value => value > 0);\r\n        }\r\n        return min(values);\r\n    }\r\n\r\n    rMax () {\r\n        return max(this.data(), e => this.radiusValueAccessor()(e));\r\n    }\r\n\r\n    bubbleR (d) {\r\n        const value = this.radiusValueAccessor()(d);\r\n        let r = this.r()(value);\r\n        if (isNaN(r) || value <= 0) {\r\n            r = 0;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    _labelFunction (d) {\r\n        return this.label()(d);\r\n    }\r\n\r\n    _shouldLabel (d) {\r\n        return (this.bubbleR(d) > this._minRadiusWithLabel);\r\n    }\r\n\r\n    _labelOpacity (d) {\r\n        return this._shouldLabel(d) ? 1 : 0;\r\n    }\r\n\r\n    _labelPointerEvent (d) {\r\n        return this._shouldLabel(d) ? 'all' : 'none';\r\n    }\r\n\r\n    _doRenderLabel (bubbleGEnter) {\r\n        if (this.renderLabel()) {\r\n            let label = bubbleGEnter.select('text');\r\n\r\n            if (label.empty()) {\r\n                label = bubbleGEnter.append('text')\r\n                        .attr('text-anchor', 'middle')\r\n                        .attr('dy', '.3em')\r\n                        .on('click', d => this.onClick(d));\r\n            }\r\n\r\n            label\r\n                    .attr('opacity', 0)\r\n                    .attr('pointer-events', d => this._labelPointerEvent(d))\r\n                    .text(d => this._labelFunction(d));\r\n            transition(label, this.transitionDuration(), this.transitionDelay())\r\n                    .attr('opacity', d => this._labelOpacity(d));\r\n        }\r\n    }\r\n\r\n    doUpdateLabels (bubbleGEnter) {\r\n        if (this.renderLabel()) {\r\n            const labels = bubbleGEnter.select('text')\r\n                    .attr('pointer-events', d => this._labelPointerEvent(d))\r\n                    .text(d => this._labelFunction(d));\r\n            transition(labels, this.transitionDuration(), this.transitionDelay())\r\n                    .attr('opacity', d => this._labelOpacity(d));\r\n        }\r\n    }\r\n\r\n    _titleFunction (d) {\r\n        return this.title()(d);\r\n    }\r\n\r\n    _doRenderTitles (g) {\r\n        if (this.renderTitle()) {\r\n            const title = g.select('title');\r\n\r\n            if (title.empty()) {\r\n                g.append('title').text(d => this._titleFunction(d));\r\n            }\r\n        }\r\n    }\r\n\r\n    doUpdateTitles (g) {\r\n        if (this.renderTitle()) {\r\n            g.select('title').text(d => this._titleFunction(d));\r\n        }\r\n    }\r\n\r\n    /**\r\n         * Turn on or off the bubble sorting feature, or return the value of the flag. If enabled,\r\n         * bubbles will be sorted by their radius, with smaller bubbles in front.\r\n         * @memberof BubbleChart\r\n         * @instance\r\n         * @param {Boolean} [sortBubbleSize=false]\r\n         * @returns {Boolean|BubbleChart}\r\n         */\r\n    sortBubbleSize (sortBubbleSize) {\r\n        if (!arguments.length) {\r\n            return this._sortBubbleSize;\r\n        }\r\n        this._sortBubbleSize = sortBubbleSize;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Get or set the minimum radius. This will be used to initialize the radius scale's range.\r\n         * @memberof BubbleMixin\r\n         * @instance\r\n         * @param {Number} [radius=10]\r\n         * @returns {Number|BubbleMixin}\r\n         */\r\n    minRadius (radius) {\r\n        if (!arguments.length) {\r\n            return this.MIN_RADIUS;\r\n        }\r\n        this.MIN_RADIUS = radius;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Get or set the minimum radius for label rendering. If a bubble's radius is less than this value\r\n         * then no label will be rendered.\r\n         * @memberof BubbleMixin\r\n         * @instance\r\n         * @param {Number} [radius=10]\r\n         * @returns {Number|BubbleMixin}\r\n         */\r\n\r\n    minRadiusWithLabel (radius) {\r\n        if (!arguments.length) {\r\n            return this._minRadiusWithLabel;\r\n        }\r\n        this._minRadiusWithLabel = radius;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Get or set the maximum relative size of a bubble to the length of x axis. This value is useful\r\n         * when the difference in radius between bubbles is too great.\r\n         * @memberof BubbleMixin\r\n         * @instance\r\n         * @param {Number} [relativeSize=0.3]\r\n         * @returns {Number|BubbleMixin}\r\n         */\r\n    maxBubbleRelativeSize (relativeSize) {\r\n        if (!arguments.length) {\r\n            return this._maxBubbleRelativeSize;\r\n        }\r\n        this._maxBubbleRelativeSize = relativeSize;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Should the chart exclude zero when calculating elastic bubble radius?\r\n     * @memberof BubbleMixin\r\n     * @instance\r\n     * @param  {Boolean} [excludeZero=true]\r\n     * @returns {Boolean|BubbleMixin}\r\n     */\r\n    excludeElasticZero (excludeZero) {\r\n        if (!arguments.length) {\r\n            return this._excludeElasticZero;\r\n        }\r\n        this._excludeElasticZero = excludeZero;\r\n        return this;\r\n    }\r\n\r\n    fadeDeselectedArea (selection) {\r\n        if (this.hasFilter()) {\r\n            const chart = this;\r\n            this.selectAll(`g.${chart.BUBBLE_NODE_CLASS}`).each(function (d) {\r\n                if (chart.isSelectedNode(d)) {\r\n                    chart.highlightSelected(this);\r\n                } else {\r\n                    chart.fadeDeselected(this);\r\n                }\r\n            });\r\n        } else {\r\n            const chart = this;\r\n            this.selectAll(`g.${chart.BUBBLE_NODE_CLASS}`).each(function () {\r\n                chart.resetHighlight(this);\r\n            });\r\n        }\r\n    }\r\n\r\n    isSelectedNode (d) {\r\n        return this.hasFilter(d.key);\r\n    }\r\n\r\n    onClick (d) {\r\n        const filter = d.key;\r\n        events.trigger(() => {\r\n            this.filter(filter);\r\n            this.redrawGroup();\r\n        });\r\n    }\r\n};\r\n","import {sum} from 'd3-array';\r\n\r\n/**\r\n * Cap is a mixin that groups small data elements below a _cap_ into an *others* grouping for both the\r\n * Row and Pie Charts.\r\n *\r\n * The top ordered elements in the group up to the cap amount will be kept in the chart, and the rest\r\n * will be replaced with an *others* element, with value equal to the sum of the replaced values. The\r\n * keys of the elements below the cap limit are recorded in order to filter by those keys when the\r\n * others* element is clicked.\r\n * @mixin CapMixin\r\n * @param {Object} Base\r\n * @returns {CapMixin}\r\n */\r\nexport const CapMixin = Base => class extends Base {\r\n    constructor () {\r\n        super();\r\n\r\n        this._cap = Infinity;\r\n        this._takeFront = true;\r\n        this._othersLabel = 'Others';\r\n\r\n        this._othersGrouper = (topItems, restItems) => {\r\n            const restItemsSum = sum(restItems, this.valueAccessor()),\r\n                restKeys = restItems.map(this.keyAccessor());\r\n            if (restItemsSum > 0) {\r\n                return topItems.concat([{\r\n                    others: restKeys,\r\n                    key: this.othersLabel(),\r\n                    value: restItemsSum\r\n                }]);\r\n            }\r\n            return topItems;\r\n        };\r\n\r\n        // emulate old group.top(N) ordering\r\n        this.ordering(kv => -kv.value);\r\n\r\n        // return N \"top\" groups, where N is the cap, sorted by baseMixin.ordering\r\n        // whether top means front or back depends on takeFront\r\n        this.data(group => {\r\n            if (this._cap === Infinity) {\r\n                return this._computeOrderedGroups(group.all());\r\n            } else {\r\n                let items = group.all(), rest;\r\n                items = this._computeOrderedGroups(items); // sort by baseMixin.ordering\r\n\r\n                if (this._cap) {\r\n                    if (this._takeFront) {\r\n                        rest = items.slice(this._cap);\r\n                        items = items.slice(0, this._cap);\r\n                    } else {\r\n                        const start = Math.max(0, items.length - this._cap);\r\n                        rest = items.slice(0, start);\r\n                        items = items.slice(start);\r\n                    }\r\n                }\r\n\r\n                if (this._othersGrouper) {\r\n                    return this._othersGrouper(items, rest);\r\n                }\r\n                return items;\r\n            }\r\n        });\r\n    }\r\n\r\n    cappedKeyAccessor (d, i) {\r\n        if (d.others) {\r\n            return d.key;\r\n        }\r\n        return this.keyAccessor()(d, i);\r\n    }\r\n\r\n    cappedValueAccessor (d, i) {\r\n        if (d.others) {\r\n            return d.value;\r\n        }\r\n        return this.valueAccessor()(d, i);\r\n    }\r\n\r\n    /**\r\n         * Get or set the count of elements to that will be included in the cap. If there is an\r\n         * {@link CapMixin#othersGrouper othersGrouper}, any further elements will be combined in an\r\n         * extra element with its name determined by {@link CapMixin#othersLabel othersLabel}.\r\n         *\r\n         * As of dc.js 2.1 and onward, the capped charts use\r\n         * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all()}\r\n         * and {@link BaseMixin#ordering BaseMixin.ordering()} to determine the order of\r\n         * elements. Then `cap` and {@link CapMixin#takeFront takeFront} determine how many elements\r\n         * to keep, from which end of the resulting array.\r\n         *\r\n         * **Migration note:** Up through dc.js 2.0.*, capping used\r\n         * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_top group.top(N)},\r\n         * which selects the largest items according to\r\n         * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_order group.order()}.\r\n         * The chart then sorted the items according to {@link BaseMixin#ordering baseMixin.ordering()}.\r\n         * So the two values essentially had to agree, but if the `group.order()` was incorrect (it's\r\n         * easy to forget about), the wrong rows or slices would be displayed, in the correct order.\r\n         *\r\n         * If your chart previously relied on `group.order()`, use `chart.ordering()` instead. As of\r\n         * 2.1.5, the ordering defaults to sorting from greatest to least like `group.top(N)` did.\r\n         *\r\n         * If you want to cap by one ordering but sort by another, you can still do this by\r\n         * specifying your own {@link BaseMixin#data `.data()`} callback. For details, see the example\r\n         * {@link https://dc-js.github.io/dc.js/examples/cap-and-sort-differently.html Cap and Sort Differently}.\r\n         * @memberof CapMixin\r\n         * @instance\r\n         * @param {Number} [count=Infinity]\r\n         * @returns {Number|CapMixin}\r\n         */\r\n    cap (count) {\r\n        if (!arguments.length) {\r\n            return this._cap;\r\n        }\r\n        this._cap = count;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Get or set the direction of capping. If set, the chart takes the first\r\n         * {@link CapMixin#cap cap} elements from the sorted array of elements; otherwise\r\n         * it takes the last `cap` elements.\r\n         * @memberof CapMixin\r\n         * @instance\r\n         * @param {Boolean} [takeFront=true]\r\n         * @returns {Boolean|CapMixin}\r\n         */\r\n    takeFront (takeFront) {\r\n        if (!arguments.length) {\r\n            return this._takeFront;\r\n        }\r\n        this._takeFront = takeFront;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Get or set the label for *Others* slice when slices cap is specified.\r\n         * @memberof CapMixin\r\n         * @instance\r\n         * @param {String} [label=\"Others\"]\r\n         * @returns {String|CapMixin}\r\n         */\r\n    othersLabel (label) {\r\n        if (!arguments.length) {\r\n            return this._othersLabel;\r\n        }\r\n        this._othersLabel = label;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n         * Get or set the grouper function that will perform the insertion of data for the *Others* slice\r\n         * if the slices cap is specified. If set to a falsy value, no others will be added.\r\n         *\r\n         * The grouper function takes an array of included (\"top\") items, and an array of the rest of\r\n         * the items. By default the grouper function computes the sum of the rest.\r\n         * @memberof CapMixin\r\n         * @instance\r\n         * @example\r\n         * // Do not show others\r\n         * chart.othersGrouper(null);\r\n         * // Default others grouper\r\n         * chart.othersGrouper(function (topItems, restItems) {\r\n         *     var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\r\n         *         restKeys = restItems.map(_chart.keyAccessor());\r\n         *     if (restItemsSum > 0) {\r\n         *         return topItems.concat([{\r\n         *             others: restKeys,\r\n         *             key: _chart.othersLabel(),\r\n         *             value: restItemsSum\r\n         *         }]);\r\n         *     }\r\n         *     return topItems;\r\n         * });\r\n         * @param {Function} [grouperFunction]\r\n         * @returns {Function|CapMixin}\r\n         */\r\n    othersGrouper (grouperFunction) {\r\n        if (!arguments.length) {\r\n            return this._othersGrouper;\r\n        }\r\n        this._othersGrouper = grouperFunction;\r\n        return this;\r\n    }\r\n\r\n    onClick (d) {\r\n        if (d.others) {\r\n            this.filter([d.others]);\r\n        }\r\n        super.onClick(d);\r\n    }\r\n};\r\n","import {BaseMixin} from './base-mixin';\r\n\r\n/**\r\n * Margin is a mixin that provides margin utility functions for both the Row Chart and Coordinate Grid\r\n * Charts.\r\n * @mixin MarginMixin\r\n * @param {Object} Base\r\n * @returns {MarginMixin}\r\n */\r\nexport class MarginMixin extends BaseMixin {\r\n    constructor () {\r\n        super();\r\n\r\n        this._margin = {top: 10, right: 50, bottom: 30, left: 30};\r\n    }\r\n\r\n    /**\r\n     * Get or set the margins for a particular coordinate grid chart instance. The margins is stored as\r\n     * an associative Javascript array.\r\n     * @memberof MarginMixin\r\n     * @instance\r\n     * @example\r\n     * var leftMargin = chart.margins().left; // 30 by default\r\n     * chart.margins().left = 50;\r\n     * leftMargin = chart.margins().left; // now 50\r\n     * @param {{top: Number, right: Number, left: Number, bottom: Number}} [margins={top: 10, right: 50, bottom: 30, left: 30}]\r\n     * @returns {{top: Number, right: Number, left: Number, bottom: Number}|MarginMixin}\r\n     */\r\n    margins (margins) {\r\n        if (!arguments.length) {\r\n            return this._margin;\r\n        }\r\n        this._margin = margins;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Effective width of the chart excluding margins (in pixels).\r\n     *\r\n     * @returns {number}\r\n     */\r\n    effectiveWidth () {\r\n        return this.width() - this.margins().left - this.margins().right;\r\n    }\r\n\r\n    /**\r\n     * Effective height of the chart excluding margins (in pixels).\r\n     *\r\n     * @returns {number}\r\n     */\r\n    effectiveHeight () {\r\n        return this.height() - this.margins().top - this.margins().bottom;\r\n    }\r\n}\r\n","import {schemeCategory10} from 'd3-scale-chromatic';\r\nimport {timeDay} from 'd3-time';\r\nimport {max, min} from 'd3-array';\r\nimport {scaleBand, scaleLinear, scaleOrdinal} from 'd3-scale';\r\nimport {axisBottom, axisLeft, axisRight} from 'd3-axis';\r\nimport {zoom, zoomIdentity} from 'd3-zoom';\r\nimport {brushX} from 'd3-brush';\r\nimport {event} from 'd3-selection';\r\n\r\nimport {ColorMixin} from './color-mixin';\r\nimport {MarginMixin} from './margin-mixin';\r\nimport {optionalTransition, transition} from '../core/core';\r\nimport {units} from '../core/units';\r\nimport {constants} from '../core/constants';\r\nimport {utils} from '../core/utils';\r\nimport {logger} from '../core/logger';\r\nimport {filters} from '../core/filters';\r\nimport {events} from '../core/events';\r\n\r\nconst GRID_LINE_CLASS = 'grid-line';\r\nconst HORIZONTAL_CLASS = 'horizontal';\r\nconst VERTICAL_CLASS = 'vertical';\r\nconst Y_AXIS_LABEL_CLASS = 'y-axis-label';\r\nconst X_AXIS_LABEL_CLASS = 'x-axis-label';\r\nconst CUSTOM_BRUSH_HANDLE_CLASS = 'custom-brush-handle';\r\nconst DEFAULT_AXIS_LABEL_PADDING = 12;\r\n\r\n/**\r\n * Coordinate Grid is an abstract base chart designed to support a number of coordinate grid based\r\n * concrete chart types, e.g. bar chart, line chart, and bubble chart.\r\n * @mixin CoordinateGridMixin\r\n * @mixes ColorMixin\r\n * @mixes MarginMixin\r\n */\r\nexport class CoordinateGridMixin extends ColorMixin(MarginMixin) {\r\n    constructor () {\r\n        super();\r\n\r\n        this.colors(scaleOrdinal(schemeCategory10));\r\n        this._mandatoryAttributes().push('x');\r\n        this._parent = undefined;\r\n        this._g = undefined;\r\n        this._chartBodyG = undefined;\r\n\r\n        this._x = undefined;\r\n        this._origX = undefined; // Will hold original scale in case of zoom\r\n        this._xOriginalDomain = undefined;\r\n        this._xAxis = axisBottom();\r\n        this._xUnits = units.integers;\r\n        this._xAxisPadding = 0;\r\n        this._xAxisPaddingUnit = timeDay;\r\n        this._xElasticity = false;\r\n        this._xAxisLabel = undefined;\r\n        this._xAxisLabelPadding = 0;\r\n        this._lastXDomain = undefined;\r\n\r\n        this._y = undefined;\r\n        this._yAxis = null;\r\n        this._yAxisPadding = 0;\r\n        this._yElasticity = false;\r\n        this._yAxisLabel = undefined;\r\n        this._yAxisLabelPadding = 0;\r\n\r\n        this._brush = brushX();\r\n\r\n        this._gBrush = undefined;\r\n        this._brushOn = true;\r\n        this._parentBrushOn = false;\r\n        this._round = undefined;\r\n\r\n        this._renderHorizontalGridLine = false;\r\n        this._renderVerticalGridLine = false;\r\n\r\n        this._resizing = false;\r\n        this._unitCount = undefined;\r\n\r\n        this._zoomScale = [1, Infinity];\r\n        this._zoomOutRestrict = true;\r\n\r\n        this._zoom = zoom().on('zoom', () => this._onZoom());\r\n        this._nullZoom = zoom().on('zoom', null);\r\n        this._hasBeenMouseZoomable = false;\r\n\r\n        this._rangeChart = undefined;\r\n        this._focusChart = undefined;\r\n\r\n        this._mouseZoomable = false;\r\n        this._clipPadding = 0;\r\n\r\n        this._fOuterRangeBandPadding = 0.5;\r\n        this._fRangeBandPadding = 0;\r\n\r\n        this._useRightYAxis = false;\r\n    }\r\n\r\n    /**\r\n     * When changing the domain of the x or y scale, it is necessary to tell the chart to recalculate\r\n     * and redraw the axes. (`.rescale()` is called automatically when the x or y scale is replaced\r\n     * with {@link CoordinateGridMixin+x .x()} or {@link CoordinateGridMixin#y .y()}, and has\r\n     * no effect on elastic scales.)\r\n     * @returns {CoordinateGridMixin}\r\n     */\r\n    rescale () {\r\n        this._unitCount = undefined;\r\n        this._resizing = true;\r\n        return this;\r\n    }\r\n\r\n    resizing (resizing) {\r\n        if (!arguments.length) {\r\n            return this._resizing;\r\n        }\r\n        this._resizing = resizing;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the range selection chart associated with this instance. Setting the range selection\r\n     * chart using this function will automatically update its selection brush when the current chart\r\n     * zooms in. In return the given range chart will also automatically attach this chart as its focus\r\n     * chart hence zoom in when range brush updates.\r\n     *\r\n     * Usually the range and focus charts will share a dimension. The range chart will set the zoom\r\n     * boundaries for the focus chart, so its dimension values must be compatible with the domain of\r\n     * the focus chart.\r\n     *\r\n     * See the [Nasdaq 100 Index](http://dc-js.github.com/dc.js/) example for this effect in action.\r\n     * @param {CoordinateGridMixin} [rangeChart]\r\n     * @returns {CoordinateGridMixin}\r\n     */\r\n    rangeChart (rangeChart) {\r\n        if (!arguments.length) {\r\n            return this._rangeChart;\r\n        }\r\n        this._rangeChart = rangeChart;\r\n        this._rangeChart.focusChart(this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the scale extent for mouse zooms.\r\n     * @param {Array<Number|Date>} [extent=[1, Infinity]]\r\n     * @returns {Array<Number|Date>|CoordinateGridMixin}\r\n     */\r\n    zoomScale (extent) {\r\n        if (!arguments.length) {\r\n            return this._zoomScale;\r\n        }\r\n        this._zoomScale = extent;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the zoom restriction for the chart. If true limits the zoom to origional domain of the chart.\r\n     * @param {Boolean} [zoomOutRestrict=true]\r\n     * @returns {Boolean|CoordinateGridMixin}\r\n     */\r\n    zoomOutRestrict (zoomOutRestrict) {\r\n        if (!arguments.length) {\r\n            return this._zoomOutRestrict;\r\n        }\r\n        this._zoomOutRestrict = zoomOutRestrict;\r\n        return this;\r\n    }\r\n\r\n    _generateG (parent) {\r\n        if (parent === undefined) {\r\n            this._parent = this.svg();\r\n        } else {\r\n            this._parent = parent;\r\n        }\r\n\r\n        const href = window.location.href.split('#')[0];\r\n\r\n        this._g = this._parent.append('g');\r\n\r\n        this._chartBodyG = this._g.append('g').attr('class', 'chart-body')\r\n            .attr('transform', `translate(${this.margins().left}, ${this.margins().top})`)\r\n            .attr('clip-path', `url(${href}#${this._getClipPathId()})`);\r\n\r\n        return this._g;\r\n    }\r\n\r\n    /**\r\n     * Get or set the root g element. This method is usually used to retrieve the g element in order to\r\n     * overlay custom svg drawing programatically. **Caution**: The root g element is usually generated\r\n     * by dc.js internals, and resetting it might produce unpredictable result.\r\n     * @param {SVGElement} [gElement]\r\n     * @returns {SVGElement|CoordinateGridMixin}\r\n     */\r\n    g (gElement) {\r\n        if (!arguments.length) {\r\n            return this._g;\r\n        }\r\n        this._g = gElement;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get mouse zoom capability flag (default: false). When turned on the chart will be\r\n     * zoomable using the mouse wheel. If the range selector chart is attached zooming will also update\r\n     * the range selection brush on the associated range selector chart.\r\n     * @param {Boolean} [mouseZoomable=false]\r\n     * @returns {Boolean|CoordinateGridMixin}\r\n     */\r\n    mouseZoomable (mouseZoomable) {\r\n        if (!arguments.length) {\r\n            return this._mouseZoomable;\r\n        }\r\n        this._mouseZoomable = mouseZoomable;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Retrieve the svg group for the chart body.\r\n     * @param {SVGElement} [chartBodyG]\r\n     * @returns {SVGElement}\r\n     */\r\n    chartBodyG (chartBodyG) {\r\n        if (!arguments.length) {\r\n            return this._chartBodyG;\r\n        }\r\n        this._chartBodyG = chartBodyG;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * **mandatory**\r\n     *\r\n     * Get or set the x scale. The x scale can be any d3\r\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale} or\r\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales ordinal scale}\r\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\r\n     * @example\r\n     * // set x to a linear scale\r\n     * chart.x(d3.scaleLinear().domain([-2500, 2500]))\r\n     * // set x to a time scale to generate histogram\r\n     * chart.x(d3.scaleTime().domain([new Date(1985, 0, 1), new Date(2012, 11, 31)]))\r\n     * @param {d3.scale} [xScale]\r\n     * @returns {d3.scale|CoordinateGridMixin}\r\n     */\r\n    x (xScale) {\r\n        if (!arguments.length) {\r\n            return this._x;\r\n        }\r\n        this._x = xScale;\r\n        this._xOriginalDomain = this._x.domain();\r\n        this.rescale();\r\n        return this;\r\n    }\r\n\r\n    xOriginalDomain () {\r\n        return this._xOriginalDomain;\r\n    }\r\n\r\n    /**\r\n     * Set or get the xUnits function. The coordinate grid chart uses the xUnits function to calculate\r\n     * the number of data projections on the x axis such as the number of bars for a bar chart or the\r\n     * number of dots for a line chart.\r\n     *\r\n     * This function is expected to return a Javascript array of all data points on the x axis, or\r\n     * the number of points on the axis. d3 time range functions [d3.timeDays, d3.timeMonths, and\r\n     * d3.timeYears](https://github.com/d3/d3-time/blob/master/README.md#intervals) are all valid\r\n     * xUnits functions.\r\n     *\r\n     * dc.js also provides a few units function, see the {@link units Units Namespace} for\r\n     * a list of built-in units functions.\r\n     *\r\n     * Note that as of dc.js 3.0, `units.ordinal` is not a real function, because it is not\r\n     * possible to define this function compliant with the d3 range functions. It was already a\r\n     * magic value which caused charts to behave differently, and now it is completely so.\r\n     * @example\r\n     * // set x units to count days\r\n     * chart.xUnits(d3.timeDays);\r\n     * // set x units to count months\r\n     * chart.xUnits(d3.timeMonths);\r\n     *\r\n     * // A custom xUnits function can be used as long as it follows the following interface:\r\n     * // units in integer\r\n     * function(start, end) {\r\n     *      // simply calculates how many integers in the domain\r\n     *      return Math.abs(end - start);\r\n     * }\r\n     *\r\n     * // fixed units\r\n     * function(start, end) {\r\n     *      // be aware using fixed units will disable the focus/zoom ability on the chart\r\n     *      return 1000;\r\n     * }\r\n     * @param {Function} [xUnits=units.integers]\r\n     * @returns {Function|CoordinateGridMixin}\r\n     */\r\n    xUnits (xUnits) {\r\n        if (!arguments.length) {\r\n            return this._xUnits;\r\n        }\r\n        this._xUnits = xUnits;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the x axis used by a particular coordinate grid chart instance. This function is most\r\n     * useful when x axis customization is required. The x axis in dc.js is an instance of a\r\n     * {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom d3 bottom axis object};\r\n     * therefore it supports any valid d3 axisBottom manipulation.\r\n     *\r\n     * **Caution**: The x axis is usually generated internally by dc; resetting it may cause\r\n     * unexpected results. Note also that when used as a getter, this function is not chainable:\r\n     * it returns the axis, not the chart,\r\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\r\n         * so attempting to call chart functions after calling `.xAxis()` will fail}.\r\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom d3.axisBottom}\r\n     * @example\r\n     * // customize x axis tick format\r\n     * chart.xAxis().tickFormat(function(v) {return v + '%';});\r\n     * // customize x axis tick values\r\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\r\n     * @param {d3.axis} [xAxis=d3.axisBottom()]\r\n     * @returns {d3.axis|CoordinateGridMixin}\r\n     */\r\n    xAxis (xAxis) {\r\n        if (!arguments.length) {\r\n            return this._xAxis;\r\n        }\r\n        this._xAxis = xAxis;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn on/off elastic x axis behavior. If x axis elasticity is turned on, then the grid chart will\r\n     * attempt to recalculate the x axis range whenever a redraw event is triggered.\r\n     * @param {Boolean} [elasticX=false]\r\n     * @returns {Boolean|CoordinateGridMixin}\r\n     */\r\n    elasticX (elasticX) {\r\n        if (!arguments.length) {\r\n            return this._xElasticity;\r\n        }\r\n        this._xElasticity = elasticX;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get x axis padding for the elastic x axis. The padding will be added to both end of the x\r\n     * axis if elasticX is turned on; otherwise it is ignored.\r\n     *\r\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\r\n     * number or date x axes.  When padding a date axis, an integer represents number of units being padded\r\n     * and a percentage string will be treated the same as an integer. The unit will be determined by the\r\n     * xAxisPaddingUnit variable.\r\n     * @param {Number|String} [padding=0]\r\n     * @returns {Number|String|CoordinateGridMixin}\r\n     */\r\n    xAxisPadding (padding) {\r\n        if (!arguments.length) {\r\n            return this._xAxisPadding;\r\n        }\r\n        this._xAxisPadding = padding;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get x axis padding unit for the elastic x axis. The padding unit will determine which unit to\r\n     * use when applying xAxis padding if elasticX is turned on and if x-axis uses a time dimension;\r\n     * otherwise it is ignored.\r\n     *\r\n     * The padding unit should be a\r\n     * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#self._interval).\r\n     * For backward compatibility with dc.js 2.0, it can also be the name of a d3 time interval\r\n     * ('day', 'hour', etc). Available arguments are the\r\n     * [d3 time intervals](https://github.com/d3/d3-time/blob/master/README.md#intervals d3.timeInterval).\r\n     * @param {String} [unit=d3.timeDay]\r\n     * @returns {String|CoordinateGridMixin}\r\n     */\r\n    xAxisPaddingUnit (unit) {\r\n        if (!arguments.length) {\r\n            return this._xAxisPaddingUnit;\r\n        }\r\n        this._xAxisPaddingUnit = unit;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of units displayed on the x axis. If the x axis is ordinal (`xUnits` is\r\n     * `units.ordinal`), this is the number of items in the domain of the x scale. Otherwise, the\r\n     * x unit count is calculated using the {@link CoordinateGridMixin#xUnits xUnits} function.\r\n     * @returns {Number}\r\n     */\r\n    xUnitCount () {\r\n        if (this._unitCount === undefined) {\r\n            if (this.isOrdinal()) {\r\n                // In this case it number of items in domain\r\n                this._unitCount = this.x().domain().length;\r\n            } else {\r\n                this._unitCount = this.xUnits()(this.x().domain()[0], this.x().domain()[1]);\r\n\r\n                // Sometimes xUnits() may return an array while sometimes directly the count\r\n                if (this._unitCount instanceof Array) {\r\n                    this._unitCount = this._unitCount.length;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._unitCount;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets whether the chart should be drawn with a right axis instead of a left axis. When\r\n     * used with a chart in a composite chart, allows both left and right Y axes to be shown on a\r\n     * chart.\r\n     * @param {Boolean} [useRightYAxis=false]\r\n     * @returns {Boolean|CoordinateGridMixin}\r\n     */\r\n    useRightYAxis (useRightYAxis) {\r\n        if (!arguments.length) {\r\n            return this._useRightYAxis;\r\n        }\r\n\r\n        // We need to warn if value is changing after self._yAxis was created\r\n        if (this._useRightYAxis !== useRightYAxis && this._yAxis) {\r\n            logger.warn('Value of useRightYAxis has been altered, after yAxis was created. ' +\r\n                'You might get unexpected yAxis behavior. ' +\r\n                'Make calls to useRightYAxis sooner in your chart creation process.');\r\n        }\r\n\r\n        this._useRightYAxis = useRightYAxis;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the chart is using ordinal xUnits ({@link units.ordinal units.ordinal}, or false\r\n     * otherwise. Most charts behave differently with ordinal data and use the result of this method to\r\n     * trigger the appropriate logic.\r\n     * @returns {Boolean}\r\n     */\r\n    isOrdinal () {\r\n        return this.xUnits() === units.ordinal;\r\n    }\r\n\r\n    _useOuterPadding () {\r\n        return true;\r\n    }\r\n\r\n    _ordinalXDomain () {\r\n        const groups = this._computeOrderedGroups(this.data());\r\n        return groups.map(this.keyAccessor());\r\n    }\r\n\r\n    _prepareXAxis (g, render) {\r\n        if (!this.isOrdinal()) {\r\n            if (this.elasticX()) {\r\n                this._x.domain([this.xAxisMin(), this.xAxisMax()]);\r\n            }\r\n        } else { // self._chart.isOrdinal()\r\n            // D3v4 - Ordinal charts would need scaleBand\r\n            // bandwidth is a method in scaleBand\r\n            // (https://github.com/d3/d3-scale/blob/master/README.md#scaleBand)\r\n            if (!this._x.bandwidth) {\r\n                // If self._x is not a scaleBand create a new scale and\r\n                // copy the original domain to the new scale\r\n                logger.warn('For compatibility with d3v4+, dc.js d3.0 ordinal bar/line/bubble charts need ' +\r\n                    'd3.scaleBand() for the x scale, instead of d3.scaleOrdinal(). ' +\r\n                    'Replacing .x() with a d3.scaleBand with the same domain - ' +\r\n                    'make the same change in your code to avoid this warning!');\r\n                this._x = scaleBand().domain(this._x.domain());\r\n            }\r\n\r\n            if (this.elasticX() || this._x.domain().length === 0) {\r\n                this._x.domain(this._ordinalXDomain());\r\n            }\r\n        }\r\n\r\n        // has the domain changed?\r\n        const xdom = this._x.domain();\r\n        if (render || !utils.arraysEqual(this._lastXDomain, xdom)) {\r\n            this.rescale();\r\n        }\r\n        this._lastXDomain = xdom;\r\n\r\n        // please can't we always use rangeBands for bar charts?\r\n        if (this.isOrdinal()) {\r\n            this._x.range([0, this.xAxisLength()])\r\n                .paddingInner(this._fRangeBandPadding)\r\n                .paddingOuter(this._useOuterPadding() ? this._fOuterRangeBandPadding : 0);\r\n        } else {\r\n            this._x.range([0, this.xAxisLength()]);\r\n        }\r\n\r\n        this._xAxis = this._xAxis.scale(this.x());\r\n\r\n        this._renderVerticalGridLines(g);\r\n    }\r\n\r\n    renderXAxis (g) {\r\n        let axisXG = g.select('g.x');\r\n\r\n        if (axisXG.empty()) {\r\n            axisXG = g.append('g')\r\n                .attr('class', 'axis x')\r\n                .attr('transform', `translate(${this.margins().left},${this._xAxisY()})`);\r\n        }\r\n\r\n        let axisXLab = g.select(`text.${X_AXIS_LABEL_CLASS}`);\r\n        if (axisXLab.empty() && this.xAxisLabel()) {\r\n            axisXLab = g.append('text')\r\n                .attr('class', X_AXIS_LABEL_CLASS)\r\n                .attr('transform', `translate(${this.margins().left + this.xAxisLength() / 2},${ \r\n                    this.height() - this._xAxisLabelPadding})`)\r\n                .attr('text-anchor', 'middle');\r\n        }\r\n        if (this.xAxisLabel() && axisXLab.text() !== this.xAxisLabel()) {\r\n            axisXLab.text(this.xAxisLabel());\r\n        }\r\n\r\n        transition(axisXG, this.transitionDuration(), this.transitionDelay())\r\n            .attr('transform', `translate(${this.margins().left},${this._xAxisY()})`)\r\n            .call(this._xAxis);\r\n        transition(axisXLab, this.transitionDuration(), this.transitionDelay())\r\n            .attr('transform', `translate(${this.margins().left + this.xAxisLength() / 2},${ \r\n                this.height() - this._xAxisLabelPadding})`);\r\n    }\r\n\r\n    _renderVerticalGridLines (g) {\r\n        let gridLineG = g.select(`g.${VERTICAL_CLASS}`);\r\n\r\n        if (this._renderVerticalGridLine) {\r\n            if (gridLineG.empty()) {\r\n                gridLineG = g.insert('g', ':first-child')\r\n                    .attr('class', `${GRID_LINE_CLASS} ${VERTICAL_CLASS}`)\r\n                    .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\r\n            }\r\n\r\n            const ticks = this._xAxis.tickValues() ? this._xAxis.tickValues() :\r\n                (typeof this._x.ticks === 'function' ? this._x.ticks.apply(this._x, this._xAxis.tickArguments()) : this._x.domain());\r\n\r\n            const lines = gridLineG.selectAll('line')\r\n                .data(ticks);\r\n\r\n            // enter\r\n            const linesGEnter = lines.enter()\r\n                .append('line')\r\n                .attr('x1', d => this._x(d))\r\n                .attr('y1', this._xAxisY() - this.margins().top)\r\n                .attr('x2', d => this._x(d))\r\n                .attr('y2', 0)\r\n                .attr('opacity', 0);\r\n            transition(linesGEnter, this.transitionDuration(), this.transitionDelay())\r\n                .attr('opacity', 0.5);\r\n\r\n            // update\r\n            transition(lines, this.transitionDuration(), this.transitionDelay())\r\n                .attr('x1', d => this._x(d))\r\n                .attr('y1', this._xAxisY() - this.margins().top)\r\n                .attr('x2', d => this._x(d))\r\n                .attr('y2', 0);\r\n\r\n            // exit\r\n            lines.exit().remove();\r\n        } else {\r\n            gridLineG.selectAll('line').remove();\r\n        }\r\n    }\r\n\r\n    _xAxisY () {\r\n        return (this.height() - this.margins().bottom);\r\n    }\r\n\r\n    xAxisLength () {\r\n        return this.effectiveWidth();\r\n    }\r\n\r\n    /**\r\n     * Set or get the x axis label. If setting the label, you may optionally include additional padding to\r\n     * the margin to make room for the label. By default the padded is set to 12 to accomodate the text height.\r\n     * @param {String} [labelText]\r\n     * @param {Number} [padding=12]\r\n     * @returns {String}\r\n     */\r\n    xAxisLabel (labelText, padding) {\r\n        if (!arguments.length) {\r\n            return this._xAxisLabel;\r\n        }\r\n        this._xAxisLabel = labelText;\r\n        this.margins().bottom -= this._xAxisLabelPadding;\r\n        this._xAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\r\n        this.margins().bottom += this._xAxisLabelPadding;\r\n        return this;\r\n    }\r\n\r\n    _createYAxis () {\r\n        return this._useRightYAxis ? axisRight() : axisLeft();\r\n    }\r\n\r\n    _prepareYAxis (g) {\r\n        if (this._y === undefined || this.elasticY()) {\r\n            if (this._y === undefined) {\r\n                this._y = scaleLinear();\r\n            }\r\n            const _min = this.yAxisMin() || 0;\r\n            const _max = this.yAxisMax() || 0;\r\n            this._y.domain([_min, _max]).rangeRound([this.yAxisHeight(), 0]);\r\n        }\r\n\r\n        this._y.range([this.yAxisHeight(), 0]);\r\n\r\n        if (!this._yAxis) {\r\n            this._yAxis = this._createYAxis();\r\n        }\r\n\r\n        this._yAxis.scale(this._y);\r\n\r\n        this._renderHorizontalGridLinesForAxis(g, this._y, this._yAxis);\r\n    }\r\n\r\n    renderYAxisLabel (axisClass, text, rotation, labelXPosition) {\r\n        labelXPosition = labelXPosition || this._yAxisLabelPadding;\r\n\r\n        let axisYLab = this.g().select(`text.${Y_AXIS_LABEL_CLASS}.${axisClass}-label`);\r\n        const labelYPosition = (this.margins().top + this.yAxisHeight() / 2);\r\n        if (axisYLab.empty() && text) {\r\n            axisYLab = this.g().append('text')\r\n                .attr('transform', `translate(${labelXPosition},${labelYPosition}),rotate(${rotation})`)\r\n                .attr('class', `${Y_AXIS_LABEL_CLASS} ${axisClass}-label`)\r\n                .attr('text-anchor', 'middle')\r\n                .text(text);\r\n        }\r\n        if (text && axisYLab.text() !== text) {\r\n            axisYLab.text(text);\r\n        }\r\n        transition(axisYLab, this.transitionDuration(), this.transitionDelay())\r\n            .attr('transform', `translate(${labelXPosition},${labelYPosition}),rotate(${rotation})`);\r\n    }\r\n\r\n    renderYAxisAt (axisClass, axis, position) {\r\n        let axisYG = this.g().select(`g.${axisClass}`);\r\n        if (axisYG.empty()) {\r\n            axisYG = this.g().append('g')\r\n                .attr('class', `axis ${axisClass}`)\r\n                .attr('transform', `translate(${position},${this.margins().top})`);\r\n        }\r\n\r\n        transition(axisYG, this.transitionDuration(), this.transitionDelay())\r\n            .attr('transform', `translate(${position},${this.margins().top})`)\r\n            .call(axis);\r\n    }\r\n\r\n    renderYAxis () {\r\n        const axisPosition = this._useRightYAxis ? (this.width() - this.margins().right) : this._yAxisX();\r\n        this.renderYAxisAt('y', this._yAxis, axisPosition);\r\n        const labelPosition = this._useRightYAxis ? (this.width() - this._yAxisLabelPadding) : this._yAxisLabelPadding;\r\n        const rotation = this._useRightYAxis ? 90 : -90;\r\n        this.renderYAxisLabel('y', this.yAxisLabel(), rotation, labelPosition);\r\n    }\r\n\r\n    _renderHorizontalGridLinesForAxis (g, scale, axis) {\r\n        let gridLineG = g.select(`g.${HORIZONTAL_CLASS}`);\r\n\r\n        if (this._renderHorizontalGridLine) {\r\n            // see https://github.com/d3/d3-axis/blob/master/src/axis.js#L48\r\n            const ticks = axis.tickValues() ? axis.tickValues() :\r\n                (scale.ticks ? scale.ticks.apply(scale, axis.tickArguments()) : scale.domain());\r\n\r\n            if (gridLineG.empty()) {\r\n                gridLineG = g.insert('g', ':first-child')\r\n                    .attr('class', `${GRID_LINE_CLASS} ${HORIZONTAL_CLASS}`)\r\n                    .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\r\n            }\r\n\r\n            const lines = gridLineG.selectAll('line')\r\n                .data(ticks);\r\n\r\n            // enter\r\n            const linesGEnter = lines.enter()\r\n                .append('line')\r\n                .attr('x1', 1)\r\n                .attr('y1', d => scale(d))\r\n                .attr('x2', this.xAxisLength())\r\n                .attr('y2', d => scale(d))\r\n                .attr('opacity', 0);\r\n            transition(linesGEnter, this.transitionDuration(), this.transitionDelay())\r\n                .attr('opacity', 0.5);\r\n\r\n            // update\r\n            transition(lines, this.transitionDuration(), this.transitionDelay())\r\n                .attr('x1', 1)\r\n                .attr('y1', d => scale(d))\r\n                .attr('x2', this.xAxisLength())\r\n                .attr('y2', d => scale(d));\r\n\r\n            // exit\r\n            lines.exit().remove();\r\n        } else {\r\n            gridLineG.selectAll('line').remove();\r\n        }\r\n    }\r\n\r\n    _yAxisX () {\r\n        return this.useRightYAxis() ? this.width() - this.margins().right : this.margins().left;\r\n    }\r\n\r\n    /**\r\n     * Set or get the y axis label. If setting the label, you may optionally include additional padding\r\n     * to the margin to make room for the label. By default the padding is set to 12 to accommodate the\r\n     * text height.\r\n     * @param {String} [labelText]\r\n     * @param {Number} [padding=12]\r\n     * @returns {String|CoordinateGridMixin}\r\n     */\r\n    yAxisLabel (labelText, padding) {\r\n        if (!arguments.length) {\r\n            return this._yAxisLabel;\r\n        }\r\n        this._yAxisLabel = labelText;\r\n        this.margins().left -= this._yAxisLabelPadding;\r\n        this._yAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;\r\n        this.margins().left += this._yAxisLabelPadding;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the y scale. The y scale is typically automatically determined by the chart implementation.\r\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\r\n     * @param {d3.scale} [yScale]\r\n     * @returns {d3.scale|CoordinateGridMixin}\r\n     */\r\n    y (yScale) {\r\n        if (!arguments.length) {\r\n            return this._y;\r\n        }\r\n        this._y = yScale;\r\n        this.rescale();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the y axis used by the coordinate grid chart instance. This function is most useful\r\n     * when y axis customization is required. Depending on `useRightYAxis` the y axis in dc.js is an instance of\r\n     * either [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft) or\r\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight); therefore it supports any\r\n     * valid d3 axis manipulation.\r\n     *\r\n     * **Caution**: The y axis is usually generated internally by dc; resetting it may cause\r\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\r\n     * returns the axis, not the chart,\r\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\r\n         * so attempting to call chart functions after calling `.yAxis()` will fail}.\r\n     * In addition, depending on whether you are going to use the axis on left or right\r\n     * you need to appropriately pass [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft)\r\n     * or [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight)\r\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md d3.axis}\r\n     * @example\r\n     * // customize y axis tick format\r\n     * chart.yAxis().tickFormat(function(v) {return v + '%';});\r\n     * // customize y axis tick values\r\n     * chart.yAxis().tickValues([0, 100, 200, 300]);\r\n     * @param {d3.axisLeft|d3.axisRight} [yAxis]\r\n     * @returns {d3.axisLeft|d3.axisRight|CoordinateGridMixin}\r\n     */\r\n    yAxis (yAxis) {\r\n        if (!arguments.length) {\r\n            if (!this._yAxis) {\r\n                this._yAxis = this._createYAxis();\r\n            }\r\n            return this._yAxis;\r\n        }\r\n        this._yAxis = yAxis;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn on/off elastic y axis behavior. If y axis elasticity is turned on, then the grid chart will\r\n     * attempt to recalculate the y axis range whenever a redraw event is triggered.\r\n     * @param {Boolean} [elasticY=false]\r\n     * @returns {Boolean|CoordinateGridMixin}\r\n     */\r\n    elasticY (elasticY) {\r\n        if (!arguments.length) {\r\n            return this._yElasticity;\r\n        }\r\n        this._yElasticity = elasticY;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn on/off horizontal grid lines.\r\n     * @param {Boolean} [renderHorizontalGridLines=false]\r\n     * @returns {Boolean|CoordinateGridMixin}\r\n     */\r\n    renderHorizontalGridLines (renderHorizontalGridLines) {\r\n        if (!arguments.length) {\r\n            return this._renderHorizontalGridLine;\r\n        }\r\n        this._renderHorizontalGridLine = renderHorizontalGridLines;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn on/off vertical grid lines.\r\n     * @param {Boolean} [renderVerticalGridLines=false]\r\n     * @returns {Boolean|CoordinateGridMixin}\r\n     */\r\n    renderVerticalGridLines (renderVerticalGridLines) {\r\n        if (!arguments.length) {\r\n            return this._renderVerticalGridLine;\r\n        }\r\n        this._renderVerticalGridLine = renderVerticalGridLines;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Calculates the minimum x value to display in the chart. Includes xAxisPadding if set.\r\n     * @returns {*}\r\n     */\r\n    xAxisMin () {\r\n        const m = min(this.data(), e => this.keyAccessor()(e));\r\n        return utils.subtract(m, this._xAxisPadding, this._xAxisPaddingUnit);\r\n    }\r\n\r\n    /**\r\n     * Calculates the maximum x value to display in the chart. Includes xAxisPadding if set.\r\n     * @returns {*}\r\n     */\r\n    xAxisMax () {\r\n        const m = max(this.data(), e => this.keyAccessor()(e));\r\n        return utils.add(m, this._xAxisPadding, this._xAxisPaddingUnit);\r\n    }\r\n\r\n    /**\r\n     * Calculates the minimum y value to display in the chart. Includes yAxisPadding if set.\r\n     * @returns {*}\r\n     */\r\n    yAxisMin () {\r\n        const m = min(this.data(), e => this.valueAccessor()(e));\r\n        return utils.subtract(m, this._yAxisPadding);\r\n    }\r\n\r\n    /**\r\n     * Calculates the maximum y value to display in the chart. Includes yAxisPadding if set.\r\n     * @returns {*}\r\n     */\r\n    yAxisMax () {\r\n        const m = max(this.data(), e => this.valueAccessor()(e));\r\n        return utils.add(m, this._yAxisPadding);\r\n    }\r\n\r\n    /**\r\n     * Set or get y axis padding for the elastic y axis. The padding will be added to the top and\r\n     * bottom of the y axis if elasticY is turned on; otherwise it is ignored.\r\n     *\r\n     * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\r\n     * number or date axes. When padding a date axis, an integer represents number of days being padded\r\n     * and a percentage string will be treated the same as an integer.\r\n     * @param {Number|String} [padding=0]\r\n     * @returns {Number|CoordinateGridMixin}\r\n     */\r\n    yAxisPadding (padding) {\r\n        if (!arguments.length) {\r\n            return this._yAxisPadding;\r\n        }\r\n        this._yAxisPadding = padding;\r\n        return this;\r\n    }\r\n\r\n    yAxisHeight () {\r\n        return this.effectiveHeight();\r\n    }\r\n\r\n    /**\r\n     * Set or get the rounding function used to quantize the selection when brushing is enabled.\r\n     * @example\r\n     * // set x unit round to by month, this will make sure range selection brush will\r\n     * // select whole months\r\n     * chart.round(d3.timeMonth.round);\r\n     * @param {Function} [round]\r\n     * @returns {Function|CoordinateGridMixin}\r\n     */\r\n    round (round) {\r\n        if (!arguments.length) {\r\n            return this._round;\r\n        }\r\n        this._round = round;\r\n        return this;\r\n    }\r\n\r\n    _rangeBandPadding (_) {\r\n        if (!arguments.length) {\r\n            return this._fRangeBandPadding;\r\n        }\r\n        this._fRangeBandPadding = _;\r\n        return this;\r\n    }\r\n\r\n    _outerRangeBandPadding (_) {\r\n        if (!arguments.length) {\r\n            return this._fOuterRangeBandPadding;\r\n        }\r\n        this._fOuterRangeBandPadding = _;\r\n        return this;\r\n    }\r\n\r\n    filter (_) {\r\n        if (!arguments.length) {\r\n            return super.filter();\r\n        }\r\n\r\n        super.filter(_);\r\n\r\n        this.redrawBrush(_, false);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the brush. Brush must be an instance of d3 brushes\r\n     * https://github.com/d3/d3-brush/blob/master/README.md\r\n     * You will use this only if you are writing a new chart type that supports brushing.\r\n     *\r\n     * **Caution**: dc creates and manages brushes internally. Go through and understand the source code\r\n     * if you want to pass a new brush object. Even if you are only using the getter,\r\n     * the brush object may not behave the way you expect.\r\n     *\r\n     * @param {d3.brush} [_]\r\n     * @returns {d3.brush|CoordinateGridMixin}\r\n     */\r\n    brush (_) {\r\n        if (!arguments.length) {\r\n            return this._brush;\r\n        }\r\n        this._brush = _;\r\n        return this;\r\n    }\r\n\r\n    renderBrush (g, doTransition) {\r\n        if (this._brushOn) {\r\n            this._brush.on('start brush end', () => this._brushing());\r\n\r\n            // To retrieve selection we need self._gBrush\r\n            this._gBrush = g.append('g')\r\n                .attr('class', 'brush')\r\n                .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\r\n\r\n            this.setBrushExtents();\r\n\r\n            this.createBrushHandlePaths(this._gBrush, doTransition);\r\n\r\n            this.redrawBrush(this.filter(), doTransition);\r\n        }\r\n    }\r\n\r\n    createBrushHandlePaths (gBrush) {\r\n        let brushHandles = gBrush.selectAll(`path.${CUSTOM_BRUSH_HANDLE_CLASS}`).data([{type: 'w'}, {type: 'e'}]);\r\n\r\n        brushHandles = brushHandles\r\n            .enter()\r\n            .append('path')\r\n            .attr('class', CUSTOM_BRUSH_HANDLE_CLASS)\r\n            .merge(brushHandles);\r\n\r\n        brushHandles\r\n            .attr('d', d => this.resizeHandlePath(d));\r\n    }\r\n\r\n    extendBrush (brushSelection) {\r\n        if (brushSelection && this.round()) {\r\n            brushSelection[0] = this.round()(brushSelection[0]);\r\n            brushSelection[1] = this.round()(brushSelection[1]);\r\n        }\r\n        return brushSelection;\r\n    }\r\n\r\n    brushIsEmpty (brushSelection) {\r\n        return !brushSelection || brushSelection[1] <= brushSelection[0];\r\n    }\r\n\r\n    _brushing () {\r\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\r\n        // Source Event will be null when brush.move is called programmatically (see below as well).\r\n        if (!event.sourceEvent) {\r\n            return;\r\n        }\r\n\r\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\r\n        // In this case we are more worried about this handler causing brush move programmatically which will\r\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\r\n        // This check avoids recursive calls\r\n        if (event.sourceEvent.type && ['start', 'brush', 'end'].indexOf(event.sourceEvent.type) !== -1) {\r\n            return;\r\n        }\r\n\r\n        let brushSelection = event.selection;\r\n        if (brushSelection) {\r\n            brushSelection = brushSelection.map(this.x().invert);\r\n        }\r\n\r\n        brushSelection = this.extendBrush(brushSelection);\r\n\r\n        this.redrawBrush(brushSelection, false);\r\n\r\n        const rangedFilter = this.brushIsEmpty(brushSelection) ? null : filters.RangedFilter(brushSelection[0], brushSelection[1]);\r\n\r\n        events.trigger(() => {\r\n            this.applyBrushSelection(rangedFilter);\r\n        }, constants.EVENT_DELAY);\r\n    }\r\n\r\n    // This can be overridden in a derived chart. For example Composite chart overrides it\r\n    applyBrushSelection (rangedFilter) {\r\n        this.replaceFilter(rangedFilter);\r\n        this.redrawGroup();\r\n    }\r\n\r\n    setBrushExtents (doTransition) {\r\n        // Set boundaries of the brush, must set it before applying to self._gBrush\r\n        this._brush.extent([[0, 0], [this.effectiveWidth(), this.effectiveHeight()]]);\r\n\r\n        this._gBrush\r\n            .call(this._brush);\r\n    }\r\n\r\n    redrawBrush (brushSelection, doTransition) {\r\n        if (this._brushOn && this._gBrush) {\r\n            if (this._resizing) {\r\n                this.setBrushExtents(doTransition);\r\n            }\r\n\r\n            if (!brushSelection) {\r\n                this._gBrush\r\n                    .call(this._brush.move, null);\r\n\r\n                this._gBrush.selectAll(`path.${CUSTOM_BRUSH_HANDLE_CLASS}`)\r\n                    .attr('display', 'none');\r\n            } else {\r\n                const scaledSelection = [this._x(brushSelection[0]), this._x(brushSelection[1])];\r\n\r\n                const gBrush =\r\n                    optionalTransition(doTransition, this.transitionDuration(), this.transitionDelay())(this._gBrush);\r\n\r\n                gBrush\r\n                    .call(this._brush.move, scaledSelection);\r\n\r\n                gBrush.selectAll(`path.${CUSTOM_BRUSH_HANDLE_CLASS}`)\r\n                    .attr('display', null)\r\n                    .attr('transform', (d, i) => `translate(${this._x(brushSelection[i])}, 0)`)\r\n                    .attr('d', d => this.resizeHandlePath(d));\r\n            }\r\n        }\r\n        this.fadeDeselectedArea(brushSelection);\r\n    }\r\n\r\n    fadeDeselectedArea (brushSelection) {\r\n        // do nothing, sub-chart should override this function\r\n    }\r\n\r\n    // borrowed from Crossfilter example\r\n    resizeHandlePath (d) {\r\n        d = d.type;\r\n        const e = +(d === 'e'), x = e ? 1 : -1, y = this.effectiveHeight() / 3;\r\n        return `M${0.5 * x},${y \r\n        }A6,6 0 0 ${e} ${6.5 * x},${y + 6 \r\n        }V${2 * y - 6 \r\n        }A6,6 0 0 ${e} ${0.5 * x},${2 * y \r\n        }Z` +\r\n            `M${2.5 * x},${y + 8 \r\n            }V${2 * y - 8 \r\n            }M${4.5 * x},${y + 8 \r\n            }V${2 * y - 8}`;\r\n    }\r\n\r\n    _getClipPathId () {\r\n        return `${this.anchorName().replace(/[ .#=\\[\\]\"]/g, '-')}-clip`;\r\n    }\r\n\r\n    /**\r\n     * Get or set the padding in pixels for the clip path. Once set padding will be applied evenly to\r\n     * the top, left, right, and bottom when the clip path is generated. If set to zero, the clip area\r\n     * will be exactly the chart body area minus the margins.\r\n     * @param {Number} [padding=5]\r\n     * @returns {Number|CoordinateGridMixin}\r\n     */\r\n    clipPadding (padding) {\r\n        if (!arguments.length) {\r\n            return this._clipPadding;\r\n        }\r\n        this._clipPadding = padding;\r\n        return this;\r\n    }\r\n\r\n    _generateClipPath () {\r\n        const defs = utils.appendOrSelect(this._parent, 'defs');\r\n        // cannot select <clippath> elements; bug in WebKit, must select by id\r\n        // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\r\n        const id = this._getClipPathId();\r\n        const chartBodyClip = utils.appendOrSelect(defs, `#${id}`, 'clipPath').attr('id', id);\r\n\r\n        const padding = this._clipPadding * 2;\r\n\r\n        utils.appendOrSelect(chartBodyClip, 'rect')\r\n            .attr('width', this.xAxisLength() + padding)\r\n            .attr('height', this.yAxisHeight() + padding)\r\n            .attr('transform', `translate(-${this._clipPadding}, -${this._clipPadding})`);\r\n    }\r\n\r\n    _preprocessData () {\r\n    }\r\n\r\n    _doRender () {\r\n        this.resetSvg();\r\n\r\n        this._preprocessData();\r\n\r\n        this._generateG();\r\n        this._generateClipPath();\r\n\r\n        this._drawChart(true);\r\n\r\n        this._configureMouseZoom();\r\n\r\n        return this;\r\n    }\r\n\r\n    _doRedraw () {\r\n        this._preprocessData();\r\n\r\n        this._drawChart(false);\r\n        this._generateClipPath();\r\n\r\n        return this;\r\n    }\r\n\r\n    _drawChart (render) {\r\n        if (this.isOrdinal()) {\r\n            this._brushOn = false;\r\n        }\r\n\r\n        this._prepareXAxis(this.g(), render);\r\n        this._prepareYAxis(this.g());\r\n\r\n        this.plotData();\r\n\r\n        if (this.elasticX() || this._resizing || render) {\r\n            this.renderXAxis(this.g());\r\n        }\r\n\r\n        if (this.elasticY() || this._resizing || render) {\r\n            this.renderYAxis(this.g());\r\n        }\r\n\r\n        if (render) {\r\n            this.renderBrush(this.g(), false);\r\n        } else {\r\n            // Animate the brush only while resizing\r\n            this.redrawBrush(this.filter(), this._resizing);\r\n        }\r\n        this.fadeDeselectedArea(this.filter());\r\n        this.resizing(false);\r\n    }\r\n\r\n    _configureMouseZoom () {\r\n        // Save a copy of original x scale\r\n        this._origX = this._x.copy();\r\n\r\n        if (this._mouseZoomable) {\r\n            this._enableMouseZoom();\r\n        } else if (this._hasBeenMouseZoomable) {\r\n            this._disableMouseZoom();\r\n        }\r\n    }\r\n\r\n    _enableMouseZoom () {\r\n        this._hasBeenMouseZoomable = true;\r\n\r\n        const extent = [[0, 0], [this.effectiveWidth(), this.effectiveHeight()]];\r\n\r\n        this._zoom\r\n            .scaleExtent(this._zoomScale)\r\n            .extent(extent)\r\n            .duration(this.transitionDuration());\r\n\r\n        if (this._zoomOutRestrict) {\r\n            // Ensure minimum zoomScale is at least 1\r\n            const zoomScaleMin = Math.max(this._zoomScale[0], 1);\r\n            this._zoom\r\n                .translateExtent(extent)\r\n                .scaleExtent([zoomScaleMin, this._zoomScale[1]]);\r\n        }\r\n\r\n        this.root().call(this._zoom);\r\n\r\n        // Tell D3 zoom our current zoom/pan status\r\n        this._updateD3zoomTransform();\r\n    }\r\n\r\n    _disableMouseZoom () {\r\n        this.root().call(this._nullZoom);\r\n    }\r\n\r\n    _zoomHandler (newDomain, noRaiseEvents) {\r\n        let domFilter;\r\n\r\n        if (this._hasRangeSelected(newDomain)) {\r\n            this.x().domain(newDomain);\r\n            domFilter = filters.RangedFilter(newDomain[0], newDomain[1]);\r\n        } else {\r\n            this.x().domain(this._xOriginalDomain);\r\n            domFilter = null;\r\n        }\r\n\r\n        this.replaceFilter(domFilter);\r\n        this.rescale();\r\n        this.redraw();\r\n\r\n        if (!noRaiseEvents) {\r\n            if (this._rangeChart && !utils.arraysEqual(this.filter(), this._rangeChart.filter())) {\r\n                events.trigger(() => {\r\n                    this._rangeChart.replaceFilter(domFilter);\r\n                    this._rangeChart.redraw();\r\n                });\r\n            }\r\n\r\n            this._invokeZoomedListener();\r\n            events.trigger(() => {\r\n                this.redrawGroup();\r\n            }, constants.EVENT_DELAY);\r\n        }\r\n    }\r\n\r\n    // event.transform.rescaleX(self._origX).domain() should give back newDomain\r\n    _domainToZoomTransform (newDomain, origDomain, xScale) {\r\n        const k = (origDomain[1] - origDomain[0]) / (newDomain[1] - newDomain[0]);\r\n        const xt = -1 * xScale(newDomain[0]);\r\n\r\n        return zoomIdentity.scale(k).translate(xt, 0);\r\n    }\r\n\r\n    // If we changing zoom status (for example by calling focus), tell D3 zoom about it\r\n    _updateD3zoomTransform () {\r\n        if (this._zoom) {\r\n            this._zoom.transform(this.root(), this._domainToZoomTransform(this.x().domain(), this._xOriginalDomain, this._origX));\r\n        }\r\n    }\r\n\r\n    _onZoom () {\r\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\r\n        // Source Event will be null when zoom is called programmatically (see below as well).\r\n        if (!event.sourceEvent) {\r\n            return;\r\n        }\r\n\r\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\r\n        // In this case we are more worried about this handler causing zoom programmatically which will\r\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\r\n        // This check avoids recursive calls\r\n        if (event.sourceEvent.type && ['start', 'zoom', 'end'].indexOf(event.sourceEvent.type) !== -1) {\r\n            return;\r\n        }\r\n\r\n        const newDomain = event.transform.rescaleX(this._origX).domain();\r\n        this.focus(newDomain, false);\r\n    }\r\n\r\n    _checkExtents (ext, outerLimits) {\r\n        if (!ext || ext.length !== 2 || !outerLimits || outerLimits.length !== 2) {\r\n            return ext;\r\n        }\r\n\r\n        if (ext[0] > outerLimits[1] || ext[1] < outerLimits[0]) {\r\n            console.warn('Could not intersect extents, will reset');\r\n        }\r\n        // Math.max does not work (as the values may be dates as well)\r\n        return [ext[0] > outerLimits[0] ? ext[0] : outerLimits[0], ext[1] < outerLimits[1] ? ext[1] : outerLimits[1]];\r\n    }\r\n\r\n    /**\r\n     * Zoom this chart to focus on the given range. The given range should be an array containing only\r\n     * 2 elements (`[start, end]`) defining a range in the x domain. If the range is not given or set\r\n     * to null, then the zoom will be reset. _For focus to work elasticX has to be turned off;\r\n     * otherwise focus will be ignored.\r\n     *\r\n     * To avoid ping-pong volley of events between a pair of range and focus charts please set\r\n     * `noRaiseEvents` to `true`. In that case it will update this chart but will not fire `zoom` event\r\n     * and not try to update back the associated range chart.\r\n     * If you are calling it manually - typically you will leave it to `false` (the default).\r\n     *\r\n     * @example\r\n     * chart.on('renderlet', function(chart) {\r\n     *     // smooth the rendering through event throttling\r\n     *     events.trigger(function(){\r\n     *          // focus some other chart to the range selected by user on this chart\r\n     *          someOtherChart.focus(chart.filter());\r\n     *     });\r\n     * })\r\n     * @param {Array<Number>} [range]\r\n     * @param {Boolean} [noRaiseEvents = false]\r\n     * @return {undefined}\r\n     */\r\n    focus (range, noRaiseEvents) {\r\n        if (this._zoomOutRestrict) {\r\n            // ensure range is within self._xOriginalDomain\r\n            range = this._checkExtents(range, this._xOriginalDomain);\r\n\r\n            // If it has an associated range chart ensure range is within domain of that rangeChart\r\n            if (this._rangeChart) {\r\n                range = this._checkExtents(range, this._rangeChart.x().domain());\r\n            }\r\n        }\r\n\r\n        this._zoomHandler(range, noRaiseEvents);\r\n        this._updateD3zoomTransform();\r\n    }\r\n\r\n    refocused () {\r\n        return !utils.arraysEqual(this.x().domain(), this._xOriginalDomain);\r\n    }\r\n\r\n    focusChart (c) {\r\n        if (!arguments.length) {\r\n            return this._focusChart;\r\n        }\r\n        this._focusChart = c;\r\n        this.on('filtered.dcjs-range-chart', chart => {\r\n            if (!chart.filter()) {\r\n                events.trigger(() => {\r\n                    this._focusChart.x().domain(this._focusChart.xOriginalDomain(), true);\r\n                });\r\n            } else if (!utils.arraysEqual(chart.filter(), this._focusChart.filter())) {\r\n                events.trigger(() => {\r\n                    this._focusChart.focus(chart.filter(), true);\r\n                });\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn on/off the brush-based range filter. When brushing is on then user can drag the mouse\r\n     * across a chart with a quantitative scale to perform range filtering based on the extent of the\r\n     * brush, or click on the bars of an ordinal bar chart or slices of a pie chart to filter and\r\n     * un-filter them. However turning on the brush filter will disable other interactive elements on\r\n     * the chart such as highlighting, tool tips, and reference lines. Zooming will still be possible\r\n     * if enabled, but only via scrolling (panning will be disabled.)\r\n     * @param {Boolean} [brushOn=true]\r\n     * @returns {Boolean|CoordinateGridMixin}\r\n     */\r\n    brushOn (brushOn) {\r\n        if (!arguments.length) {\r\n            return this._brushOn;\r\n        }\r\n        this._brushOn = brushOn;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * This will be internally used by composite chart onto children. Please go not invoke directly.\r\n     *\r\n     * @protected\r\n     * @param {Boolean} [brushOn=false]\r\n     * @returns {Boolean|CoordinateGridMixin}\r\n     */\r\n    parentBrushOn (brushOn) {\r\n        if (!arguments.length) {\r\n            return this._parentBrushOn;\r\n        }\r\n        this._parentBrushOn = brushOn;\r\n        return this;\r\n    }\r\n\r\n    // Get the SVG rendered brush\r\n    gBrush () {\r\n        return this._gBrush;\r\n    }\r\n\r\n    _hasRangeSelected (range) {\r\n        return range instanceof Array && range.length > 1;\r\n    }\r\n}\r\n","// https://github.com/d3/d3-plugins/blob/master/box/box.js\r\n// * Original source March 22, 2013\r\n// * Enhancements integrated on May 13, 2018 for dc.js library only\r\n\r\n// https://github.com/d3/d3-plugins/blob/master/LICENSE\r\n// Copyright (c) 2012-2015, Michael Bostock\r\n// All rights reserved.\r\n\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n//\r\n// * Redistributions of source code must retain the above copyright notice, this\r\n//   list of conditions and the following disclaimer.\r\n//\r\n// * Redistributions in binary form must reproduce the above copyright notice,\r\n//   this list of conditions and the following disclaimer in the documentation\r\n//   and/or other materials provided with the distribution.\r\n//\r\n// * The name Michael Bostock may not be used to endorse or promote products\r\n//   derived from this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n// DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,\r\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\r\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\r\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n/*eslint complexity: 0*/\r\n\r\n// Inspired by http://informationandvisualization.de/blog/box-plot\r\n\r\nimport {ascending, quantile, range} from 'd3-array';\r\nimport {select} from 'd3-selection';\r\nimport {scaleLinear} from 'd3-scale';\r\nimport {timerFlush} from 'd3-timer';\r\n\r\nimport {utils} from '../core/utils';\r\n\r\nexport const d3Box = function () {\r\n    let width = 1;\r\n    let height = 1;\r\n    let duration = 0;\r\n    const delay = 0;\r\n    let domain = null;\r\n    let value = Number;\r\n    let whiskers = boxWhiskers;\r\n    let quartiles = boxQuartiles;\r\n    let tickFormat = null;\r\n\r\n    // Enhanced attributes\r\n    let renderDataPoints = false;\r\n    const dataRadius = 3;\r\n    let dataOpacity = 0.3;\r\n    let dataWidthPortion = 0.8;\r\n    let renderTitle = false;\r\n    let showOutliers = true;\r\n    let boldOutlier = false;\r\n\r\n\r\n    // For each small multiple…\r\n    function box (g) {\r\n        g.each(function (data, index) {\r\n            data = data.map(value).sort(ascending);\r\n            const _g = select(this);\r\n            const n = data.length;\r\n            let min;\r\n            let max;\r\n\r\n            // Leave if there are no items.\r\n            if (n === 0) {return;}\r\n\r\n            // Compute quartiles. Must return exactly 3 elements.\r\n            const quartileData = data.quartiles = quartiles(data);\r\n\r\n            // Compute whiskers. Must return exactly 2 elements, or null.\r\n            const whiskerIndices = whiskers && whiskers.call(this, data, index),\r\n                whiskerData = whiskerIndices && whiskerIndices.map(_i => data[_i]);\r\n\r\n            // Compute outliers. If no whiskers are specified, all data are 'outliers'.\r\n            // We compute the outliers as indices, so that we can join across transitions!\r\n            const outlierIndices = whiskerIndices ?\r\n                range(0, whiskerIndices[0]).concat(range(whiskerIndices[1] + 1, n)) : range(n);\r\n\r\n            // Determine the maximum value based on if outliers are shown\r\n            if (showOutliers) {\r\n                min = data[0];\r\n                max = data[n - 1];\r\n            } else {\r\n                min = data[whiskerIndices[0]];\r\n                max = data[whiskerIndices[1]];\r\n            }\r\n            const pointIndices = range(whiskerIndices[0], whiskerIndices[1] + 1);\r\n\r\n            // Compute the new x-scale.\r\n            const x1 = scaleLinear()\r\n                .domain(domain && domain.call(this, data, index) || [min, max])\r\n                .range([height, 0]);\r\n\r\n            // Retrieve the old x-scale, if this is an update.\r\n            const x0 = this.__chart__ || scaleLinear()\r\n                .domain([0, Infinity])\r\n                .range(x1.range());\r\n\r\n            // Stash the new scale.\r\n            this.__chart__ = x1;\r\n\r\n            // Note: the box, median, and box tick elements are fixed in number,\r\n            // so we only have to handle enter and update. In contrast, the outliers\r\n            // and other elements are variable, so we need to exit them! Variable\r\n            // elements also fade in and out.\r\n\r\n            // Update center line: the vertical line spanning the whiskers.\r\n            const center = _g.selectAll('line.center')\r\n                .data(whiskerData ? [whiskerData] : []);\r\n\r\n            center.enter().insert('line', 'rect')\r\n                .attr('class', 'center')\r\n                .attr('x1', width / 2)\r\n                .attr('y1', d => x0(d[0]))\r\n                .attr('x2', width / 2)\r\n                .attr('y2', d => x0(d[1]))\r\n                .style('opacity', 1e-6)\r\n                .transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .style('opacity', 1)\r\n                .attr('y1', d => x1(d[0]))\r\n                .attr('y2', d => x1(d[1]));\r\n\r\n            center.transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .style('opacity', 1)\r\n                .attr('x1', width / 2)\r\n                .attr('x2', width / 2)\r\n                .attr('y1', d => x1(d[0]))\r\n                .attr('y2', d => x1(d[1]));\r\n\r\n            center.exit().transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .style('opacity', 1e-6)\r\n                .attr('y1', d => x1(d[0]))\r\n                .attr('y2', d => x1(d[1]))\r\n                .remove();\r\n\r\n            // Update innerquartile box.\r\n            const _box = _g.selectAll('rect.box')\r\n                .data([quartileData]);\r\n\r\n            _box.enter().append('rect')\r\n                .attr('class', 'box')\r\n                .attr('x', 0)\r\n                .attr('y', d => x0(d[2]))\r\n                .attr('width', width)\r\n                .attr('height', d => x0(d[0]) - x0(d[2]))\r\n                .style('fill-opacity', (renderDataPoints) ? 0.1 : 1)\r\n                .transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('y', d => x1(d[2]))\r\n                .attr('height', d => x1(d[0]) - x1(d[2]));\r\n\r\n            _box.transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('width', width)\r\n                .attr('y', d => x1(d[2]))\r\n                .attr('height', d => x1(d[0]) - x1(d[2]));\r\n\r\n            // Update median line.\r\n            const medianLine = _g.selectAll('line.median')\r\n                .data([quartileData[1]]);\r\n\r\n            medianLine.enter().append('line')\r\n                .attr('class', 'median')\r\n                .attr('x1', 0)\r\n                .attr('y1', x0)\r\n                .attr('x2', width)\r\n                .attr('y2', x0)\r\n                .transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('y1', x1)\r\n                .attr('y2', x1);\r\n\r\n            medianLine.transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('x1', 0)\r\n                .attr('x2', width)\r\n                .attr('y1', x1)\r\n                .attr('y2', x1);\r\n\r\n            // Update whiskers.\r\n            const whisker = _g.selectAll('line.whisker')\r\n                .data(whiskerData || []);\r\n\r\n            whisker.enter().insert('line', 'circle, text')\r\n                .attr('class', 'whisker')\r\n                .attr('x1', 0)\r\n                .attr('y1', x0)\r\n                .attr('x2', width)\r\n                .attr('y2', x0)\r\n                .style('opacity', 1e-6)\r\n                .transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('y1', x1)\r\n                .attr('y2', x1)\r\n                .style('opacity', 1);\r\n\r\n            whisker.transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('x1', 0)\r\n                .attr('x2', width)\r\n                .attr('y1', x1)\r\n                .attr('y2', x1)\r\n                .style('opacity', 1);\r\n\r\n            whisker.exit().transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('y1', x1)\r\n                .attr('y2', x1)\r\n                .style('opacity', 1e-6)\r\n                .remove();\r\n\r\n            // Update outliers.\r\n            if (showOutliers) {\r\n                const outlierClass = boldOutlier ? 'outlierBold' : 'outlier';\r\n                const outlierSize = boldOutlier ? 3 : 5;\r\n                const outlierX = boldOutlier ?\r\n                    function () {\r\n                        return Math.floor(Math.random() *\r\n                            (width * dataWidthPortion) +\r\n                            1 + ((width - (width * dataWidthPortion)) / 2));\r\n                    } :\r\n                    function () {\r\n                        return width / 2;\r\n                    };\r\n\r\n                const outlier = _g.selectAll(`circle.${outlierClass}`)\r\n                    .data(outlierIndices, Number);\r\n\r\n                outlier.enter().insert('circle', 'text')\r\n                    .attr('class', outlierClass)\r\n                    .attr('r', outlierSize)\r\n                    .attr('cx', outlierX)\r\n                    .attr('cy', i => x0(data[i]))\r\n                    .style('opacity', 1e-6)\r\n                    .transition()\r\n                    .duration(duration)\r\n                    .delay(delay)\r\n                    .attr('cy', i => x1(data[i]))\r\n                    .style('opacity', 0.6);\r\n\r\n                if (renderTitle) {\r\n                    outlier.selectAll('title').remove();\r\n                    outlier.append('title').text(i => data[i]);\r\n                }\r\n\r\n                outlier.transition()\r\n                    .duration(duration)\r\n                    .delay(delay)\r\n                    .attr('cx', outlierX)\r\n                    .attr('cy', i => x1(data[i]))\r\n                    .style('opacity', 0.6);\r\n\r\n                outlier.exit().transition()\r\n                    .duration(duration)\r\n                    .delay(delay)\r\n                    .attr('cy', 0) //function (i) { return x1(d[i]); })\r\n                    .style('opacity', 1e-6)\r\n                    .remove();\r\n            }\r\n\r\n            // Update Values\r\n            if (renderDataPoints) {\r\n                const point = _g.selectAll('circle.data')\r\n                    .data(pointIndices);\r\n\r\n                point.enter().insert('circle', 'text')\r\n                    .attr('class', 'data')\r\n                    .attr('r', dataRadius)\r\n                    .attr('cx', () => Math.floor(Math.random() *\r\n                            (width * dataWidthPortion) +\r\n                            1 + ((width - (width * dataWidthPortion)) / 2)))\r\n                    .attr('cy', i => x0(data[i]))\r\n                    .style('opacity', 1e-6)\r\n                    .transition()\r\n                    .duration(duration)\r\n                    .delay(delay)\r\n                    .attr('cy', i => x1(data[i]))\r\n                    .style('opacity', dataOpacity);\r\n\r\n                if (renderTitle) {\r\n                    point.selectAll('title').remove();\r\n                    point.append('title').text(i => data[i]);\r\n                }\r\n\r\n                point.transition()\r\n                    .duration(duration)\r\n                    .delay(delay)\r\n                    .attr('cx', () => Math.floor(Math.random() *\r\n                            (width * dataWidthPortion) +\r\n                            1 + ((width - (width * dataWidthPortion)) / 2)))\r\n                    .attr('cy', i => x1(data[i]))\r\n                    .style('opacity', dataOpacity);\r\n\r\n                point.exit().transition()\r\n                    .duration(duration)\r\n                    .delay(delay)\r\n                    .attr('cy', 0)\r\n                    .style('opacity', 1e-6)\r\n                    .remove();\r\n            }\r\n\r\n            // Compute the tick format.\r\n            const format = tickFormat || x1.tickFormat(8);\r\n\r\n            // Update box ticks.\r\n            const boxTick = _g.selectAll('text.box')\r\n                .data(quartileData);\r\n\r\n            boxTick.enter().append('text')\r\n                .attr('class', 'box')\r\n                .attr('dy', '.3em')\r\n                .attr('dx', (d, i) => i & 1 ? 6 : -6)\r\n                .attr('x', (d, i) => i & 1 ? width : 0)\r\n                .attr('y', x0)\r\n                .attr('text-anchor', (d, i) => i & 1 ? 'start' : 'end')\r\n                .text(format)\r\n                .transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('y', x1);\r\n\r\n            boxTick.transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .text(format)\r\n                .attr('x', (d, i) => i & 1 ? width : 0)\r\n                .attr('y', x1);\r\n\r\n            // Update whisker ticks. These are handled separately from the box\r\n            // ticks because they may or may not exist, and we want don't want\r\n            // to join box ticks pre-transition with whisker ticks post-.\r\n            const whiskerTick = _g.selectAll('text.whisker')\r\n                .data(whiskerData || []);\r\n\r\n            whiskerTick.enter().append('text')\r\n                .attr('class', 'whisker')\r\n                .attr('dy', '.3em')\r\n                .attr('dx', 6)\r\n                .attr('x', width)\r\n                .attr('y', x0)\r\n                .text(format)\r\n                .style('opacity', 1e-6)\r\n                .transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('y', x1)\r\n                .style('opacity', 1);\r\n\r\n            whiskerTick.transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .text(format)\r\n                .attr('x', width)\r\n                .attr('y', x1)\r\n                .style('opacity', 1);\r\n\r\n            whiskerTick.exit().transition()\r\n                .duration(duration)\r\n                .delay(delay)\r\n                .attr('y', x1)\r\n                .style('opacity', 1e-6)\r\n                .remove();\r\n\r\n            // Remove temporary quartiles element from within data array.\r\n            delete data.quartiles;\r\n        });\r\n        timerFlush();\r\n    }\r\n\r\n    box.width = function (x) {\r\n        if (!arguments.length) {\r\n            return width;\r\n        }\r\n        width = x;\r\n        return box;\r\n    };\r\n\r\n    box.height = function (x) {\r\n        if (!arguments.length) {\r\n            return height;\r\n        }\r\n        height = x;\r\n        return box;\r\n    };\r\n\r\n    box.tickFormat = function (x) {\r\n        if (!arguments.length) {\r\n            return tickFormat;\r\n        }\r\n        tickFormat = x;\r\n        return box;\r\n    };\r\n\r\n    box.showOutliers = function (x) {\r\n        if (!arguments.length) {\r\n            return showOutliers;\r\n        }\r\n        showOutliers = x;\r\n        return box;\r\n    };\r\n\r\n    box.boldOutlier = function (x) {\r\n        if (!arguments.length) {\r\n            return boldOutlier;\r\n        }\r\n        boldOutlier = x;\r\n        return box;\r\n    };\r\n\r\n    box.renderDataPoints = function (x) {\r\n        if (!arguments.length) {\r\n            return renderDataPoints;\r\n        }\r\n        renderDataPoints = x;\r\n        return box;\r\n    };\r\n\r\n    box.renderTitle = function (x) {\r\n        if (!arguments.length) {\r\n            return renderTitle;\r\n        }\r\n        renderTitle = x;\r\n        return box;\r\n    };\r\n\r\n    box.dataOpacity = function (x) {\r\n        if (!arguments.length) {\r\n            return dataOpacity;\r\n        }\r\n        dataOpacity = x;\r\n        return box;\r\n    };\r\n\r\n    box.dataWidthPortion = function (x) {\r\n        if (!arguments.length) {\r\n            return dataWidthPortion;\r\n        }\r\n        dataWidthPortion = x;\r\n        return box;\r\n    };\r\n\r\n    box.duration = function (x) {\r\n        if (!arguments.length) {\r\n            return duration;\r\n        }\r\n        duration = x;\r\n        return box;\r\n    };\r\n\r\n    box.domain = function (x) {\r\n        if (!arguments.length) {\r\n            return domain;\r\n        }\r\n        domain = x === null ? x : typeof x === 'function' ? x : utils.constant(x);\r\n        return box;\r\n    };\r\n\r\n    box.value = function (x) {\r\n        if (!arguments.length) {\r\n            return value;\r\n        }\r\n        value = x;\r\n        return box;\r\n    };\r\n\r\n    box.whiskers = function (x) {\r\n        if (!arguments.length) {\r\n            return whiskers;\r\n        }\r\n        whiskers = x;\r\n        return box;\r\n    };\r\n\r\n    box.quartiles = function (x) {\r\n        if (!arguments.length) {\r\n            return quartiles;\r\n        }\r\n        quartiles = x;\r\n        return box;\r\n    };\r\n\r\n    return box;\r\n};\r\n\r\nfunction boxWhiskers (d) {\r\n    return [0, d.length - 1];\r\n}\r\n\r\nfunction boxQuartiles (d) {\r\n    return [\r\n        quantile(d, 0.25),\r\n        quantile(d, 0.5),\r\n        quantile(d, 0.75)\r\n    ];\r\n}\r\n","import {stack} from 'd3-shape';\r\nimport {max, min} from 'd3-array';\r\n\r\nimport {pluck, utils} from '../core/utils';\r\nimport {CoordinateGridMixin} from './coordinate-grid-mixin';\r\n\r\n/**\r\n * Stack Mixin is an mixin that provides cross-chart support of stackability using d3.stack.\r\n * @mixin StackMixin\r\n * @mixes CoordinateGridMixin\r\n */\r\nexport class StackMixin extends CoordinateGridMixin {\r\n    constructor () {\r\n        super();\r\n\r\n        this._stackLayout = stack();\r\n\r\n        this._stack = [];\r\n        this._titles = {};\r\n\r\n        this._hidableStacks = false;\r\n        this._evadeDomainFilter = false;\r\n\r\n        this.data(() => {\r\n            const layers = this._stack.filter(this._visibility);\r\n            if (!layers.length) {\r\n                return [];\r\n            }\r\n            layers.forEach((l, i) => this._prepareValues(l, i));\r\n            const v4data = layers[0].values.map((v, i) => {\r\n                const col = {x: v.x};\r\n                layers.forEach(layer => {\r\n                    col[layer.name] = layer.values[i].y;\r\n                });\r\n                return col;\r\n            });\r\n            const keys = layers.map(layer => layer.name);\r\n            const v4result = this.stackLayout().keys(keys)(v4data);\r\n            v4result.forEach((series, i) => {\r\n                series.forEach((ys, j) => {\r\n                    layers[i].values[j].y0 = ys[0];\r\n                    layers[i].values[j].y1 = ys[1];\r\n                });\r\n            });\r\n            return layers;\r\n        });\r\n\r\n        this.colorAccessor(function (d) {\r\n            return this.layer || this.name || d.name || d.layer;\r\n        });\r\n    }\r\n\r\n    _prepareValues (layer, layerIdx) {\r\n        const valAccessor = layer.accessor || this.valueAccessor();\r\n        layer.name = String(layer.name || layerIdx);\r\n        const allValues = layer.group.all().map((d, i) => ({\r\n            x: this.keyAccessor()(d, i),\r\n            y: layer.hidden ? null : valAccessor(d, i),\r\n            data: d,\r\n            layer: layer.name,\r\n            hidden: layer.hidden\r\n        }));\r\n\r\n        layer.domainValues = allValues.filter(l => this._domainFilter()(l));\r\n        layer.values = this.evadeDomainFilter() ? allValues : layer.domainValues;\r\n    }\r\n\r\n    _domainFilter () {\r\n        if (!this.x()) {\r\n            return utils.constant(true);\r\n        }\r\n        const xDomain = this.x().domain();\r\n        if (this.isOrdinal()) {\r\n            // TODO #416\r\n            //var domainSet = d3.set(xDomain);\r\n            return () => true //domainSet.has(p.x);\r\n            ;\r\n        }\r\n        if (this.elasticX()) {\r\n            return () => true;\r\n        }\r\n        return p => p.x >= xDomain[0] && p.x <= xDomain[xDomain.length - 1];\r\n    }\r\n\r\n    /**\r\n     * Stack a new crossfilter group onto this chart with an optional custom value accessor. All stacks\r\n     * in the same chart will share the same key accessor and therefore the same set of keys.\r\n     *\r\n     * For example, in a stacked bar chart, the bars of each stack will be positioned using the same set\r\n     * of keys on the x axis, while stacked vertically. If name is specified then it will be used to\r\n     * generate the legend label.\r\n     * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\r\n     * @example\r\n     * // stack group using default accessor\r\n     * chart.stack(valueSumGroup)\r\n     * // stack group using custom accessor\r\n     * .stack(avgByDayGroup, function(d){return d.value.avgByDay;});\r\n     * @param {crossfilter.group} group\r\n     * @param {String} [name]\r\n     * @param {Function} [accessor]\r\n     * @returns {Array<{group: crossfilter.group, name: String, accessor: Function}>|StackMixin}\r\n     */\r\n    stack (group, name, accessor) {\r\n        if (!arguments.length) {\r\n            return this._stack;\r\n        }\r\n\r\n        if (arguments.length <= 2) {\r\n            accessor = name;\r\n        }\r\n\r\n        const layer = {group: group};\r\n        if (typeof name === 'string') {\r\n            layer.name = name;\r\n        }\r\n        if (typeof accessor === 'function') {\r\n            layer.accessor = accessor;\r\n        }\r\n        this._stack.push(layer);\r\n\r\n        return this;\r\n    }\r\n\r\n    group (g, n, f) {\r\n        if (!arguments.length) {\r\n            return super.group();\r\n        }\r\n        this._stack = [];\r\n        this._titles = {};\r\n        this.stack(g, n);\r\n        if (f) {\r\n            this.valueAccessor(f);\r\n        }\r\n        return super.group(g, n);\r\n    }\r\n\r\n    /**\r\n     * Allow named stacks to be hidden or shown by clicking on legend items.\r\n     * This does not affect the behavior of hideStack or showStack.\r\n     * @param {Boolean} [hidableStacks=false]\r\n     * @returns {Boolean|StackMixin}\r\n     */\r\n    hidableStacks (hidableStacks) {\r\n        if (!arguments.length) {\r\n            return this._hidableStacks;\r\n        }\r\n        this._hidableStacks = hidableStacks;\r\n        return this;\r\n    }\r\n\r\n    _findLayerByName (n) {\r\n        const i = this._stack.map(pluck('name')).indexOf(n);\r\n        return this._stack[i];\r\n    }\r\n\r\n    /**\r\n     * Hide all stacks on the chart with the given name.\r\n     * The chart must be re-rendered for this change to appear.\r\n     * @param {String} stackName\r\n     * @returns {StackMixin}\r\n     */\r\n    hideStack (stackName) {\r\n        const layer = this._findLayerByName(stackName);\r\n        if (layer) {\r\n            layer.hidden = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Show all stacks on the chart with the given name.\r\n     * The chart must be re-rendered for this change to appear.\r\n     * @param {String} stackName\r\n     * @returns {StackMixin}\r\n     */\r\n    showStack (stackName) {\r\n        const layer = this._findLayerByName(stackName);\r\n        if (layer) {\r\n            layer.hidden = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getValueAccessorByIndex (index) {\r\n        return this._stack[index].accessor || this.valueAccessor();\r\n    }\r\n\r\n    yAxisMin () {\r\n        const m = min(this._flattenStack(), p => (p.y < 0) ? (p.y + p.y0) : p.y0);\r\n        return utils.subtract(m, this.yAxisPadding());\r\n    }\r\n\r\n    yAxisMax () {\r\n        const m = max(this._flattenStack(), p => (p.y > 0) ? (p.y + p.y0) : p.y0);\r\n        return utils.add(m, this.yAxisPadding());\r\n    }\r\n\r\n    _flattenStack () {\r\n        // A round about way to achieve flatMap\r\n        // When target browsers support flatMap, just replace map -> flatMap, no concat needed\r\n        const values = this.data().map(layer => layer.domainValues);\r\n        return [].concat(...values);\r\n    }\r\n\r\n    xAxisMin () {\r\n        const m = min(this._flattenStack(), pluck('x'));\r\n        return utils.subtract(m, this.xAxisPadding(), this.xAxisPaddingUnit());\r\n    }\r\n\r\n    xAxisMax () {\r\n        const m = max(this._flattenStack(), pluck('x'));\r\n        return utils.add(m, this.xAxisPadding(), this.xAxisPaddingUnit());\r\n    }\r\n\r\n    /**\r\n     * Set or get the title function. Chart class will use this function to render svg title (usually interpreted by\r\n     * browser as tooltips) for each child element in the chart, i.e. a slice in a pie chart or a bubble in a bubble chart.\r\n     * Almost every chart supports title function however in grid coordinate chart you need to turn off brush in order to\r\n     * use title otherwise the brush layer will block tooltip trigger.\r\n     *\r\n     * If the first argument is a stack name, the title function will get or set the title for that stack. If stackName\r\n     * is not provided, the first stack is implied.\r\n     * @example\r\n     * // set a title function on 'first stack'\r\n     * chart.title('first stack', function(d) { return d.key + ': ' + d.value; });\r\n     * // get a title function from 'second stack'\r\n     * var secondTitleFunction = chart.title('second stack');\r\n     * @param {String} [stackName]\r\n     * @param {Function} [titleAccessor]\r\n     * @returns {String|StackMixin}\r\n     */\r\n    title (stackName, titleAccessor) {\r\n        if (!stackName) {\r\n            return super.title();\r\n        }\r\n\r\n        if (typeof stackName === 'function') {\r\n            return super.title(stackName);\r\n        }\r\n        if (stackName === this._groupName && typeof titleAccessor === 'function') {\r\n            return super.title(titleAccessor);\r\n        }\r\n\r\n        if (typeof titleAccessor !== 'function') {\r\n            return this._titles[stackName] || super.title();\r\n        }\r\n\r\n        this._titles[stackName] = titleAccessor;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the stack layout algorithm, which computes a baseline for each stack and\r\n     * propagates it to the next.\r\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Stack-Layout.md d3.stackD3v3}\r\n     * @param {Function} [_stack=d3.stackD3v3]\r\n     * @returns {Function|StackMixin}\r\n     */\r\n    stackLayout (_stack) {\r\n        if (!arguments.length) {\r\n            return this._stackLayout;\r\n        }\r\n        this._stackLayout = _stack;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Since dc.js 2.0, there has been {@link https://github.com/dc-js/dc.js/issues/949 an issue}\r\n     * where points are filtered to the current domain. While this is a useful optimization, it is\r\n     * incorrectly implemented: the next point outside the domain is required in order to draw lines\r\n     * that are clipped to the bounds, as well as bars that are partly clipped.\r\n     *\r\n     * A fix will be included in dc.js 2.1.x, but a workaround is needed for dc.js 2.0 and until\r\n     * that fix is published, so set this flag to skip any filtering of points.\r\n     *\r\n     * Once the bug is fixed, this flag will have no effect, and it will be deprecated.\r\n     * @param {Boolean} [evadeDomainFilter=false]\r\n     * @returns {Boolean|StackMixin}\r\n     */\r\n    evadeDomainFilter (evadeDomainFilter) {\r\n        if (!arguments.length) {\r\n            return this._evadeDomainFilter;\r\n        }\r\n        this._evadeDomainFilter = evadeDomainFilter;\r\n        return this;\r\n    }\r\n\r\n    _visibility (l) {\r\n        return !l.hidden;\r\n    }\r\n\r\n    _ordinalXDomain () {\r\n        const flat = this._flattenStack().map(pluck('data'));\r\n        const ordered = this._computeOrderedGroups(flat);\r\n        return ordered.map(this.keyAccessor());\r\n    }\r\n\r\n    legendables () {\r\n        return this._stack.map((layer, i) => ({\r\n            chart: this,\r\n            name: layer.name,\r\n            hidden: layer.hidden || false,\r\n            color: this.getColor.call(layer, layer.values, i)\r\n        }));\r\n    }\r\n\r\n    isLegendableHidden (d) {\r\n        const layer = this._findLayerByName(d.name);\r\n        return layer ? layer.hidden : false;\r\n    }\r\n\r\n    legendToggle (d) {\r\n        if (this._hidableStacks) {\r\n            if (this.isLegendableHidden(d)) {\r\n                this.showStack(d.name);\r\n            } else {\r\n                this.hideStack(d.name);\r\n            }\r\n            //_chart.redraw();\r\n            this.renderGroup();\r\n        }\r\n    }\r\n}\r\n","import {select} from 'd3-selection';\r\n\r\nimport {StackMixin} from '../base/stack-mixin';\r\nimport {transition} from '../core/core';\r\nimport {constants} from '../core/constants';\r\nimport {logger} from '../core/logger';\r\nimport {pluck, utils} from '../core/utils';\r\n\r\nconst MIN_BAR_WIDTH = 1;\r\nconst DEFAULT_GAP_BETWEEN_BARS = 2;\r\nconst LABEL_PADDING = 3;\r\n\r\n/**\r\n * Concrete bar chart/histogram implementation.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\r\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\r\n * @mixes StackMixin\r\n */\r\nexport class BarChart extends StackMixin {\r\n    /**\r\n     * Create a Bar Chart\r\n     * @example\r\n     * // create a bar chart under #chart-container1 element using the default global chart group\r\n     * var chart1 = new BarChart('#chart-container1');\r\n     * // create a bar chart under #chart-container2 element using chart group A\r\n     * var chart2 = new BarChart('#chart-container2', 'chartGroupA');\r\n     * // create a sub-chart under a composite parent chart\r\n     * var chart3 = new BarChart(compositeChart);\r\n     * @param {String|node|d3.selection|CompositeChart} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\r\n     * specifying a dom block element such as a div; or a dom element or d3 selection.  If the bar\r\n     * chart is a sub-chart in a {@link CompositeChart Composite Chart} then pass in the parent\r\n     * composite chart instance instead.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._gap = DEFAULT_GAP_BETWEEN_BARS;\r\n        this._centerBar = false;\r\n        this._alwaysUseRounding = false;\r\n\r\n        this._barWidth = undefined;\r\n\r\n        this.label(d => utils.printSingleValue(d.y0 + d.y), false);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    /**\r\n     * Get or set the outer padding on an ordinal bar chart. This setting has no effect on non-ordinal charts.\r\n     * Will pad the width by `padding * barWidth` on each side of the chart.\r\n     * @param {Number} [padding=0.5]\r\n     * @returns {Number|BarChart}\r\n     */\r\n    outerPadding (padding) {\r\n        if (!arguments.length) {\r\n            return this._outerRangeBandPadding();\r\n        }\r\n        return this._outerRangeBandPadding(padding);\r\n    }\r\n\r\n    rescale () {\r\n        super.rescale();\r\n        this._barWidth = undefined;\r\n        return this;\r\n    }\r\n\r\n    render () {\r\n        if (this.round() && this._centerBar && !this._alwaysUseRounding) {\r\n            logger.warn('By default, brush rounding is disabled if bars are centered. ' +\r\n                'See dc.js bar chart API documentation for details.');\r\n        }\r\n\r\n        return super.render();\r\n    }\r\n\r\n    plotData () {\r\n        let layers = this.chartBodyG().selectAll('g.stack')\r\n            .data(this.data());\r\n\r\n        this._calculateBarWidth();\r\n\r\n        layers = layers\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', (d, i) => `stack _${i}`)\r\n            .merge(layers);\r\n\r\n        const last = layers.size() - 1;\r\n        {\r\n            const chart = this;\r\n            layers.each(function (d, i) {\r\n                const layer = select(this);\r\n\r\n                chart._renderBars(layer, i, d);\r\n\r\n                if (chart.renderLabel() && last === i) {\r\n                    chart._renderLabels(layer, i, d);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _barHeight (d) {\r\n        return utils.safeNumber(Math.abs(this.y()(d.y + d.y0) - this.y()(d.y0)));\r\n    }\r\n\r\n    _labelXPos (d) {\r\n        let x = this.x()(d.x);\r\n        if (!this._centerBar) {\r\n            x += this._barWidth / 2;\r\n        }\r\n        if (this.isOrdinal() && this._gap !== undefined) {\r\n            x += this._gap / 2;\r\n        }\r\n        return utils.safeNumber(x);\r\n    }\r\n\r\n    _labelYPos (d) {\r\n        let y = this.y()(d.y + d.y0);\r\n\r\n        if (d.y < 0) {\r\n            y -= this._barHeight(d);\r\n        }\r\n\r\n        return utils.safeNumber(y - LABEL_PADDING);\r\n    }\r\n\r\n    _renderLabels (layer, layerIndex, data) {\r\n        const labels = layer.selectAll('text.barLabel')\r\n            .data(data.values, pluck('x'));\r\n\r\n        const labelsEnterUpdate = labels\r\n            .enter()\r\n            .append('text')\r\n            .attr('class', 'barLabel')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('x', d => this._labelXPos(d))\r\n            .attr('y', d => this._labelYPos(d))\r\n            .merge(labels);\r\n\r\n        if (this.isOrdinal()) {\r\n            labelsEnterUpdate.on('click', d => this.onClick(d));\r\n            labelsEnterUpdate.attr('cursor', 'pointer');\r\n        }\r\n\r\n        transition(labelsEnterUpdate, this.transitionDuration(), this.transitionDelay())\r\n            .attr('x', d => this._labelXPos(d))\r\n            .attr('y', d => this._labelYPos(d))\r\n            .text(d => this.label()(d));\r\n\r\n        transition(labels.exit(), this.transitionDuration(), this.transitionDelay())\r\n            .attr('height', 0)\r\n            .remove();\r\n    }\r\n\r\n    _barXPos (d) {\r\n        let x = this.x()(d.x);\r\n        if (this._centerBar) {\r\n            x -= this._barWidth / 2;\r\n        }\r\n        if (this.isOrdinal() && this._gap !== undefined) {\r\n            x += this._gap / 2;\r\n        }\r\n        return utils.safeNumber(x);\r\n    }\r\n\r\n    _renderBars (layer, layerIndex, data) {\r\n        const bars = layer.selectAll('rect.bar')\r\n            .data(data.values, pluck('x'));\r\n\r\n        const enter = bars.enter()\r\n            .append('rect')\r\n            .attr('class', 'bar')\r\n            .attr('fill', pluck('data', this.getColor))\r\n            .attr('x', d => this._barXPos(d))\r\n            .attr('y', this.yAxisHeight())\r\n            .attr('height', 0);\r\n\r\n        const barsEnterUpdate = enter.merge(bars);\r\n\r\n        if (this.renderTitle()) {\r\n            enter.append('title').text(pluck('data', this.title(data.name)));\r\n        }\r\n\r\n        if (this.isOrdinal()) {\r\n            barsEnterUpdate.on('click', d => this.onClick(d));\r\n        }\r\n\r\n        transition(barsEnterUpdate, this.transitionDuration(), this.transitionDelay())\r\n            .attr('x', d => this._barXPos(d))\r\n            .attr('y', d => {\r\n                let y = this.y()(d.y + d.y0);\r\n\r\n                if (d.y < 0) {\r\n                    y -= this._barHeight(d);\r\n                }\r\n\r\n                return utils.safeNumber(y);\r\n            })\r\n            .attr('width', this._barWidth)\r\n            .attr('height', d => this._barHeight(d))\r\n            .attr('fill', pluck('data', this.getColor))\r\n            .select('title').text(pluck('data', this.title(data.name)));\r\n\r\n        transition(bars.exit(), this.transitionDuration(), this.transitionDelay())\r\n            .attr('x', d => this.x()(d.x))\r\n            .attr('width', this._barWidth * 0.9)\r\n            .remove();\r\n    }\r\n\r\n    _calculateBarWidth () {\r\n        if (this._barWidth === undefined) {\r\n            const numberOfBars = this.xUnitCount();\r\n\r\n            // please can't we always use rangeBands for bar charts?\r\n            if (this.isOrdinal() && this._gap === undefined) {\r\n                this._barWidth = Math.floor(this.x().bandwidth());\r\n            } else if (this._gap) {\r\n                this._barWidth = Math.floor((this.xAxisLength() - (numberOfBars - 1) * this._gap) / numberOfBars);\r\n            } else {\r\n                this._barWidth = Math.floor(this.xAxisLength() / (1 + this.barPadding()) / numberOfBars);\r\n            }\r\n\r\n            if (this._barWidth === Infinity || isNaN(this._barWidth) || this._barWidth < MIN_BAR_WIDTH) {\r\n                this._barWidth = MIN_BAR_WIDTH;\r\n            }\r\n        }\r\n    }\r\n\r\n    fadeDeselectedArea (brushSelection) {\r\n        const bars = this.chartBodyG().selectAll('rect.bar');\r\n\r\n        if (this.isOrdinal()) {\r\n            if (this.hasFilter()) {\r\n                bars.classed(constants.SELECTED_CLASS, d => this.hasFilter(d.x));\r\n                bars.classed(constants.DESELECTED_CLASS, d => !this.hasFilter(d.x));\r\n            } else {\r\n                bars.classed(constants.SELECTED_CLASS, false);\r\n                bars.classed(constants.DESELECTED_CLASS, false);\r\n            }\r\n        } else if (this.brushOn() || this.parentBrushOn()) {\r\n            if (!this.brushIsEmpty(brushSelection)) {\r\n                const start = brushSelection[0];\r\n                const end = brushSelection[1];\r\n\r\n                bars.classed(constants.DESELECTED_CLASS, d => d.x < start || d.x >= end);\r\n            } else {\r\n                bars.classed(constants.DESELECTED_CLASS, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether the bar chart will render each bar centered around the data position on the x-axis.\r\n     * @param {Boolean} [centerBar=false]\r\n     * @returns {Boolean|BarChart}\r\n     */\r\n    centerBar (centerBar) {\r\n        if (!arguments.length) {\r\n            return this._centerBar;\r\n        }\r\n        this._centerBar = centerBar;\r\n        return this;\r\n    }\r\n\r\n    onClick (d) {\r\n        super.onClick(d.data);\r\n    }\r\n\r\n    /**\r\n     * Get or set the spacing between bars as a fraction of bar size. Valid values are between 0-1.\r\n     * Setting this value will also remove any previously set {@link BarChart#gap gap}. See the\r\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3 docs}\r\n     * for a visual description of how the padding is applied.\r\n     * @param {Number} [barPadding=0]\r\n     * @returns {Number|BarChart}\r\n     */\r\n    barPadding (barPadding) {\r\n        if (!arguments.length) {\r\n            return this._rangeBandPadding();\r\n        }\r\n        this._rangeBandPadding(barPadding);\r\n        this._gap = undefined;\r\n        return this;\r\n    }\r\n\r\n    _useOuterPadding () {\r\n        return this._gap === undefined;\r\n    }\r\n\r\n    /**\r\n     * Manually set fixed gap (in px) between bars instead of relying on the default auto-generated\r\n     * gap.  By default the bar chart implementation will calculate and set the gap automatically\r\n     * based on the number of data points and the length of the x axis.\r\n     * @param {Number} [gap=2]\r\n     * @returns {Number|BarChart}\r\n     */\r\n    gap (gap) {\r\n        if (!arguments.length) {\r\n            return this._gap;\r\n        }\r\n        this._gap = gap;\r\n        return this;\r\n    }\r\n\r\n    extendBrush (brushSelection) {\r\n        if (brushSelection && this.round() && (!this._centerBar || this._alwaysUseRounding)) {\r\n            brushSelection[0] = this.round()(brushSelection[0]);\r\n            brushSelection[1] = this.round()(brushSelection[1]);\r\n        }\r\n        return brushSelection;\r\n    }\r\n\r\n    /**\r\n     * Set or get whether rounding is enabled when bars are centered. If false, using\r\n     * rounding with centered bars will result in a warning and rounding will be ignored.  This flag\r\n     * has no effect if bars are not {@link BarChart#centerBar centered}.\r\n     * When using standard d3.js rounding methods, the brush often doesn't align correctly with\r\n     * centered bars since the bars are offset.  The rounding function must add an offset to\r\n     * compensate, such as in the following example.\r\n     * @example\r\n     * chart.round(function(n) { return Math.floor(n) + 0.5; });\r\n     * @param {Boolean} [alwaysUseRounding=false]\r\n     * @returns {Boolean|BarChart}\r\n     */\r\n    alwaysUseRounding (alwaysUseRounding) {\r\n        if (!arguments.length) {\r\n            return this._alwaysUseRounding;\r\n        }\r\n        this._alwaysUseRounding = alwaysUseRounding;\r\n        return this;\r\n    }\r\n\r\n    legendHighlight (d) {\r\n        const colorFilter = (color, inv) => function () {\r\n            const item = select(this);\r\n            const match = item.attr('fill') === color;\r\n            return inv ? !match : match;\r\n        };\r\n\r\n        if (!this.isLegendableHidden(d)) {\r\n            this.g().selectAll('rect.bar')\r\n                .classed('highlight', colorFilter(d.color))\r\n                .classed('fadeout', colorFilter(d.color, true));\r\n        }\r\n    }\r\n\r\n    legendReset () {\r\n        this.g().selectAll('rect.bar')\r\n            .classed('highlight', false)\r\n            .classed('fadeout', false);\r\n    }\r\n\r\n    xAxisMax () {\r\n        let max = super.xAxisMax();\r\n        if ('resolution' in this.xUnits()) {\r\n            const res = this.xUnits().resolution;\r\n            max += res;\r\n        }\r\n        return max;\r\n    }\r\n}\r\n\r\nexport const barChart = (parent, chartGroup) => new BarChart(parent, chartGroup);\r\n","import {scaleBand} from 'd3-scale';\r\nimport {select} from 'd3-selection';\r\nimport {min, max} from 'd3-array';\r\n\r\nimport {d3Box} from '../base/d3.box'\r\nimport {CoordinateGridMixin} from '../base/coordinate-grid-mixin';\r\nimport {transition} from '../core/core';\r\nimport {units} from '../core/units';\r\nimport {utils} from '../core/utils';\r\n\r\n// Returns a function to compute the interquartile range.\r\nfunction defaultWhiskersIQR (k) {\r\n    return d => {\r\n        const q1 = d.quartiles[0];\r\n        const q3 = d.quartiles[2];\r\n        const iqr = (q3 - q1) * k;\r\n\r\n        let i = -1;\r\n        let j = d.length;\r\n\r\n        do {\r\n            ++i;\r\n        } while (d[i] < q1 - iqr);\r\n\r\n        do {\r\n            --j;\r\n        } while (d[j] > q3 + iqr);\r\n\r\n        return [i, j];\r\n    };\r\n}\r\n\r\n/**\r\n * A box plot is a chart that depicts numerical data via their quartile ranges.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-basic.html Boxplot Basic example}\r\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-enhanced.html Boxplot Enhanced example}\r\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-render-data.html Boxplot Render Data example}\r\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-time.html Boxplot time example}\r\n * @mixes CoordinateGridMixin\r\n */\r\nexport class BoxPlot extends CoordinateGridMixin {\r\n    /**\r\n     * Create a BoxP lot.\r\n     *\r\n     * @example\r\n     * // create a box plot under #chart-container1 element using the default global chart group\r\n     * var boxPlot1 = new BoxPlot('#chart-container1');\r\n     * // create a box plot under #chart-container2 element using chart group A\r\n     * var boxPlot2 = new BoxPlot('#chart-container2', 'chartGroupA');\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._whiskerIqrFactor = 1.5;\r\n        this._whiskersIqr = defaultWhiskersIQR;\r\n        this._whiskers = this._whiskersIqr(this._whiskerIqrFactor);\r\n\r\n        this._box = d3Box();\r\n        this._tickFormat = null;\r\n        this._renderDataPoints = false;\r\n        this._dataOpacity = 0.3;\r\n        this._dataWidthPortion = 0.8;\r\n        this._showOutliers = true;\r\n        this._boldOutlier = false;\r\n\r\n        // Used in yAxisMin and yAxisMax to add padding in pixel coordinates\r\n        // so the min and max data points/whiskers are within the chart\r\n        this._yRangePadding = 8;\r\n\r\n        this._boxWidth = (innerChartWidth, xUnits) => {\r\n            if (this.isOrdinal()) {\r\n                return this.x().bandwidth();\r\n            } else {\r\n                return innerChartWidth / (1 + this.boxPadding()) / xUnits;\r\n            }\r\n        };\r\n\r\n        // default to ordinal\r\n        this.x(scaleBand());\r\n        this.xUnits(units.ordinal);\r\n\r\n        // valueAccessor should return an array of values that can be coerced into numbers\r\n        // or if data is overloaded for a static array of arrays, it should be `Number`.\r\n        // Empty arrays are not included.\r\n        this.data(group => group.all().map(d => {\r\n            d.map = accessor => accessor.call(d, d);\r\n            return d;\r\n        }).filter(d => {\r\n            const values = this.valueAccessor()(d);\r\n            return values.length !== 0;\r\n        }));\r\n\r\n        this.boxPadding(0.8);\r\n        this.outerPadding(0.5);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    /**\r\n     * Get or set the spacing between boxes as a fraction of box size. Valid values are within 0-1.\r\n     * See the {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3 docs}\r\n     * for a visual description of how the padding is applied.\r\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand d3.scaleBand}\r\n     * @param {Number} [padding=0.8]\r\n     * @returns {Number|BoxPlot}\r\n     */\r\n    boxPadding (padding) {\r\n        if (!arguments.length) {\r\n            return this._rangeBandPadding();\r\n        }\r\n        return this._rangeBandPadding(padding);\r\n    }\r\n\r\n    /**\r\n     * Get or set the outer padding on an ordinal box chart. This setting has no effect on non-ordinal charts\r\n     * or on charts with a custom {@link BoxPlot#boxWidth .boxWidth}. Will pad the width by\r\n     * `padding * barWidth` on each side of the chart.\r\n     * @param {Number} [padding=0.5]\r\n     * @returns {Number|BoxPlot}\r\n     */\r\n    outerPadding (padding) {\r\n        if (!arguments.length) {\r\n            return this._outerRangeBandPadding();\r\n        }\r\n        return this._outerRangeBandPadding(padding);\r\n    }\r\n\r\n    /**\r\n     * Get or set the numerical width of the boxplot box. The width may also be a function taking as\r\n     * parameters the chart width excluding the right and left margins, as well as the number of x\r\n     * units.\r\n     * @example\r\n     * // Using numerical parameter\r\n     * chart.boxWidth(10);\r\n     * // Using function\r\n     * chart.boxWidth((innerChartWidth, xUnits) { ... });\r\n     * @param {Number|Function} [boxWidth=0.5]\r\n     * @returns {Number|Function|BoxPlot}\r\n     */\r\n    boxWidth (boxWidth) {\r\n        if (!arguments.length) {\r\n            return this._boxWidth;\r\n        }\r\n        this._boxWidth = typeof boxWidth === 'function' ? boxWidth : utils.constant(boxWidth);\r\n        return this;\r\n    }\r\n\r\n    _boxTransform (d, i) {\r\n        const xOffset = this.x()(this.keyAccessor()(d, i));\r\n        return `translate(${xOffset}, 0)`;\r\n    }\r\n\r\n    _preprocessData () {\r\n        if (this.elasticX()) {\r\n            this.x().domain([]);\r\n        }\r\n    }\r\n\r\n    plotData () {\r\n        this._calculatedBoxWidth = this._boxWidth(this.effectiveWidth(), this.xUnitCount());\r\n\r\n        this._box.whiskers(this._whiskers)\r\n            .width(this._calculatedBoxWidth)\r\n            .height(this.effectiveHeight())\r\n            .value(this.valueAccessor())\r\n            .domain(this.y().domain())\r\n            .duration(this.transitionDuration())\r\n            .tickFormat(this._tickFormat)\r\n            .renderDataPoints(this._renderDataPoints)\r\n            .dataOpacity(this._dataOpacity)\r\n            .dataWidthPortion(this._dataWidthPortion)\r\n            .renderTitle(this.renderTitle())\r\n            .showOutliers(this._showOutliers)\r\n            .boldOutlier(this._boldOutlier);\r\n\r\n        const boxesG = this.chartBodyG().selectAll('g.box').data(this.data(), this.keyAccessor());\r\n\r\n        const boxesGEnterUpdate = this._renderBoxes(boxesG);\r\n        this._updateBoxes(boxesGEnterUpdate);\r\n        this._removeBoxes(boxesG);\r\n\r\n        this.fadeDeselectedArea(this.filter());\r\n    }\r\n\r\n    _renderBoxes (boxesG) {\r\n        const boxesGEnter = boxesG.enter().append('g');\r\n\r\n        boxesGEnter\r\n            .attr('class', 'box')\r\n            .attr('transform', (d, i) => this._boxTransform(d, i))\r\n            .call(this._box)\r\n            .on('click', d => {\r\n                this.filter(this.keyAccessor()(d));\r\n                this.redrawGroup();\r\n            });\r\n        return boxesGEnter.merge(boxesG);\r\n    }\r\n\r\n    _updateBoxes (boxesG) {\r\n        const chart = this;\r\n        transition(boxesG, this.transitionDuration(), this.transitionDelay())\r\n            .attr('transform', (d, i) => this._boxTransform(d, i))\r\n            .call(this._box)\r\n            .each(function (d) {\r\n                const color = chart.getColor(d, 0);\r\n                select(this).select('rect.box').attr('fill', color);\r\n                select(this).selectAll('circle.data').attr('fill', color);\r\n            });\r\n    }\r\n\r\n    _removeBoxes (boxesG) {\r\n        boxesG.exit().remove().call(this._box);\r\n    }\r\n\r\n    _minDataValue () {\r\n        return min(this.data(), e => min(this.valueAccessor()(e)));\r\n    }\r\n\r\n    _maxDataValue () {\r\n        return max(this.data(), e => max(this.valueAccessor()(e)));\r\n    }\r\n\r\n    _yAxisRangeRatio () {\r\n        return ((this._maxDataValue() - this._minDataValue()) / this.effectiveHeight());\r\n    }\r\n\r\n    fadeDeselectedArea (brushSelection) {\r\n        const chart = this;\r\n        if (this.hasFilter()) {\r\n            if (this.isOrdinal()) {\r\n                this.g().selectAll('g.box').each(function (d) {\r\n                    if (chart.isSelectedNode(d)) {\r\n                        chart.highlightSelected(this);\r\n                    } else {\r\n                        chart.fadeDeselected(this);\r\n                    }\r\n                });\r\n            } else {\r\n                if (!(this.brushOn() || this.parentBrushOn())) {\r\n                    return;\r\n                }\r\n                const start = brushSelection[0];\r\n                const end = brushSelection[1];\r\n                this.g().selectAll('g.box').each(function (d) {\r\n                    const key = chart.keyAccessor()(d);\r\n                    if (key < start || key >= end) {\r\n                        chart.fadeDeselected(this);\r\n                    } else {\r\n                        chart.highlightSelected(this);\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            this.g().selectAll('g.box').each(function () {\r\n                chart.resetHighlight(this);\r\n            });\r\n        }\r\n    }\r\n\r\n    isSelectedNode (d) {\r\n        return this.hasFilter(this.keyAccessor()(d));\r\n    }\r\n\r\n    yAxisMin () {\r\n        const padding = this._yRangePadding * this._yAxisRangeRatio();\r\n        return utils.subtract(this._minDataValue() - padding, this.yAxisPadding());\r\n    }\r\n\r\n    yAxisMax () {\r\n        const padding = this._yRangePadding * this._yAxisRangeRatio();\r\n        return utils.add(this._maxDataValue() + padding, this.yAxisPadding());\r\n    }\r\n\r\n    /**\r\n     * Get or set the numerical format of the boxplot median, whiskers and quartile labels. Defaults\r\n     * to integer formatting.\r\n     * @example\r\n     * // format ticks to 2 decimal places\r\n     * chart.tickFormat(d3.format('.2f'));\r\n     * @param {Function} [tickFormat]\r\n     * @returns {Number|Function|BoxPlot}\r\n     */\r\n    tickFormat (tickFormat) {\r\n        if (!arguments.length) {\r\n            return this._tickFormat;\r\n        }\r\n        this._tickFormat = tickFormat;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the amount of padding to add, in pixel coordinates, to the top and\r\n     * bottom of the chart to accommodate box/whisker labels.\r\n     * @example\r\n     * // allow more space for a bigger whisker font\r\n     * chart.yRangePadding(12);\r\n     * @param {Function} [yRangePadding = 8]\r\n     * @returns {Number|Function|BoxPlot}\r\n     */\r\n    yRangePadding (yRangePadding) {\r\n        if (!arguments.length) {\r\n            return this._yRangePadding;\r\n        }\r\n        this._yRangePadding = yRangePadding;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set whether individual data points will be rendered.\r\n     * @example\r\n     * // Enable rendering of individual data points\r\n     * chart.renderDataPoints(true);\r\n     * @param {Boolean} [show=false]\r\n     * @returns {Boolean|BoxPlot}\r\n     */\r\n    renderDataPoints (show) {\r\n        if (!arguments.length) {\r\n            return this._renderDataPoints;\r\n        }\r\n        this._renderDataPoints = show;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the opacity when rendering data.\r\n     * @example\r\n     * // If individual data points are rendered increase the opacity.\r\n     * chart.dataOpacity(0.7);\r\n     * @param {Number} [opacity=0.3]\r\n     * @returns {Number|BoxPlot}\r\n     */\r\n    dataOpacity (opacity) {\r\n        if (!arguments.length) {\r\n            return this._dataOpacity;\r\n        }\r\n        this._dataOpacity = opacity;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the portion of the width of the box to show data points.\r\n     * @example\r\n     * // If individual data points are rendered increase the data box.\r\n     * chart.dataWidthPortion(0.9);\r\n     * @param {Number} [percentage=0.8]\r\n     * @returns {Number|BoxPlot}\r\n     */\r\n    dataWidthPortion (percentage) {\r\n        if (!arguments.length) {\r\n            return this._dataWidthPortion;\r\n        }\r\n        this._dataWidthPortion = percentage;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set whether outliers will be rendered.\r\n     * @example\r\n     * // Disable rendering of outliers\r\n     * chart.showOutliers(false);\r\n     * @param {Boolean} [show=true]\r\n     * @returns {Boolean|BoxPlot}\r\n     */\r\n    showOutliers (show) {\r\n        if (!arguments.length) {\r\n            return this._showOutliers;\r\n        }\r\n        this._showOutliers = show;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set whether outliers will be drawn bold.\r\n     * @example\r\n     * // If outliers are rendered display as bold\r\n     * chart.boldOutlier(true);\r\n     * @param {Boolean} [show=false]\r\n     * @returns {Boolean|BoxPlot}\r\n     */\r\n    boldOutlier (show) {\r\n        if (!arguments.length) {\r\n            return this._boldOutlier;\r\n        }\r\n        this._boldOutlier = show;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport const boxPlot = (parent, chartGroup) => new BoxPlot(parent, chartGroup);\r\n","import {BubbleMixin} from '../base/bubble-mixin';\r\nimport {CoordinateGridMixin} from '../base/coordinate-grid-mixin';\r\nimport {transition} from '../core/core';\r\n\r\n/**\r\n * A concrete implementation of a general purpose bubble chart that allows data visualization using the\r\n * following dimensions:\r\n * - x axis position\r\n * - y axis position\r\n * - bubble radius\r\n * - color\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\r\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\r\n * @mixes BubbleMixin\r\n * @mixes CoordinateGridMixin\r\n */\r\nexport class BubbleChart extends BubbleMixin(CoordinateGridMixin) {\r\n    /**\r\n     * Create a Bubble Chart.\r\n     *\r\n     * @example\r\n     * // create a bubble chart under #chart-container1 element using the default global chart group\r\n     * var bubbleChart1 = new BubbleChart('#chart-container1');\r\n     * // create a bubble chart under #chart-container2 element using chart group A\r\n     * var bubbleChart2 = new BubbleChart('#chart-container2', 'chartGroupA');\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this.transitionDuration(750);\r\n\r\n        this.transitionDelay(0);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    _bubbleLocator (d) {\r\n        return `translate(${this._bubbleX(d)},${this._bubbleY(d)})`;\r\n    }\r\n\r\n    plotData () {\r\n        this.calculateRadiusDomain();\r\n        this.r().range([this.MIN_RADIUS, this.xAxisLength() * this.maxBubbleRelativeSize()]);\r\n\r\n        const data = this.data();\r\n        let bubbleG = this.chartBodyG().selectAll(`g.${this.BUBBLE_NODE_CLASS}`)\r\n            .data(data, d => d.key);\r\n        if (this.sortBubbleSize()) {\r\n            // update dom order based on sort\r\n            bubbleG.order();\r\n        }\r\n\r\n        this._removeNodes(bubbleG);\r\n\r\n        bubbleG = this._renderNodes(bubbleG);\r\n\r\n        this._updateNodes(bubbleG);\r\n\r\n        this.fadeDeselectedArea(this.filter());\r\n    }\r\n\r\n    _renderNodes (bubbleG) {\r\n        const bubbleGEnter = bubbleG.enter().append('g');\r\n\r\n        bubbleGEnter\r\n            .attr('class', this.BUBBLE_NODE_CLASS)\r\n            .attr('transform', d => this._bubbleLocator(d))\r\n            .append('circle').attr('class', (d, i) => `${this.BUBBLE_CLASS} _${i}`)\r\n            .on('click', d => this.onClick(d))\r\n            .attr('fill', this.getColor)\r\n            .attr('r', 0);\r\n\r\n        bubbleG = bubbleGEnter.merge(bubbleG);\r\n\r\n        transition(bubbleG, this.transitionDuration(), this.transitionDelay())\r\n            .select(`circle.${this.BUBBLE_CLASS}`)\r\n            .attr('r', d => this.bubbleR(d))\r\n            .attr('opacity', d => (this.bubbleR(d) > 0) ? 1 : 0);\r\n\r\n        this._doRenderLabel(bubbleGEnter);\r\n\r\n        this._doRenderTitles(bubbleGEnter);\r\n\r\n        return bubbleG;\r\n    }\r\n\r\n    _updateNodes (bubbleG) {\r\n        transition(bubbleG, this.transitionDuration(), this.transitionDelay())\r\n            .attr('transform', d => this._bubbleLocator(d))\r\n            .select(`circle.${this.BUBBLE_CLASS}`)\r\n            .attr('fill', this.getColor)\r\n            .attr('r', d => this.bubbleR(d))\r\n            .attr('opacity', d => (this.bubbleR(d) > 0) ? 1 : 0);\r\n\r\n        this.doUpdateLabels(bubbleG);\r\n        this.doUpdateTitles(bubbleG);\r\n    }\r\n\r\n    _removeNodes (bubbleG) {\r\n        bubbleG.exit().remove();\r\n    }\r\n\r\n    _bubbleX (d) {\r\n        let x = this.x()(this.keyAccessor()(d));\r\n        if (isNaN(x) || !isFinite(x)) {\r\n            x = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    _bubbleY (d) {\r\n        let y = this.y()(this.valueAccessor()(d));\r\n        if (isNaN(y) || !isFinite(y)) {\r\n            y = 0;\r\n        }\r\n        return y;\r\n    }\r\n\r\n    renderBrush () {\r\n        // override default x axis brush from parent chart\r\n    }\r\n\r\n    redrawBrush (brushSelection, doTransition) {\r\n        // override default x axis brush from parent chart\r\n        this.fadeDeselectedArea(brushSelection);\r\n    }\r\n}\r\n\r\nexport const bubbleChart = (parent, chartGroup) => new BubbleChart(parent, chartGroup);\r\n","import {mouse} from 'd3-selection';\r\n\r\nimport {BaseMixin} from '../base/base-mixin';\r\nimport {BubbleMixin} from '../base/bubble-mixin';\r\nimport {transition} from '../core/core';\r\nimport {constants} from '../core/constants';\r\nimport {utils} from '../core/utils';\r\n\r\nconst BUBBLE_OVERLAY_CLASS = 'bubble-overlay';\r\nconst BUBBLE_NODE_CLASS = 'node';\r\nconst BUBBLE_CLASS = 'bubble';\r\n\r\n/**\r\n * The bubble overlay chart is quite different from the typical bubble chart. With the bubble overlay\r\n * chart you can arbitrarily place bubbles on an existing svg or bitmap image, thus changing the\r\n * typical x and y positioning while retaining the capability to visualize data using bubble radius\r\n * and coloring.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\r\n * @mixes BubbleMixin\r\n * @mixes BaseMixin\r\n */\r\nexport class BubbleOverlay extends BubbleMixin(BaseMixin) {\r\n    /**\r\n     * Create a Bubble Overlay.\r\n     *\r\n     * @example\r\n     * // create a bubble overlay chart on top of the '#chart-container1 svg' element using the default global chart group\r\n     * var bubbleChart1 = BubbleOverlayChart('#chart-container1').svg(d3.select('#chart-container1 svg'));\r\n     * // create a bubble overlay chart on top of the '#chart-container2 svg' element using chart group A\r\n     * var bubbleChart2 = new CompositeChart('#chart-container2', 'chartGroupA').svg(d3.select('#chart-container2 svg'));\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        /**\r\n         * **mandatory**\r\n         *\r\n         * Set the underlying svg image element. Unlike other dc charts this chart will not generate a svg\r\n         * element; therefore the bubble overlay chart will not work if this function is not invoked. If the\r\n         * underlying image is a bitmap, then an empty svg will need to be created on top of the image.\r\n         * @example\r\n         * // set up underlying svg element\r\n         * chart.svg(d3.select('#chart svg'));\r\n         * @param {SVGElement|d3.selection} [imageElement]\r\n         * @returns {BubbleOverlay}\r\n         */\r\n        this._g = undefined;\r\n        this._points = [];\r\n\r\n        this.transitionDuration(750);\r\n\r\n        this.transitionDelay(0);\r\n\r\n        this.radiusValueAccessor(d => d.value);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    /**\r\n     * **mandatory**\r\n     *\r\n     * Set up a data point on the overlay. The name of a data point should match a specific 'key' among\r\n     * data groups generated using keyAccessor.  If a match is found (point name <-> data group key)\r\n     * then a bubble will be generated at the position specified by the function. x and y\r\n     * value specified here are relative to the underlying svg.\r\n     * @param {String} name\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     * @returns {BubbleOverlay}\r\n     */\r\n    point (name, x, y) {\r\n        this._points.push({name: name, x: x, y: y});\r\n        return this;\r\n    }\r\n\r\n    _doRender () {\r\n        this._g = this._initOverlayG();\r\n\r\n        this.r().range([this.MIN_RADIUS, this.width() * this.maxBubbleRelativeSize()]);\r\n\r\n        this._initializeBubbles();\r\n\r\n        this.fadeDeselectedArea(this.filter());\r\n\r\n        return this;\r\n    }\r\n\r\n    _initOverlayG () {\r\n        this._g = this.select(`g.${BUBBLE_OVERLAY_CLASS}`);\r\n        if (this._g.empty()) {\r\n            this._g = this.svg().append('g').attr('class', BUBBLE_OVERLAY_CLASS);\r\n        }\r\n        return this._g;\r\n    }\r\n\r\n    _initializeBubbles () {\r\n        const data = this._mapData();\r\n        this.calculateRadiusDomain();\r\n\r\n        this._points.forEach(point => {\r\n            const nodeG = this._getNodeG(point, data);\r\n\r\n            let circle = nodeG.select(`circle.${BUBBLE_CLASS}`);\r\n\r\n            if (circle.empty()) {\r\n                circle = nodeG.append('circle')\r\n                    .attr('class', BUBBLE_CLASS)\r\n                    .attr('r', 0)\r\n                    .attr('fill', this.getColor)\r\n                    .on('click', d => this.onClick(d));\r\n            }\r\n\r\n            transition(circle, this.transitionDuration(), this.transitionDelay())\r\n                .attr('r', d => this.bubbleR(d));\r\n\r\n            this._doRenderLabel(nodeG);\r\n\r\n            this._doRenderTitles(nodeG);\r\n        });\r\n    }\r\n\r\n    _mapData () {\r\n        const data = {};\r\n        this.data().forEach(datum => {\r\n            data[this.keyAccessor()(datum)] = datum;\r\n        });\r\n        return data;\r\n    }\r\n\r\n    _getNodeG (point, data) {\r\n        const bubbleNodeClass = `${BUBBLE_NODE_CLASS} ${utils.nameToId(point.name)}`;\r\n\r\n        let nodeG = this._g.select(`g.${utils.nameToId(point.name)}`);\r\n\r\n        if (nodeG.empty()) {\r\n            nodeG = this._g.append('g')\r\n                .attr('class', bubbleNodeClass)\r\n                .attr('transform', `translate(${point.x},${point.y})`);\r\n        }\r\n\r\n        nodeG.datum(data[point.name]);\r\n\r\n        return nodeG;\r\n    }\r\n\r\n    _doRedraw () {\r\n        this._updateBubbles();\r\n\r\n        this.fadeDeselectedArea(this.filter());\r\n\r\n        return this;\r\n    }\r\n\r\n    _updateBubbles () {\r\n        const data = this._mapData();\r\n        this.calculateRadiusDomain();\r\n\r\n        this._points.forEach(point => {\r\n            const nodeG = this._getNodeG(point, data);\r\n\r\n            const circle = nodeG.select(`circle.${BUBBLE_CLASS}`);\r\n\r\n            transition(circle, this.transitionDuration(), this.transitionDelay())\r\n                .attr('r', d => this.bubbleR(d))\r\n                .attr('fill', this.getColor);\r\n\r\n            this.doUpdateLabels(nodeG);\r\n\r\n            this.doUpdateTitles(nodeG);\r\n        });\r\n    }\r\n\r\n    debug (flag) {\r\n        if (flag) {\r\n            let debugG = this.select(`g.${constants.DEBUG_GROUP_CLASS}`);\r\n\r\n            if (debugG.empty()) {\r\n                debugG = this.svg()\r\n                    .append('g')\r\n                    .attr('class', constants.DEBUG_GROUP_CLASS);\r\n            }\r\n\r\n            const debugText = debugG.append('text')\r\n                .attr('x', 10)\r\n                .attr('y', 20);\r\n\r\n            debugG\r\n                .append('rect')\r\n                .attr('width', this.width())\r\n                .attr('height', this.height())\r\n                .on('mousemove', () => {\r\n                    const position = mouse(debugG.node());\r\n                    const msg = `${position[0]}, ${position[1]}`;\r\n                    debugText.text(msg);\r\n                });\r\n        } else {\r\n            this.selectAll('.debug').remove();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport const bubbleOverlay = (parent, chartGroup) => new BubbleOverlay(parent, chartGroup);\r\n","import {event, select} from 'd3-selection';\r\n\r\nimport {events} from '../core/events';\r\nimport {BaseMixin} from '../base/base-mixin';\r\nimport {utils} from '../core/utils'\r\n\r\nconst GROUP_CSS_CLASS = 'dc-cbox-group';\r\nconst ITEM_CSS_CLASS = 'dc-cbox-item';\r\n\r\n/**\r\n * The CboxMenu is a simple widget designed to filter a dimension by\r\n * selecting option(s) from a set of HTML `<input />` elements. The menu can be\r\n * made into a set of radio buttons (single select) or checkboxes (multiple).\r\n * @mixes BaseMixin\r\n */\r\nexport class CboxMenu extends BaseMixin {\r\n    /**\r\n     * Create a Cbox Menu.\r\n     *\r\n     * @example\r\n     * // create a cboxMenu under #cbox-container using the default global chart group\r\n     * var cbox = new CboxMenu('#cbox-container')\r\n     *                .dimension(states)\r\n     *                .group(stateGroup);\r\n     * // the option text can be set via the title() function\r\n     * // by default the option text is '`key`: `value`'\r\n     * cbox.title(function (d){\r\n     *     return 'STATE: ' + d.key;\r\n     * })\r\n     * @param {String|node|d3.selection|CompositeChart} parent - Any valid\r\n     * [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this widget should be placed in.\r\n     * Interaction with the widget will only trigger events and redraws within its group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._cbox = undefined;\r\n        this._promptText = 'Select all';\r\n        this._multiple = false;\r\n        this._inputType = 'radio';\r\n        this._promptValue = null;\r\n\r\n        this._uniqueId = utils.uniqueId();\r\n\r\n        this.data(group => group.all().filter(this._filterDisplayed));\r\n\r\n        // There is an accessor for this attribute, initialized with default value\r\n        this._filterDisplayed = d => this.valueAccessor()(d) > 0;\r\n\r\n        this._order = (a, b) => {\r\n            if (this.keyAccessor()(a) > this.keyAccessor()(b)) {\r\n                return 1;\r\n            }\r\n            if (this.keyAccessor()(a) < this.keyAccessor()(b)) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        };\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    _doRender () {\r\n        return this._doRedraw();\r\n    }\r\n\r\n    _doRedraw () {\r\n        this.select('ul').remove();\r\n        this._cbox = this.root()\r\n            .append('ul')\r\n            .classed(GROUP_CSS_CLASS, true);\r\n        this._renderOptions();\r\n\r\n        if (this.hasFilter() && this._multiple) {\r\n            this._cbox.selectAll('input')\r\n            // adding `false` avoids failing test cases in phantomjs\r\n                .property('checked', d => d && this.filters().indexOf(String(this.keyAccessor()(d))) >= 0 || false);\r\n        } else if (this.hasFilter()) {\r\n            this._cbox.selectAll('input')\r\n                .property('checked', d => {\r\n                    if (!d) {\r\n                        return false;\r\n                    }\r\n                    return this.keyAccessor()(d) === this.filter();\r\n                });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _renderOptions () {\r\n        let options = this._cbox\r\n            .selectAll(`li.${ITEM_CSS_CLASS}`)\r\n            .data(this.data(), d => this.keyAccessor()(d));\r\n\r\n        options.exit().remove();\r\n\r\n        options = options.enter()\r\n            .append('li')\r\n            .classed(ITEM_CSS_CLASS, true)\r\n            .merge(options);\r\n\r\n        options\r\n            .append('input')\r\n            .attr('type', this._inputType)\r\n            .attr('value', d => this.keyAccessor()(d))\r\n            .attr('name', `domain_${this._uniqueId}`)\r\n            .attr('id', (d, i) => `input_${this._uniqueId}_${i}`);\r\n        options\r\n            .append('label')\r\n            .attr('for', (d, i) => `input_${this._uniqueId}_${i}`)\r\n            .text(this.title());\r\n\r\n        const chart = this;\r\n        // 'all' option\r\n        if (this._multiple) {\r\n            this._cbox\r\n                .append('li')\r\n                .append('input')\r\n                .attr('type', 'reset')\r\n                .text(this._promptText)\r\n                .on('click', function (d, i) {\r\n                    return chart._onChange(d, i, this);\r\n                });\r\n        } else {\r\n            const li = this._cbox.append('li');\r\n            li.append('input')\r\n                .attr('type', this._inputType)\r\n                .attr('value', this._promptValue)\r\n                .attr('name', `domain_${this._uniqueId}`)\r\n                .attr('id', (d, i) => `input_${this._uniqueId}_all`)\r\n                .property('checked', true);\r\n            li.append('label')\r\n                .attr('for', (d, i) => `input_${this._uniqueId}_all`)\r\n                .text(this._promptText);\r\n        }\r\n\r\n        this._cbox\r\n            .selectAll(`li.${ITEM_CSS_CLASS}`)\r\n            .sort(this._order);\r\n\r\n        this._cbox.on('change', function (d, i) {\r\n            return chart._onChange(d, i, this);\r\n        });\r\n        return options;\r\n    }\r\n\r\n    _onChange (d, i, element) {\r\n        let values;\r\n        const target = select(event.target);\r\n        let options;\r\n\r\n        if (!target.datum()) {\r\n            values = this._promptValue || null;\r\n        } else {\r\n            options = select(element).selectAll('input')\r\n                .filter(function (o) {\r\n                    if (o) {\r\n                        return this.checked;\r\n                    }\r\n                });\r\n            values = options.nodes().map(option => option.value);\r\n            // check if only prompt option is selected\r\n            if (!this._multiple && values.length === 1) {\r\n                values = values[0];\r\n            }\r\n        }\r\n        this.onChange(values);\r\n    }\r\n\r\n    onChange (val) {\r\n        if (val && this._multiple) {\r\n            this.replaceFilter([val]);\r\n        } else if (val) {\r\n            this.replaceFilter(val);\r\n        } else {\r\n            this.filterAll();\r\n        }\r\n        events.trigger(() => {\r\n            this.redrawGroup();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get or set the function that controls the ordering of option tags in the\r\n     * cbox menu. By default options are ordered by the group key in ascending\r\n     * order.\r\n     * @param {Function} [order]\r\n     * @returns {Function|CboxMenu}\r\n     * @example\r\n     * // order by the group's value\r\n     * chart.order(function (a,b) {\r\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\r\n     * });\r\n     */\r\n    order (order) {\r\n        if (!arguments.length) {\r\n            return this._order;\r\n        }\r\n        this._order = order;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the text displayed in the options used to prompt selection.\r\n     * @param {String} [promptText='Select all']\r\n     * @returns {String|CboxMenu}\r\n     * @example\r\n     * chart.promptText('All states');\r\n     */\r\n    promptText (promptText) {\r\n        if (!arguments.length) {\r\n            return this._promptText;\r\n        }\r\n        this._promptText = promptText;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the function that filters options prior to display. By default options\r\n     * with a value of < 1 are not displayed.\r\n     * @param {function} [filterDisplayed]\r\n     * @returns {Function|CboxMenu}\r\n     * @example\r\n     * // display all options override the `filterDisplayed` function:\r\n     * chart.filterDisplayed(function () {\r\n     *     return true;\r\n     * });\r\n     */\r\n    filterDisplayed (filterDisplayed) {\r\n        if (!arguments.length) {\r\n            return this._filterDisplayed;\r\n        }\r\n        this._filterDisplayed = filterDisplayed;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Controls the type of input element. Setting it to true converts\r\n     * the HTML `input` tags from radio buttons to checkboxes.\r\n     * @param {boolean} [multiple=false]\r\n     * @returns {Boolean|CboxMenu}\r\n     * @example\r\n     * chart.multiple(true);\r\n     */\r\n    multiple (multiple) {\r\n        if (!arguments.length) {\r\n            return this._multiple;\r\n        }\r\n        this._multiple = multiple;\r\n        if (this._multiple) {\r\n            this._inputType = 'checkbox';\r\n        } else {\r\n            this._inputType = 'radio';\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Controls the default value to be used for\r\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\r\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\r\n     * just the prompt is selected.\r\n     * @param {?*} [promptValue=null]\r\n     * @returns {*|CboxMenu}\r\n     */\r\n    promptValue (promptValue) {\r\n        if (!arguments.length) {\r\n            return this._promptValue;\r\n        }\r\n        this._promptValue = promptValue;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nexport const cboxMenu = (parent, chartGroup) => new CboxMenu(parent, chartGroup);\r\n","import {min, max} from 'd3-array';\r\nimport {scaleLinear} from 'd3-scale';\r\nimport {axisRight} from 'd3-axis';\r\n\r\nimport {utils} from '../core/utils';\r\nimport {CoordinateGridMixin} from '../base/coordinate-grid-mixin';\r\n\r\nconst SUB_CHART_CLASS = 'sub';\r\nconst DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING = 12;\r\n\r\n/**\r\n * Composite charts are a special kind of chart that render multiple charts on the same Coordinate\r\n * Grid. You can overlay (compose) different bar/line/area charts in a single composite chart to\r\n * achieve some quite flexible charting effects.\r\n * @mixes CoordinateGridMixin\r\n */\r\nexport class CompositeChart extends CoordinateGridMixin {\r\n    /**\r\n     * Create a Composite Chart.\r\n     * @example\r\n     * // create a composite chart under #chart-container1 element using the default global chart group\r\n     * var compositeChart1 = new CompositeChart('#chart-container1');\r\n     * // create a composite chart under #chart-container2 element using chart group A\r\n     * var compositeChart2 = new CompositeChart('#chart-container2', 'chartGroupA');\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._children = [];\r\n\r\n        this._childOptions = {};\r\n\r\n        this._shareColors = false;\r\n        this._shareTitle = true;\r\n        this._alignYAxes = false;\r\n\r\n        this._rightYAxis = axisRight();\r\n        this._rightYAxisLabel = 0;\r\n        this._rightYAxisLabelPadding = DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING;\r\n        this._rightY = undefined;\r\n        this._rightAxisGridLines = false;\r\n\r\n        this._mandatoryAttributes([]);\r\n        this.transitionDuration(500);\r\n        this.transitionDelay(0);\r\n\r\n        this.on('filtered.dcjs-composite-chart', chart => {\r\n            // Propagate the filters onto the children\r\n            // Notice that on children the call is .replaceFilter and not .filter\r\n            //   the reason is that _chart.filter() returns the entire current set of filters not just the last added one\r\n            for (let i = 0; i < this._children.length; ++i) {\r\n                this._children[i].replaceFilter(this.filter());\r\n            }\r\n        });\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    _generateG () {\r\n        const g = super._generateG();\r\n\r\n        for (let i = 0; i < this._children.length; ++i) {\r\n            const child = this._children[i];\r\n\r\n            this._generateChildG(child, i);\r\n\r\n            if (!child.dimension()) {\r\n                child.dimension(this.dimension());\r\n            }\r\n            if (!child.group()) {\r\n                child.group(this.group());\r\n            }\r\n\r\n            child.chartGroup(this.chartGroup());\r\n            child.svg(this.svg());\r\n            child.xUnits(this.xUnits());\r\n            child.transitionDuration(this.transitionDuration(), this.transitionDelay());\r\n            child.parentBrushOn(this.brushOn());\r\n            child.brushOn(false);\r\n            child.renderTitle(this.renderTitle());\r\n            child.elasticX(this.elasticX());\r\n        }\r\n\r\n        return g;\r\n    }\r\n\r\n    rescale () {\r\n        super.rescale();\r\n\r\n        this._children.forEach(child => {\r\n            child.rescale();\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    resizing (resizing) {\r\n        if (!arguments.length) {\r\n            return super.resizing();\r\n        }\r\n        super.resizing(resizing);\r\n\r\n        this._children.forEach(child => {\r\n            child.resizing(resizing);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    _prepareYAxis () {\r\n        const left = (this._leftYAxisChildren().length !== 0);\r\n        const right = (this._rightYAxisChildren().length !== 0);\r\n        const ranges = this._calculateYAxisRanges(left, right);\r\n\r\n        if (left) {\r\n            this._prepareLeftYAxis(ranges);\r\n        }\r\n        if (right) {\r\n            this._prepareRightYAxis(ranges);\r\n        }\r\n\r\n        if (this._leftYAxisChildren().length > 0 && !this._rightAxisGridLines) {\r\n            this._renderHorizontalGridLinesForAxis(this.g(), this.y(), this.yAxis());\r\n        } else if (this._rightYAxisChildren().length > 0) {\r\n            this._renderHorizontalGridLinesForAxis(this.g(), this._rightY, this._rightYAxis);\r\n        }\r\n    }\r\n\r\n    renderYAxis () {\r\n        if (this._leftYAxisChildren().length !== 0) {\r\n            this.renderYAxisAt('y', this.yAxis(), this.margins().left);\r\n            this.renderYAxisLabel('y', this.yAxisLabel(), -90);\r\n        }\r\n\r\n        if (this._rightYAxisChildren().length !== 0) {\r\n            this.renderYAxisAt('yr', this.rightYAxis(), this.width() - this.margins().right);\r\n            this.renderYAxisLabel('yr', this.rightYAxisLabel(), 90, this.width() - this._rightYAxisLabelPadding);\r\n        }\r\n    }\r\n\r\n    _calculateYAxisRanges (left, right) {\r\n        let lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax;\r\n        let ranges;\r\n\r\n        if (left) {\r\n            lyAxisMin = this._yAxisMin();\r\n            lyAxisMax = this._yAxisMax();\r\n        }\r\n\r\n        if (right) {\r\n            ryAxisMin = this._rightYAxisMin();\r\n            ryAxisMax = this._rightYAxisMax();\r\n        }\r\n\r\n        if (this.alignYAxes() && left && right) {\r\n            ranges = this._alignYAxisRanges(lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax);\r\n        }\r\n\r\n        return ranges || {\r\n            lyAxisMin: lyAxisMin,\r\n            lyAxisMax: lyAxisMax,\r\n            ryAxisMin: ryAxisMin,\r\n            ryAxisMax: ryAxisMax\r\n        };\r\n    }\r\n\r\n    _alignYAxisRanges (lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax) {\r\n        // since the two series will share a zero, each Y is just a multiple\r\n        // of the other. and the ratio should be the ratio of the ranges of the\r\n        // input data, so that they come out the same height. so we just min/max\r\n\r\n        // note: both ranges already include zero due to the stack mixin (#667)\r\n        // if #667 changes, we can reconsider whether we want data height or\r\n        // height from zero to be equal. and it will be possible for the axes\r\n        // to be aligned but not visible.\r\n        const extentRatio = (ryAxisMax - ryAxisMin) / (lyAxisMax - lyAxisMin);\r\n\r\n        return {\r\n            lyAxisMin: Math.min(lyAxisMin, ryAxisMin / extentRatio),\r\n            lyAxisMax: Math.max(lyAxisMax, ryAxisMax / extentRatio),\r\n            ryAxisMin: Math.min(ryAxisMin, lyAxisMin * extentRatio),\r\n            ryAxisMax: Math.max(ryAxisMax, lyAxisMax * extentRatio)\r\n        };\r\n    }\r\n\r\n    _prepareRightYAxis (ranges) {\r\n        const needDomain = this.rightY() === undefined || this.elasticY(),\r\n            needRange = needDomain || this.resizing();\r\n        if (this.rightY() === undefined) {\r\n            this.rightY(scaleLinear());\r\n        }\r\n        if (needDomain) {\r\n            this.rightY().domain([ranges.ryAxisMin, ranges.ryAxisMax]);\r\n        }\r\n        if (needRange) {\r\n            this.rightY().rangeRound([this.yAxisHeight(), 0]);\r\n        }\r\n\r\n        this.rightY().range([this.yAxisHeight(), 0]);\r\n        this.rightYAxis(this.rightYAxis().scale(this.rightY()));\r\n\r\n        // In D3v4 create a RightAxis\r\n        // _chart.rightYAxis().orient('right');\r\n    }\r\n\r\n    _prepareLeftYAxis (ranges) {\r\n        const needDomain = this.y() === undefined || this.elasticY(),\r\n            needRange = needDomain || this.resizing();\r\n        if (this.y() === undefined) {\r\n            this.y(scaleLinear());\r\n        }\r\n        if (needDomain) {\r\n            this.y().domain([ranges.lyAxisMin, ranges.lyAxisMax]);\r\n        }\r\n        if (needRange) {\r\n            this.y().rangeRound([this.yAxisHeight(), 0]);\r\n        }\r\n\r\n        this.y().range([this.yAxisHeight(), 0]);\r\n        this.yAxis(this.yAxis().scale(this.y()));\r\n\r\n        // In D3v4 create a LeftAxis\r\n        // _chart.yAxis().orient('left');\r\n    }\r\n\r\n    _generateChildG (child, i) {\r\n        child._generateG(this.g());\r\n        child.g().attr('class', `${SUB_CHART_CLASS} _${i}`);\r\n    }\r\n\r\n    plotData () {\r\n        for (let i = 0; i < this._children.length; ++i) {\r\n            const child = this._children[i];\r\n\r\n            if (!child.g()) {\r\n                this._generateChildG(child, i);\r\n            }\r\n\r\n            if (this._shareColors) {\r\n                child.colors(this.colors());\r\n            }\r\n\r\n            child.x(this.x());\r\n\r\n            child.xAxis(this.xAxis());\r\n\r\n            if (child.useRightYAxis()) {\r\n                child.y(this.rightY());\r\n                child.yAxis(this.rightYAxis());\r\n            } else {\r\n                child.y(this.y());\r\n                child.yAxis(this.yAxis());\r\n            }\r\n\r\n            child.plotData();\r\n\r\n            child._activateRenderlets();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get or set whether to draw gridlines from the right y axis.  Drawing from the left y axis is the\r\n     * default behavior. This option is only respected when subcharts with both left and right y-axes\r\n     * are present.\r\n     * @param {Boolean} [useRightAxisGridLines=false]\r\n     * @returns {Boolean|CompositeChart}\r\n     */\r\n    useRightAxisGridLines (useRightAxisGridLines) {\r\n        if (!arguments) {\r\n            return this._rightAxisGridLines;\r\n        }\r\n\r\n        this._rightAxisGridLines = useRightAxisGridLines;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set chart-specific options for all child charts. This is equivalent to calling\r\n     * {@link BaseMixin#options .options} on each child chart.\r\n     * @param {Object} [childOptions]\r\n     * @returns {Object|CompositeChart}\r\n     */\r\n    childOptions (childOptions) {\r\n        if (!arguments.length) {\r\n            return this._childOptions;\r\n        }\r\n        this._childOptions = childOptions;\r\n        this._children.forEach(child => {\r\n            child.options(this._childOptions);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    fadeDeselectedArea (brushSelection) {\r\n        if (this.brushOn()) {\r\n            for (let i = 0; i < this._children.length; ++i) {\r\n                const child = this._children[i];\r\n                child.fadeDeselectedArea(brushSelection);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set or get the right y axis label.\r\n     * @param {String} [rightYAxisLabel]\r\n     * @param {Number} [padding]\r\n     * @returns {String|CompositeChart}\r\n     */\r\n    rightYAxisLabel (rightYAxisLabel, padding) {\r\n        if (!arguments.length) {\r\n            return this._rightYAxisLabel;\r\n        }\r\n        this._rightYAxisLabel = rightYAxisLabel;\r\n        this.margins().right -= this._rightYAxisLabelPadding;\r\n        this._rightYAxisLabelPadding = (padding === undefined) ? DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING : padding;\r\n        this.margins().right += this._rightYAxisLabelPadding;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Combine the given charts into one single composite coordinate grid chart.\r\n     * @example\r\n     * moveChart.compose([\r\n     *     // when creating sub-chart you need to pass in the parent chart\r\n     *     new LineChart(moveChart)\r\n     *         .group(indexAvgByMonthGroup) // if group is missing then parent's group will be used\r\n     *         .valueAccessor(function (d){return d.value.avg;})\r\n     *         // most of the normal functions will continue to work in a composed chart\r\n     *         .renderArea(true)\r\n     *         .stack(monthlyMoveGroup, function (d){return d.value;})\r\n     *         .title(function (d){\r\n     *             var value = d.value.avg?d.value.avg:d.value;\r\n     *             if(isNaN(value)) value = 0;\r\n     *             return dateFormat(d.key) + '\\n' + numberFormat(value);\r\n     *         }),\r\n     *     new BarChart(moveChart)\r\n     *         .group(volumeByMonthGroup)\r\n     *         .centerBar(true)\r\n     * ]);\r\n     * @param {Array<Chart>} [subChartArray]\r\n     * @returns {CompositeChart}\r\n     */\r\n    compose (subChartArray) {\r\n        this._children = subChartArray;\r\n        this._children.forEach(child => {\r\n            child.height(this.height());\r\n            child.width(this.width());\r\n            child.margins(this.margins());\r\n\r\n            if (this._shareTitle) {\r\n                child.title(this.title());\r\n            }\r\n\r\n            child.options(this._childOptions);\r\n        });\r\n        this.rescale();\r\n        return this;\r\n    }\r\n\r\n    _setChildrenProperty (prop, value) {\r\n        this._children.forEach(child => {\r\n            child[prop](value);\r\n        });\r\n    }\r\n\r\n    // properties passed through in compose()\r\n    height (height) {\r\n        if(!arguments.length) {\r\n            return super.height();\r\n        }\r\n        super.height(height);\r\n        this._setChildrenProperty('height', height);\r\n        return this;\r\n    }\r\n\r\n    width (width) {\r\n        if(!arguments.length) {\r\n            return super.width();\r\n        }\r\n        super.width(width);\r\n        this._setChildrenProperty('width', width);\r\n        return this;\r\n    }\r\n\r\n    margins (margins) {\r\n        if(!arguments.length) {\r\n            return super.margins();\r\n        }\r\n        super.margins(margins);\r\n        this._setChildrenProperty('margins', margins);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns the child charts which are composed into the composite chart.\r\n     * @returns {Array<BaseMixin>}\r\n     */\r\n    children () {\r\n        return this._children;\r\n    }\r\n\r\n    /**\r\n     * Get or set color sharing for the chart. If set, the {@link ColorMixin#colors .colors()} value from this chart\r\n     * will be shared with composed children. Additionally if the child chart implements\r\n     * Stackable and has not set a custom .colorAccessor, then it will generate a color\r\n     * specific to its order in the composition.\r\n     * @param {Boolean} [shareColors=false]\r\n     * @returns {Boolean|CompositeChart}\r\n     */\r\n    shareColors (shareColors) {\r\n        if (!arguments.length) {\r\n            return this._shareColors;\r\n        }\r\n        this._shareColors = shareColors;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set title sharing for the chart. If set, the {@link BaseMixin#title .title()} value from\r\n     * this chart will be shared with composed children.\r\n     *\r\n     * Note: currently you must call this before `compose` or the child will still get the parent's\r\n     * `title` function!\r\n     * @param {Boolean} [shareTitle=true]\r\n     * @returns {Boolean|CompositeChart}\r\n     */\r\n    shareTitle (shareTitle) {\r\n        if (!arguments.length) {\r\n            return this._shareTitle;\r\n        }\r\n        this._shareTitle = shareTitle;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the y scale for the right axis. The right y scale is typically automatically\r\n     * generated by the chart implementation.\r\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\r\n     * @param {d3.scale} [yScale]\r\n     * @returns {d3.scale|CompositeChart}\r\n     */\r\n    rightY (yScale) {\r\n        if (!arguments.length) {\r\n            return this._rightY;\r\n        }\r\n        this._rightY = yScale;\r\n        this.rescale();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set alignment between left and right y axes. A line connecting '0' on both y axis\r\n     * will be parallel to x axis. This only has effect when {@link CoordinateGridMixin#elasticY elasticY} is true.\r\n     * @param {Boolean} [alignYAxes=false]\r\n     * @returns {Chart}\r\n     */\r\n    alignYAxes (alignYAxes) {\r\n        if (!arguments.length) {\r\n            return this._alignYAxes;\r\n        }\r\n        this._alignYAxes = alignYAxes;\r\n        this.rescale();\r\n        return this;\r\n    }\r\n\r\n    _leftYAxisChildren () {\r\n        return this._children.filter(child => !child.useRightYAxis());\r\n    }\r\n\r\n    _rightYAxisChildren () {\r\n        return this._children.filter(child => child.useRightYAxis());\r\n    }\r\n\r\n    _getYAxisMin (charts) {\r\n        return charts.map(c => c.yAxisMin());\r\n    }\r\n\r\n    _yAxisMin () {\r\n        return min(this._getYAxisMin(this._leftYAxisChildren()));\r\n    }\r\n\r\n    _rightYAxisMin () {\r\n        return min(this._getYAxisMin(this._rightYAxisChildren()));\r\n    }\r\n\r\n    _getYAxisMax (charts) {\r\n        return charts.map(c => c.yAxisMax());\r\n    }\r\n\r\n    _yAxisMax () {\r\n        return utils.add(max(this._getYAxisMax(this._leftYAxisChildren())), this.yAxisPadding());\r\n    }\r\n\r\n    _rightYAxisMax () {\r\n        return utils.add(max(this._getYAxisMax(this._rightYAxisChildren())), this.yAxisPadding());\r\n    }\r\n\r\n    _getAllXAxisMinFromChildCharts () {\r\n        return this._children.map(c => c.xAxisMin());\r\n    }\r\n\r\n    xAxisMin () {\r\n        return utils.subtract(min(this._getAllXAxisMinFromChildCharts()), this.xAxisPadding(), this.xAxisPaddingUnit());\r\n    }\r\n\r\n    _getAllXAxisMaxFromChildCharts () {\r\n        return this._children.map(c => c.xAxisMax());\r\n    }\r\n\r\n    xAxisMax () {\r\n        return utils.add(max(this._getAllXAxisMaxFromChildCharts()), this.xAxisPadding(), this.xAxisPaddingUnit());\r\n    }\r\n\r\n    legendables () {\r\n        return this._children.reduce((items, child) => {\r\n            if (this._shareColors) {\r\n                child.colors(this.colors());\r\n            }\r\n            items.push.apply(items, child.legendables());\r\n            return items;\r\n        }, []);\r\n    }\r\n\r\n    legendHighlight (d) {\r\n        for (let j = 0; j < this._children.length; ++j) {\r\n            const child = this._children[j];\r\n            child.legendHighlight(d);\r\n        }\r\n    }\r\n\r\n    legendReset (d) {\r\n        for (let j = 0; j < this._children.length; ++j) {\r\n            const child = this._children[j];\r\n            child.legendReset(d);\r\n        }\r\n    }\r\n\r\n    legendToggle () {\r\n        console.log('composite should not be getting legendToggle itself');\r\n    }\r\n\r\n    /**\r\n     * Set or get the right y axis used by the composite chart. This function is most useful when y\r\n     * axis customization is required. The y axis in dc.js is an instance of a\r\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight) therefore it supports any valid\r\n     * d3 axis manipulation.\r\n     *\r\n     * **Caution**: The right y axis is usually generated internally by dc; resetting it may cause\r\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\r\n     * returns the axis, not the chart,\r\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\r\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\r\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisRight}\r\n     * @example\r\n     * // customize y axis tick format\r\n     * chart.rightYAxis().tickFormat(function (v) {return v + '%';});\r\n     * // customize y axis tick values\r\n     * chart.rightYAxis().tickValues([0, 100, 200, 300]);\r\n     * @param {d3.axisRight} [rightYAxis]\r\n     * @returns {d3.axisRight|CompositeChart}\r\n     */\r\n    rightYAxis (rightYAxis) {\r\n        if (!arguments.length) {\r\n            return this._rightYAxis;\r\n        }\r\n        this._rightYAxis = rightYAxis;\r\n        return this;\r\n    }\r\n\r\n    yAxisMin () {\r\n        throw new Error('Not supported for this chart type');\r\n    }\r\n\r\n    yAxisMax () {\r\n        throw new Error('Not supported for this chart type');\r\n    }\r\n}\r\n\r\nexport const compositeChart = (parent, chartGroup) => new CompositeChart(parent, chartGroup);\r\n","import {format} from 'd3-format';\r\n\r\nimport {logger} from '../core/logger';\r\nimport {BaseMixin} from '../base/base-mixin';\r\n\r\n/**\r\n * The data count widget is a simple widget designed to display the number of records selected by the\r\n * current filters out of the total number of records in the data set. Once created the data count widget\r\n * will automatically update the text content of child elements with the following classes:\r\n *\r\n * * `.total-count` - total number of records\r\n * * `.filter-count` - number of records matched by the current filters\r\n *\r\n * Note: this widget works best for the specific case of showing the number of records out of a\r\n * total. If you want a more general-purpose numeric display, please use the\r\n * {@link NumberDisplay} widget instead.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\r\n * @mixes BaseMixin\r\n */\r\nexport class DataCount extends BaseMixin {\r\n    /**\r\n     * Create a Data Count widget.\r\n     * @example\r\n     * var ndx = crossfilter(data);\r\n     * var all = ndx.groupAll();\r\n     *\r\n     * new DataCount('.dc-data-count')\r\n     *     .crossfilter(ndx)\r\n     *     .groupAll(all);\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._formatNumber = format(',d');\r\n        this._crossfilter = null;\r\n        this._groupAll = null;\r\n        this._html = {some: '', all: ''};\r\n\r\n        this._mandatoryAttributes(['crossfilter', 'groupAll']);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    /**\r\n     * Gets or sets an optional object specifying HTML templates to use depending how many items are\r\n     * selected. The text `%total-count` will replaced with the total number of records, and the text\r\n     * `%filter-count` will be replaced with the number of selected records.\r\n     * - all: HTML template to use if all items are selected\r\n     * - some: HTML template to use if not all items are selected\r\n     * @example\r\n     * counter.html({\r\n     *      some: '%filter-count out of %total-count records selected',\r\n     *      all: 'All records selected. Click on charts to apply filters'\r\n     * })\r\n     * @param {{some:String, all: String}} [options]\r\n     * @returns {{some:String, all: String}|DataCount}\r\n     */\r\n    html (options) {\r\n        if (!arguments.length) {\r\n            return this._html;\r\n        }\r\n        if (options.all) {\r\n            this._html.all = options.all;\r\n        }\r\n        if (options.some) {\r\n            this._html.some = options.some;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets an optional function to format the filter count and total count.\r\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\r\n     * @example\r\n     * counter.formatNumber(d3.format('.2g'))\r\n     * @param {Function} [formatter=d3.format('.2g')]\r\n     * @returns {Function|DataCount}\r\n     */\r\n    formatNumber (formatter) {\r\n        if (!arguments.length) {\r\n            return this._formatNumber;\r\n        }\r\n        this._formatNumber = formatter;\r\n        return this;\r\n    }\r\n\r\n    _doRender () {\r\n        const tot = this.crossfilter().size(),\r\n            val = this.groupAll().value();\r\n        const all = this._formatNumber(tot);\r\n        const selected = this._formatNumber(val);\r\n\r\n        if ((tot === val) && (this._html.all !== '')) {\r\n            this.root().html(this._html.all.replace('%total-count', all).replace('%filter-count', selected));\r\n        } else if (this._html.some !== '') {\r\n            this.root().html(this._html.some.replace('%total-count', all).replace('%filter-count', selected));\r\n        } else {\r\n            this.selectAll('.total-count').text(all);\r\n            this.selectAll('.filter-count').text(selected);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _doRedraw () {\r\n        return this._doRender();\r\n    }\r\n\r\n    crossfilter (cf) {\r\n        if (!arguments.length) {\r\n            return this._crossfilter;\r\n        }\r\n        this._crossfilter = cf;\r\n        return this;\r\n    }\r\n\r\n    dimension (cf) {\r\n        logger.warnOnce('consider using dataCount.crossfilter instead of dataCount.dimension for clarity');\r\n        if (!arguments.length) {\r\n            return this.crossfilter();\r\n        }\r\n        return this.crossfilter(cf);\r\n    }\r\n\r\n    groupAll (groupAll) {\r\n        if (!arguments.length) {\r\n            return this._groupAll;\r\n        }\r\n        this._groupAll = groupAll;\r\n        return this;\r\n    }\r\n\r\n    group (groupAll) {\r\n        logger.warnOnce('consider using dataCount.groupAll instead of dataCount.group for clarity');\r\n        if (!arguments.length) {\r\n            return this.groupAll();\r\n        }\r\n        return this.groupAll(groupAll);\r\n    }\r\n}\r\n\r\nexport const dataCount = (parent, chartGroup) => new DataCount(parent, chartGroup);\r\n","import {ascending} from 'd3-array';\r\nimport {nest} from 'd3-collection';\r\n\r\nimport {logger} from '../core/logger';\r\nimport {BaseMixin} from '../base/base-mixin';\r\n\r\nconst LABEL_CSS_CLASS = 'dc-grid-label';\r\nconst ITEM_CSS_CLASS = 'dc-grid-item';\r\nconst SECTION_CSS_CLASS = 'dc-grid-section dc-grid-group';\r\nconst GRID_CSS_CLASS = 'dc-grid-top';\r\n\r\n/**\r\n * Data grid is a simple widget designed to list the filtered records, providing\r\n * a simple way to define how the items are displayed.\r\n *\r\n * Note: Formerly the data grid chart (and data table) used the {@link DataGrid#group group} attribute as a\r\n * keying function for {@link https://github.com/d3/d3-collection/blob/master/README.md#nest nesting} the data\r\n * together in sections.  This was confusing so it has been renamed to `section`, although `group` still works.\r\n *\r\n * Examples:\r\n * - {@link https://dc-js.github.io/dc.js/ep/ List of members of the european parliament}\r\n * @mixes BaseMixin\r\n */\r\nexport class DataGrid extends BaseMixin {\r\n    /**\r\n     * Create a Data Grid.\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._section = null;\r\n        this._size = 999; // shouldn't be needed, but you might\r\n        this._html = function (d) {\r\n            return `you need to provide an html() handling param:  ${JSON.stringify(d)}`;\r\n        };\r\n        this._sortBy = function (d) {\r\n            return d;\r\n        };\r\n        this._order = ascending;\r\n        this._beginSlice = 0;\r\n        this._endSlice = undefined;\r\n\r\n        this._htmlSection = d => `<div class='${SECTION_CSS_CLASS}'><h1 class='${LABEL_CSS_CLASS}'>${ \r\n            this.keyAccessor()(d)}</h1></div>`;\r\n\r\n        this._mandatoryAttributes(['dimension', 'section']);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    _doRender () {\r\n        this.selectAll(`div.${GRID_CSS_CLASS}`).remove();\r\n\r\n        this._renderItems(this._renderSections());\r\n\r\n        return this;\r\n    }\r\n\r\n    _renderSections () {\r\n        const sections = this.root().selectAll(`div.${GRID_CSS_CLASS}`)\r\n            .data(this._nestEntries(), d => this.keyAccessor()(d));\r\n\r\n        const itemSection = sections\r\n            .enter()\r\n            .append('div')\r\n            .attr('class', GRID_CSS_CLASS);\r\n\r\n        if (this._htmlSection) {\r\n            itemSection\r\n                .html(d => this._htmlSection(d));\r\n        }\r\n\r\n        sections.exit().remove();\r\n        return itemSection;\r\n    }\r\n\r\n    _nestEntries () {\r\n        const entries = this.dimension().top(this._size);\r\n\r\n        return nest()\r\n            .key(this.section())\r\n            .sortKeys(this._order)\r\n            .entries(\r\n                entries\r\n                    .sort((a, b) => this._order(this._sortBy(a), this._sortBy(b)))\r\n                    .slice(this._beginSlice, this._endSlice)\r\n            );\r\n    }\r\n\r\n    _renderItems (sections) {\r\n        let items = sections.order()\r\n            .selectAll(`div.${ITEM_CSS_CLASS}`)\r\n            .data(d => d.values);\r\n\r\n        items.exit().remove();\r\n\r\n        items = items\r\n            .enter()\r\n            .append('div')\r\n            .attr('class', ITEM_CSS_CLASS)\r\n            .html(d => this._html(d))\r\n            .merge(items);\r\n\r\n        return items;\r\n    }\r\n\r\n    _doRedraw () {\r\n        return this._doRender();\r\n    }\r\n\r\n    /**\r\n     * Get or set the section function for the data grid. The section function takes a data row and\r\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\r\n     * to split rows into sections.\r\n     *\r\n     * Do not pass in a crossfilter section as this will not work.\r\n     * @example\r\n     * // section rows by the value of their field\r\n     * chart\r\n     *     .section(function(d) { return d.field; })\r\n     * @param {Function} section Function taking a row of data and returning the nest key.\r\n     * @returns {Function|DataGrid}\r\n     */\r\n    section (section) {\r\n        if (!arguments.length) {\r\n            return this._section;\r\n        }\r\n        this._section = section;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Backward-compatible synonym for {@link DataGrid#section section}.\r\n     *\r\n     * @param {Function} section Function taking a row of data and returning the nest key.\r\n     * @returns {Function|DataGrid}\r\n     */\r\n    group (section) {\r\n        logger.warnOnce('consider using dataGrid.section instead of dataGrid.group for clarity');\r\n        if (!arguments.length) {\r\n            return this.section();\r\n        }\r\n        return this.section(section);\r\n    }\r\n\r\n    /**\r\n     * Get or set the index of the beginning slice which determines which entries get displayed by the widget.\r\n     * Useful when implementing pagination.\r\n     * @param {Number} [beginSlice=0]\r\n     * @returns {Number|DataGrid}\r\n     */\r\n    beginSlice (beginSlice) {\r\n        if (!arguments.length) {\r\n            return this._beginSlice;\r\n        }\r\n        this._beginSlice = beginSlice;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the index of the end slice which determines which entries get displayed by the widget.\r\n     * Useful when implementing pagination.\r\n     * @param {Number} [endSlice]\r\n     * @returns {Number|DataGrid}\r\n     */\r\n    endSlice (endSlice) {\r\n        if (!arguments.length) {\r\n            return this._endSlice;\r\n        }\r\n        this._endSlice = endSlice;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the grid size which determines the number of items displayed by the widget.\r\n     * @param {Number} [size=999]\r\n     * @returns {Number|DataGrid}\r\n     */\r\n    size (size) {\r\n        if (!arguments.length) {\r\n            return this._size;\r\n        }\r\n        this._size = size;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the function that formats an item. The data grid widget uses a\r\n     * function to generate dynamic html. Use your favourite templating engine or\r\n     * generate the string directly.\r\n     * @example\r\n     * chart.html(function (d) { return '<div class='item '+data.exampleCategory+''>'+data.exampleString+'</div>';});\r\n     * @param {Function} [html]\r\n     * @returns {Function|DataGrid}\r\n     */\r\n    html (html) {\r\n        if (!arguments.length) {\r\n            return this._html;\r\n        }\r\n        this._html = html;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the function that formats a section label.\r\n     * @example\r\n     * chart.htmlSection (function (d) { return '<h2>'.d.key . 'with ' . d.values.length .' items</h2>'});\r\n     * @param {Function} [htmlSection]\r\n     * @returns {Function|DataGrid}\r\n     */\r\n    htmlSection (htmlSection) {\r\n        if (!arguments.length) {\r\n            return this._htmlSection;\r\n        }\r\n        this._htmlSection = htmlSection;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Backward-compatible synonym for {@link DataGrid#htmlSection htmlSection}.\r\n     * @param {Function} [htmlSection]\r\n     * @returns {Function|DataGrid}\r\n     */\r\n    htmlGroup (htmlSection) {\r\n        logger.warnOnce('consider using dataGrid.htmlSection instead of dataGrid.htmlGroup for clarity');\r\n        if (!arguments.length) {\r\n            return this.htmlSection();\r\n        }\r\n        return this.htmlSection(htmlSection);\r\n    }\r\n\r\n    /**\r\n     * Get or set sort-by function. This function works as a value accessor at the item\r\n     * level and returns a particular field to be sorted.\r\n     * @example\r\n     * chart.sortBy(function(d) {\r\n     *     return d.date;\r\n     * });\r\n     * @param {Function} [sortByFunction]\r\n     * @returns {Function|DataGrid}\r\n     */\r\n    sortBy (sortByFunction) {\r\n        if (!arguments.length) {\r\n            return this._sortBy;\r\n        }\r\n        this._sortBy = sortByFunction;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set sort the order function.\r\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\r\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\r\n     * @example\r\n     * chart.order(d3.descending);\r\n     * @param {Function} [order=d3.ascending]\r\n     * @returns {Function|DataGrid}\r\n     */\r\n    order (order) {\r\n        if (!arguments.length) {\r\n            return this._order;\r\n        }\r\n        this._order = order;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport const dataGrid = (parent, chartGroup) => new DataGrid(parent, chartGroup);\r\n","import {ascending} from 'd3-array';\r\nimport {nest} from 'd3-collection';\r\n\r\nimport {logger} from '../core/logger';\r\nimport {BaseMixin} from '../base/base-mixin';\r\n\r\nconst LABEL_CSS_CLASS = 'dc-table-label';\r\nconst ROW_CSS_CLASS = 'dc-table-row';\r\nconst COLUMN_CSS_CLASS = 'dc-table-column';\r\nconst SECTION_CSS_CLASS = 'dc-table-section dc-table-group';\r\nconst HEAD_CSS_CLASS = 'dc-table-head';\r\n\r\n/**\r\n * The data table is a simple widget designed to list crossfilter focused data set (rows being\r\n * filtered) in a good old tabular fashion.\r\n *\r\n * An interesting feature of the data table is that you can pass a crossfilter group to the\r\n * `dimension`, if you want to show aggregated data instead of raw data rows. This requires no\r\n * special code as long as you specify the {@link DataTable#order order} as `d3.descending`,\r\n * since the data table will use `dimension.top()` to fetch the data in that case, and the method is\r\n * equally supported on the crossfilter group as the crossfilter dimension.\r\n *\r\n * If you want to display aggregated data in ascending order, you will need to wrap the group\r\n * in a [fake dimension](https://github.com/dc-js/dc.js/wiki/FAQ#fake-dimensions) to support the\r\n * `.bottom()` method. See the example linked below for more details.\r\n *\r\n * Note: Formerly the data table (and data grid chart) used the {@link DataTable#group group} attribute as a\r\n * keying function for {@link https://github.com/d3/d3-collection/blob/master/README.md#nest nesting} the data\r\n * together in sections.  This was confusing so it has been renamed to `section`, although `group` still works.\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\r\n * - {@link http://dc-js.github.io/dc.js/examples/table-on-aggregated-data.html dataTable on a crossfilter group}\r\n * ({@link https://github.com/dc-js/dc.js/blob/master/web-src/examples/table-on-aggregated-data.html source})\r\n *\r\n * @mixes BaseMixin\r\n */\r\nexport class DataTable extends BaseMixin {\r\n    /**\r\n     * Create a Data Table.\r\n     *\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._size = 25;\r\n        this._columns = [];\r\n        this._sortBy = d => d;\r\n        this._order = ascending;\r\n        this._beginSlice = 0;\r\n        this._endSlice = undefined;\r\n        this._showSections = true;\r\n        this._section = () => ''; // all in one section\r\n\r\n        this._mandatoryAttributes(['dimension']);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    _doRender () {\r\n        this.selectAll('tbody').remove();\r\n\r\n        this._renderRows(this._renderSections());\r\n\r\n        return this;\r\n    }\r\n\r\n    _doColumnValueFormat (v, d) {\r\n        return (typeof v === 'function') ? v(d) :  // v as function\r\n            (typeof v === 'string') ? d[v] :       // v is field name string\r\n            v.format(d);                           // v is Object, use fn (element 2)\r\n    }\r\n\r\n    _doColumnHeaderFormat (d) {\r\n        // if 'function', convert to string representation\r\n        // show a string capitalized\r\n        // if an object then display its label string as-is.\r\n        return (typeof d === 'function') ? this._doColumnHeaderFnToString(d) :\r\n            (typeof d === 'string') ? this._doColumnHeaderCapitalize(d) :\r\n            String(d.label);\r\n    }\r\n\r\n    _doColumnHeaderCapitalize (s) {\r\n        // capitalize\r\n        return s.charAt(0).toUpperCase() + s.slice(1);\r\n    }\r\n\r\n    _doColumnHeaderFnToString (f) {\r\n        // columnString(f) {\r\n        let s = String(f);\r\n        const i1 = s.indexOf('return ');\r\n        if (i1 >= 0) {\r\n            const i2 = s.lastIndexOf(';');\r\n            if (i2 >= 0) {\r\n                s = s.substring(i1 + 7, i2);\r\n                const i3 = s.indexOf('numberFormat');\r\n                if (i3 >= 0) {\r\n                    s = s.replace('numberFormat', '');\r\n                }\r\n            }\r\n        }\r\n        return s;\r\n    }\r\n\r\n    _renderSections () {\r\n        // The 'original' example uses all 'functions'.\r\n        // If all 'functions' are used, then don't remove/add a header, and leave\r\n        // the html alone. This preserves the functionality of earlier releases.\r\n        // A 2nd option is a string representing a field in the data.\r\n        // A third option is to supply an Object such as an array of 'information', and\r\n        // supply your own _doColumnHeaderFormat and _doColumnValueFormat functions to\r\n        // create what you need.\r\n        let bAllFunctions = true;\r\n        this._columns.forEach(f => {\r\n            bAllFunctions = bAllFunctions & (typeof f === 'function');\r\n        });\r\n\r\n        if (!bAllFunctions) {\r\n            // ensure one thead\r\n            let thead = this.selectAll('thead').data([0]);\r\n            thead.exit().remove();\r\n            thead = thead.enter()\r\n                .append('thead')\r\n                .merge(thead);\r\n\r\n            // with one tr\r\n            let headrow = thead.selectAll('tr').data([0]);\r\n            headrow.exit().remove();\r\n            headrow = headrow.enter()\r\n                .append('tr')\r\n                .merge(headrow);\r\n\r\n            // with a th for each column\r\n            const headcols = headrow.selectAll('th')\r\n                .data(this._columns);\r\n            headcols.exit().remove();\r\n            headcols.enter().append('th')\r\n                .merge(headcols)\r\n                .attr('class', HEAD_CSS_CLASS)\r\n                .html(d => (this._doColumnHeaderFormat(d)));\r\n        }\r\n\r\n        const sections = this.root().selectAll('tbody')\r\n            .data(this._nestEntries(), d => this.keyAccessor()(d));\r\n\r\n        const rowSection = sections\r\n            .enter()\r\n            .append('tbody');\r\n\r\n        if (this._showSections === true) {\r\n            rowSection\r\n                .append('tr')\r\n                .attr('class', SECTION_CSS_CLASS)\r\n                .append('td')\r\n                .attr('class', LABEL_CSS_CLASS)\r\n                .attr('colspan', this._columns.length)\r\n                .html(d => this.keyAccessor()(d));\r\n        }\r\n\r\n        sections.exit().remove();\r\n\r\n        return rowSection;\r\n    }\r\n\r\n    _nestEntries () {\r\n        let entries;\r\n        if (this._order === ascending) {\r\n            entries = this.dimension().bottom(this._size);\r\n        } else {\r\n            entries = this.dimension().top(this._size);\r\n        }\r\n\r\n        return nest()\r\n            .key(this.section())\r\n            .sortKeys(this._order)\r\n            .entries(entries.sort((a, b) => this._order(this._sortBy(a), this._sortBy(b))).slice(this._beginSlice, this._endSlice));\r\n    }\r\n\r\n    _renderRows (sections) {\r\n        const rows = sections.order()\r\n            .selectAll(`tr.${ROW_CSS_CLASS}`)\r\n            .data(d => d.values);\r\n\r\n        const rowEnter = rows.enter()\r\n            .append('tr')\r\n            .attr('class', ROW_CSS_CLASS);\r\n\r\n        this._columns.forEach((v, i) => {\r\n            rowEnter.append('td')\r\n                .attr('class', `${COLUMN_CSS_CLASS} _${i}`)\r\n                .html(d => this._doColumnValueFormat(v, d));\r\n        });\r\n\r\n        rows.exit().remove();\r\n\r\n        return rows;\r\n    }\r\n\r\n    _doRedraw () {\r\n        return this._doRender();\r\n    }\r\n\r\n    /**\r\n     * Get or set the section function for the data table. The section function takes a data row and\r\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\r\n     * to split rows into sections. By default there will be only one section with no name.\r\n     *\r\n     * Set {@link DataTable#showSections showSections} to false to hide the section headers\r\n     *\r\n     * @example\r\n     * // section rows by the value of their field\r\n     * chart\r\n     *     .section(function(d) { return d.field; })\r\n     * @param {Function} section Function taking a row of data and returning the nest key.\r\n     * @returns {Function|DataTable}\r\n     */\r\n    section (section) {\r\n        if (!arguments.length) {\r\n            return this._section;\r\n        }\r\n        this._section = section;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Backward-compatible synonym for {@link DataTable#section section}.\r\n     *\r\n     * @param {Function} section Function taking a row of data and returning the nest key.\r\n     * @returns {Function|DataTable}\r\n     */\r\n    group (section) {\r\n        logger.warnOnce('consider using dataTable.section instead of dataTable.group for clarity');\r\n        if (!arguments.length) {\r\n            return this.section();\r\n        }\r\n        return this.section(section);\r\n    }\r\n\r\n    /**\r\n     * Get or set the table size which determines the number of rows displayed by the widget.\r\n     * @param {Number} [size=25]\r\n     * @returns {Number|DataTable}\r\n     */\r\n    size (size) {\r\n        if (!arguments.length) {\r\n            return this._size;\r\n        }\r\n        this._size = size;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the index of the beginning slice which determines which entries get displayed\r\n     * by the widget. Useful when implementing pagination.\r\n     *\r\n     * Note: the sortBy function will determine how the rows are ordered for pagination purposes.\r\n\r\n     * See the {@link http://dc-js.github.io/dc.js/examples/table-pagination.html table pagination example}\r\n     * to see how to implement the pagination user interface using `beginSlice` and `endSlice`.\r\n     * @param {Number} [beginSlice=0]\r\n     * @returns {Number|DataTable}\r\n     */\r\n    beginSlice (beginSlice) {\r\n        if (!arguments.length) {\r\n            return this._beginSlice;\r\n        }\r\n        this._beginSlice = beginSlice;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the index of the end slice which determines which entries get displayed by the\r\n     * widget. Useful when implementing pagination. See {@link DataTable#beginSlice `beginSlice`} for more information.\r\n     * @param {Number|undefined} [endSlice=undefined]\r\n     * @returns {Number|DataTable}\r\n     */\r\n    endSlice (endSlice) {\r\n        if (!arguments.length) {\r\n            return this._endSlice;\r\n        }\r\n        this._endSlice = endSlice;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set column functions. The data table widget supports several methods of specifying the\r\n     * columns to display.\r\n     *\r\n     * The original method uses an array of functions to generate dynamic columns. Column functions\r\n     * are simple javascript functions with only one input argument `d` which represents a row in\r\n     * the data set. The return value of these functions will be used to generate the content for\r\n     * each cell. However, this method requires the HTML for the table to have a fixed set of column\r\n     * headers.\r\n     *\r\n     * <pre><code>chart.columns([\r\n     *     function(d) { return d.date; },\r\n     *     function(d) { return d.open; },\r\n     *     function(d) { return d.close; },\r\n     *     function(d) { return numberFormat(d.close - d.open); },\r\n     *     function(d) { return d.volume; }\r\n     * ]);\r\n     * </code></pre>\r\n     *\r\n     * In the second method, you can list the columns to read from the data without specifying it as\r\n     * a function, except where necessary (ie, computed columns).  Note the data element name is\r\n     * capitalized when displayed in the table header. You can also mix in functions as necessary,\r\n     * using the third `{label, format}` form, as shown below.\r\n     *\r\n     * <pre><code>chart.columns([\r\n     *     \"date\",    // d[\"date\"], ie, a field accessor; capitalized automatically\r\n     *     \"open\",    // ...\r\n     *     \"close\",   // ...\r\n     *     {\r\n     *         label: \"Change\",\r\n     *         format: function (d) {\r\n     *             return numberFormat(d.close - d.open);\r\n     *         }\r\n     *     },\r\n     *     \"volume\"   // d[\"volume\"], ie, a field accessor; capitalized automatically\r\n     * ]);\r\n     * </code></pre>\r\n     *\r\n     * In the third example, we specify all fields using the `{label, format}` method:\r\n     * <pre><code>chart.columns([\r\n     *     {\r\n     *         label: \"Date\",\r\n     *         format: function (d) { return d.date; }\r\n     *     },\r\n     *     {\r\n     *         label: \"Open\",\r\n     *         format: function (d) { return numberFormat(d.open); }\r\n     *     },\r\n     *     {\r\n     *         label: \"Close\",\r\n     *         format: function (d) { return numberFormat(d.close); }\r\n     *     },\r\n     *     {\r\n     *         label: \"Change\",\r\n     *         format: function (d) { return numberFormat(d.close - d.open); }\r\n     *     },\r\n     *     {\r\n     *         label: \"Volume\",\r\n     *         format: function (d) { return d.volume; }\r\n     *     }\r\n     * ]);\r\n     * </code></pre>\r\n     *\r\n     * You may wish to override the dataTable functions `_doColumnHeaderCapitalize` and\r\n     * `_doColumnHeaderFnToString`, which are used internally to translate the column information or\r\n     * function into a displayed header. The first one is used on the \"string\" column specifier; the\r\n     * second is used to transform a stringified function into something displayable. For the Stock\r\n     * example, the function for Change becomes the table header **d.close - d.open**.\r\n     *\r\n     * Finally, you can even specify a completely different form of column definition. To do this,\r\n     * override `_chart._doColumnHeaderFormat` and `_chart._doColumnValueFormat` Be aware that\r\n     * fields without numberFormat specification will be displayed just as they are stored in the\r\n     * data, unformatted.\r\n     * @param {Array<Function>} [columns=[]]\r\n     * @returns {Array<Function>}|DataTable}\r\n     */\r\n    columns (columns) {\r\n        if (!arguments.length) {\r\n            return this._columns;\r\n        }\r\n        this._columns = columns;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set sort-by function. This function works as a value accessor at row level and returns a\r\n     * particular field to be sorted by.\r\n     * @example\r\n     * chart.sortBy(function(d) {\r\n     *     return d.date;\r\n     * });\r\n     * @param {Function} [sortBy=identity function]\r\n     * @returns {Function|DataTable}\r\n     */\r\n    sortBy (sortBy) {\r\n        if (!arguments.length) {\r\n            return this._sortBy;\r\n        }\r\n        this._sortBy = sortBy;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set sort order. If the order is `d3.ascending`, the data table will use\r\n     * `dimension().bottom()` to fetch the data; otherwise it will use `dimension().top()`\r\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\r\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\r\n     * @example\r\n     * chart.order(d3.descending);\r\n     * @param {Function} [order=d3.ascending]\r\n     * @returns {Function|DataTable}\r\n     */\r\n    order (order) {\r\n        if (!arguments.length) {\r\n            return this._order;\r\n        }\r\n        this._order = order;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set if section header rows will be shown.\r\n     * @example\r\n     * chart\r\n     *     .section([value], [name])\r\n     *     .showSections(true|false);\r\n     * @param {Boolean} [showSections=true]\r\n     * @returns {Boolean|DataTable}\r\n     */\r\n    showSections (showSections) {\r\n        if (!arguments.length) {\r\n            return this._showSections;\r\n        }\r\n        this._showSections = showSections;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Backward-compatible synonym for {@link DataTable#showSections showSections}.\r\n     * @param {Boolean} [showSections=true]\r\n     * @returns {Boolean|DataTable}\r\n     */\r\n    showGroups (showSections) {\r\n        logger.warnOnce('consider using dataTable.showSections instead of dataTable.showGroups for clarity');\r\n        if (!arguments.length) {\r\n            return this.showSections();\r\n        }\r\n        return this.showSections(showSections);\r\n    }\r\n}\r\n\r\nexport const dataTable = (parent, chartGroup) => new DataTable(parent, chartGroup);\r\n","import {geoPath, geoAlbersUsa} from 'd3-geo';\r\nimport {select} from 'd3-selection';\r\n\r\nimport {BaseMixin} from '../base/base-mixin';\r\nimport {ColorMixin} from '../base/color-mixin';\r\nimport {transition} from '../core/core';\r\nimport {logger} from '../core/logger';\r\nimport {events} from '../core/events';\r\nimport {utils} from '../core/utils';\r\n\r\n/**\r\n * The geo choropleth chart is designed as an easy way to create a crossfilter driven choropleth map\r\n * from GeoJson data. This chart implementation was inspired by\r\n * {@link http://bl.ocks.org/4060606 the great d3 choropleth example}.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/vc/index.html US Venture Capital Landscape 2011}\r\n * @mixes ColorMixin\r\n * @mixes BaseMixin\r\n */\r\nexport class GeoChoroplethChart extends ColorMixin(BaseMixin) {\r\n    /**\r\n     * Create a Geo Choropleth Chart.\r\n     * @example\r\n     * // create a choropleth chart under '#us-chart' element using the default global chart group\r\n     * var chart1 = new GeoChoroplethChart('#us-chart');\r\n     * // create a choropleth chart under '#us-chart2' element using chart group A\r\n     * var chart2 = new CompositeChart('#us-chart2', 'chartGroupA');\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this.colorAccessor(d => d || 0);\r\n\r\n        this._geoPath = geoPath();\r\n        this._projectionFlag = undefined;\r\n        this._projection = undefined;\r\n\r\n        this._geoJsons = [];\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    _doRender () {\r\n        this.resetSvg();\r\n        for (let layerIndex = 0; layerIndex < this._geoJsons.length; ++layerIndex) {\r\n            const states = this.svg().append('g')\r\n                .attr('class', `layer${layerIndex}`);\r\n\r\n            let regionG = states.selectAll(`g.${this._geoJson(layerIndex).name}`)\r\n                .data(this._geoJson(layerIndex).data);\r\n\r\n            regionG = regionG.enter()\r\n                .append('g')\r\n                .attr('class', this._geoJson(layerIndex).name)\r\n                .merge(regionG);\r\n\r\n            regionG\r\n                .append('path')\r\n                .attr('fill', 'white')\r\n                .attr('d', this._getGeoPath());\r\n\r\n            regionG.append('title');\r\n\r\n            this._plotData(layerIndex);\r\n        }\r\n        this._projectionFlag = false;\r\n    }\r\n\r\n    _plotData (layerIndex) {\r\n        const data = this._generateLayeredData();\r\n\r\n        if (this._isDataLayer(layerIndex)) {\r\n            const regionG = this._renderRegionG(layerIndex);\r\n\r\n            this._renderPaths(regionG, layerIndex, data);\r\n\r\n            this._renderTitles(regionG, layerIndex, data);\r\n        }\r\n    }\r\n\r\n    _generateLayeredData () {\r\n        const data = {};\r\n        const groupAll = this.data();\r\n        for (let i = 0; i < groupAll.length; ++i) {\r\n            data[this.keyAccessor()(groupAll[i])] = this.valueAccessor()(groupAll[i]);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    _isDataLayer (layerIndex) {\r\n        return this._geoJson(layerIndex).keyAccessor;\r\n    }\r\n\r\n    _renderRegionG (layerIndex) {\r\n        const regionG = this.svg()\r\n            .selectAll(this._layerSelector(layerIndex))\r\n            .classed('selected', d => this._isSelected(layerIndex, d))\r\n            .classed('deselected', d => this._isDeselected(layerIndex, d))\r\n            .attr('class', d => {\r\n                const layerNameClass = this._geoJson(layerIndex).name;\r\n                const regionClass = utils.nameToId(this._geoJson(layerIndex).keyAccessor(d));\r\n                let baseClasses = `${layerNameClass} ${regionClass}`;\r\n                if (this._isSelected(layerIndex, d)) {\r\n                    baseClasses += ' selected';\r\n                }\r\n                if (this._isDeselected(layerIndex, d)) {\r\n                    baseClasses += ' deselected';\r\n                }\r\n                return baseClasses;\r\n            });\r\n        return regionG;\r\n    }\r\n\r\n    _layerSelector (layerIndex) {\r\n        return `g.layer${layerIndex} g.${this._geoJson(layerIndex).name}`;\r\n    }\r\n\r\n    _isSelected (layerIndex, d) {\r\n        return this.hasFilter() && this.hasFilter(this._getKey(layerIndex, d));\r\n    }\r\n\r\n    _isDeselected (layerIndex, d) {\r\n        return this.hasFilter() && !this.hasFilter(this._getKey(layerIndex, d));\r\n    }\r\n\r\n    _getKey (layerIndex, d) {\r\n        return this._geoJson(layerIndex).keyAccessor(d);\r\n    }\r\n\r\n    _geoJson (index) {\r\n        return this._geoJsons[index];\r\n    }\r\n\r\n    _renderPaths (regionG, layerIndex, data) {\r\n        const paths = regionG\r\n            .select('path')\r\n            .attr('fill', function () {\r\n                const currentFill = select(this).attr('fill');\r\n                if (currentFill) {\r\n                    return currentFill;\r\n                }\r\n                return 'none';\r\n            })\r\n            .on('click', d => this.onClick(d, layerIndex));\r\n\r\n        transition(paths, this.transitionDuration(),\r\n                   this.transitionDelay()).attr('fill', (d, i) => this.getColor(data[this._geoJson(layerIndex).keyAccessor(d)], i));\r\n    }\r\n\r\n    onClick (d, layerIndex) {\r\n        const selectedRegion = this._geoJson(layerIndex).keyAccessor(d);\r\n        events.trigger(() => {\r\n            this.filter(selectedRegion);\r\n            this.redrawGroup();\r\n        });\r\n    }\r\n\r\n    _renderTitles (regionG, layerIndex, data) {\r\n        if (this.renderTitle()) {\r\n            regionG.selectAll('title').text(d => {\r\n                const key = this._getKey(layerIndex, d);\r\n                const value = data[key];\r\n                return this.title()({key: key, value: value});\r\n            });\r\n        }\r\n    }\r\n\r\n    _doRedraw () {\r\n        for (let layerIndex = 0; layerIndex < this._geoJsons.length; ++layerIndex) {\r\n            this._plotData(layerIndex);\r\n            if (this._projectionFlag) {\r\n                this.svg().selectAll(`g.${this._geoJson(layerIndex).name} path`).attr('d', this._getGeoPath());\r\n            }\r\n        }\r\n        this._projectionFlag = false;\r\n    }\r\n\r\n    /**\r\n     * **mandatory**\r\n     *\r\n     * Use this function to insert a new GeoJson map layer. This function can be invoked multiple times\r\n     * if you have multiple GeoJson data layers to render on top of each other. If you overlay multiple\r\n     * layers with the same name the new overlay will override the existing one.\r\n     * @see {@link http://geojson.org/ GeoJSON}\r\n     * @see {@link https://github.com/topojson/topojson/wiki TopoJSON}\r\n     * @see {@link https://github.com/topojson/topojson-1.x-api-reference/blob/master/API-Reference.md#wiki-feature topojson.feature}\r\n     * @example\r\n     * // insert a layer for rendering US states\r\n     * chart.overlayGeoJson(statesJson.features, 'state', function(d) {\r\n     *      return d.properties.name;\r\n     * });\r\n     * @param {_geoJson} json - a geojson feed\r\n     * @param {String} name - name of the layer\r\n     * @param {Function} keyAccessor - accessor function used to extract 'key' from the GeoJson data. The key extracted by\r\n     * this function should match the keys returned by the crossfilter groups.\r\n     * @returns {GeoChoroplethChart}\r\n     */\r\n    overlayGeoJson (json, name, keyAccessor) {\r\n        for (let i = 0; i < this._geoJsons.length; ++i) {\r\n            if (this._geoJsons[i].name === name) {\r\n                this._geoJsons[i].data = json;\r\n                this._geoJsons[i].keyAccessor = keyAccessor;\r\n                return this;\r\n            }\r\n        }\r\n        this._geoJsons.push({name: name, data: json, keyAccessor: keyAccessor});\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets a custom geo projection function. See the available\r\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#projections d3 geo projection functions}.\r\n     *\r\n     * Starting version 3.0 it has been deprecated to rely on the default projection being\r\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#geoAlbersUsa d3.geoAlbersUsa()}. Please\r\n     * set it explicitly. {@link https://bl.ocks.org/mbostock/5557726\r\n     * Considering that `null` is also a valid value for projection}, if you need\r\n     * projection to be `null` please set it explicitly to `null`.\r\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#projections d3.projection}\r\n     * @see {@link https://github.com/d3/d3-geo-projection d3-geo-projection}\r\n     * @param {d3.projection} [projection=d3.geoAlbersUsa()]\r\n     * @returns {d3.projection|GeoChoroplethChart}\r\n     */\r\n    projection (projection) {\r\n        if (!arguments.length) {\r\n            return this._projection;\r\n        }\r\n\r\n        this._projection = projection;\r\n        this._projectionFlag = true;\r\n        return this;\r\n    }\r\n\r\n    _getGeoPath () {\r\n        if (this._projection === undefined) {\r\n            logger.warn('choropleth projection default of geoAlbers is deprecated,' +\r\n                ' in next version projection will need to be set explicitly');\r\n            return this._geoPath.projection(geoAlbersUsa());\r\n        }\r\n\r\n        return this._geoPath.projection(this._projection);\r\n    }\r\n\r\n    /**\r\n     * Returns all GeoJson layers currently registered with this chart. The returned array is a\r\n     * reference to this chart's internal data structure, so any modification to this array will also\r\n     * modify this chart's internal registration.\r\n     * @returns {Array<{name:String, data: Object, accessor: Function}>}\r\n     */\r\n    geoJsons () {\r\n        return this._geoJsons;\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link https://github.com/d3/d3-geo/blob/master/README.md#paths d3.geoPath} object used to\r\n     * render the projection and features.  Can be useful for figuring out the bounding box of the\r\n     * feature set and thus a way to calculate scale and translation for the projection.\r\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#paths d3.geoPath}\r\n     * @returns {d3.geoPath}\r\n     */\r\n    geoPath () {\r\n        return this._geoPath;\r\n    }\r\n\r\n    /**\r\n     * Remove a GeoJson layer from this chart by name\r\n     * @param {String} name\r\n     * @returns {GeoChoroplethChart}\r\n     */\r\n    removeGeoJson (name) {\r\n        const geoJsons = [];\r\n\r\n        for (let i = 0; i < this._geoJsons.length; ++i) {\r\n            const layer = this._geoJsons[i];\r\n            if (layer.name !== name) {\r\n                geoJsons.push(layer);\r\n            }\r\n        }\r\n\r\n        this._geoJsons = geoJsons;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nexport const geoChoroplethChart = (parent, chartGroup) => new GeoChoroplethChart(parent, chartGroup);\r\n","import {ascending} from 'd3-array';\r\nimport {scaleBand} from 'd3-scale';\r\n\r\nimport {transition} from '../core/core';\r\nimport {logger} from '../core/logger';\r\nimport {filters} from '../core/filters';\r\nimport {events} from '../core/events';\r\nimport {ColorMixin} from '../base/color-mixin';\r\nimport {MarginMixin} from '../base/margin-mixin';\r\n\r\nconst DEFAULT_BORDER_RADIUS = 6.75;\r\n\r\n/**\r\n * A heat map is matrix that represents the values of two dimensions of data using colors.\r\n * @mixes ColorMixin\r\n * @mixes MarginMixin\r\n * @mixes BaseMixin\r\n */\r\nexport class HeatMap extends ColorMixin(MarginMixin) {\r\n    /**\r\n     * Create a Heat Map\r\n     * @example\r\n     * // create a heat map under #chart-container1 element using the default global chart group\r\n     * var heatMap1 = new HeatMap('#chart-container1');\r\n     * // create a heat map under #chart-container2 element using chart group A\r\n     * var heatMap2 = new HeatMap('#chart-container2', 'chartGroupA');\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._chartBody = undefined;\r\n\r\n        this._cols = undefined;\r\n        this._rows = undefined;\r\n        this._colOrdering = ascending;\r\n        this._rowOrdering = ascending;\r\n        this._colScale = scaleBand();\r\n        this._rowScale = scaleBand();\r\n\r\n        this._xBorderRadius = DEFAULT_BORDER_RADIUS;\r\n        this._yBorderRadius = DEFAULT_BORDER_RADIUS;\r\n\r\n        this._mandatoryAttributes(['group']);\r\n        this.title(this.colorAccessor());\r\n\r\n        this._colsLabel = d => d;\r\n        this._rowsLabel = d => d;\r\n\r\n        this._xAxisOnClick = d => {\r\n            this._filterAxis(0, d);\r\n        };\r\n        this._yAxisOnClick = d => {\r\n            this._filterAxis(1, d);\r\n        };\r\n        this._boxOnClick = d => {\r\n            const filter = d.key;\r\n            events.trigger(() => {\r\n                this.filter(filters.TwoDimensionalFilter(filter));\r\n                this.redrawGroup();\r\n            });\r\n        };\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    /**\r\n     * Set or get the column label function. The chart class uses this function to render\r\n     * column labels on the X axis. It is passed the column name.\r\n     * @example\r\n     * // the default label function just returns the name\r\n     * chart.colsLabel(function(d) { return d; });\r\n     * @param  {Function} [labelFunction=function(d) { return d; }]\r\n     * @returns {Function|HeatMap}\r\n     */\r\n    colsLabel (labelFunction) {\r\n        if (!arguments.length) {\r\n            return this._colsLabel;\r\n        }\r\n        this._colsLabel = labelFunction;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the row label function. The chart class uses this function to render\r\n     * row labels on the Y axis. It is passed the row name.\r\n     * @example\r\n     * // the default label function just returns the name\r\n     * chart.rowsLabel(function(d) { return d; });\r\n     * @param  {Function} [labelFunction=function(d) { return d; }]\r\n     * @returns {Function|HeatMap}\r\n     */\r\n    rowsLabel (labelFunction) {\r\n        if (!arguments.length) {\r\n            return this._rowsLabel;\r\n        }\r\n        this._rowsLabel = labelFunction;\r\n        return this;\r\n    }\r\n\r\n    _filterAxis (axis, value) {\r\n        const cellsOnAxis = this.selectAll('.box-group').filter(d => d.key[axis] === value);\r\n        const unfilteredCellsOnAxis = cellsOnAxis.filter(d => !this.hasFilter(d.key));\r\n        events.trigger(() => {\r\n            const selection = unfilteredCellsOnAxis.empty() ? cellsOnAxis : unfilteredCellsOnAxis;\r\n            const filtersList = selection.data().map(kv => filters.TwoDimensionalFilter(kv.key));\r\n            this.filter([filtersList]);\r\n            this.redrawGroup();\r\n        });\r\n    }\r\n\r\n    filter (filter) {\r\n        const nonstandardFilter = f => {\r\n            logger.warnOnce('heatmap.filter taking a coordinate is deprecated - please pass dc.filters.TwoDimensionalFilter instead');\r\n            return this._filter(filters.TwoDimensionalFilter(f));\r\n        };\r\n\r\n        if (!arguments.length) {\r\n            return super.filter();\r\n        }\r\n        if (filter !== null && filter.filterType !== 'TwoDimensionalFilter' &&\r\n            !(Array.isArray(filter) && Array.isArray(filter[0]) && filter[0][0].filterType === 'TwoDimensionalFilter')) {\r\n            return nonstandardFilter(filter);\r\n        }\r\n        return super.filter(filter);\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the values used to create the rows of the heatmap, as an array. By default, all\r\n     * the values will be fetched from the data using the value accessor.\r\n     * @param  {Array<String|Number>} [rows]\r\n     * @returns {Array<String|Number>|HeatMap}\r\n     */\r\n\r\n    rows (rows) {\r\n        if (!arguments.length) {\r\n            return this._rows;\r\n        }\r\n        this._rows = rows;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set a comparator to order the rows.\r\n     * Default is {@link https://github.com/d3/d3-array#ascending d3.ascending}.\r\n     * @param  {Function} [rowOrdering]\r\n     * @returns {Function|HeatMap}\r\n     */\r\n    rowOrdering (rowOrdering) {\r\n        if (!arguments.length) {\r\n            return this._rowOrdering;\r\n        }\r\n        this._rowOrdering = rowOrdering;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the keys used to create the columns of the heatmap, as an array. By default, all\r\n     * the values will be fetched from the data using the key accessor.\r\n     * @param  {Array<String|Number>} [cols]\r\n     * @returns {Array<String|Number>|HeatMap}\r\n     */\r\n    cols (cols) {\r\n        if (!arguments.length) {\r\n            return this._cols;\r\n        }\r\n        this._cols = cols;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set a comparator to order the columns.\r\n     * Default is  {@link https://github.com/d3/d3-array#ascending d3.ascending}.\r\n     * @param  {Function} [colOrdering]\r\n     * @returns {Function|HeatMap}\r\n     */\r\n    colOrdering (colOrdering) {\r\n        if (!arguments.length) {\r\n            return this._colOrdering;\r\n        }\r\n        this._colOrdering = colOrdering;\r\n        return this;\r\n    }\r\n\r\n    _doRender () {\r\n        this.resetSvg();\r\n\r\n        this._chartBody = this.svg()\r\n            .append('g')\r\n            .attr('class', 'heatmap')\r\n            .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\r\n\r\n        return this._doRedraw();\r\n    }\r\n\r\n    _doRedraw () {\r\n        const data = this.data();\r\n        let rows = this.rows() || data.map(this.valueAccessor()),\r\n            cols = this.cols() || data.map(this.keyAccessor());\r\n        if (this._rowOrdering) {\r\n            rows = rows.sort(this._rowOrdering);\r\n        }\r\n        if (this._colOrdering) {\r\n            cols = cols.sort(this._colOrdering);\r\n        }\r\n        rows = this._rowScale.domain(rows);\r\n        cols = this._colScale.domain(cols);\r\n\r\n        const rowCount = rows.domain().length,\r\n            colCount = cols.domain().length,\r\n            boxWidth = Math.floor(this.effectiveWidth() / colCount),\r\n            boxHeight = Math.floor(this.effectiveHeight() / rowCount);\r\n\r\n        cols.rangeRound([0, this.effectiveWidth()]);\r\n        rows.rangeRound([this.effectiveHeight(), 0]);\r\n\r\n        let boxes = this._chartBody.selectAll('g.box-group').data(this.data(),\r\n                                                                  (d, i) => `${this.keyAccessor()(d, i)}\\0${this.valueAccessor()(d, i)}`);\r\n\r\n        boxes.exit().remove();\r\n\r\n        const gEnter = boxes.enter().append('g')\r\n            .attr('class', 'box-group');\r\n\r\n        gEnter.append('rect')\r\n            .attr('class', 'heat-box')\r\n            .attr('fill', 'white')\r\n            .attr('x', (d, i) => cols(this.keyAccessor()(d, i)))\r\n            .attr('y', (d, i) => rows(this.valueAccessor()(d, i)))\r\n            .on('click', this.boxOnClick());\r\n\r\n        boxes = gEnter.merge(boxes);\r\n\r\n        if (this.renderTitle()) {\r\n            gEnter.append('title');\r\n            boxes.select('title').text(this.title());\r\n        }\r\n\r\n        transition(boxes.select('rect'), this.transitionDuration(), this.transitionDelay())\r\n            .attr('x', (d, i) => cols(this.keyAccessor()(d, i)))\r\n            .attr('y', (d, i) => rows(this.valueAccessor()(d, i)))\r\n            .attr('rx', this._xBorderRadius)\r\n            .attr('ry', this._yBorderRadius)\r\n            .attr('fill', this.getColor)\r\n            .attr('width', boxWidth)\r\n            .attr('height', boxHeight);\r\n\r\n        let gCols = this._chartBody.select('g.cols');\r\n        if (gCols.empty()) {\r\n            gCols = this._chartBody.append('g').attr('class', 'cols axis');\r\n        }\r\n        let gColsText = gCols.selectAll('text').data(cols.domain());\r\n\r\n        gColsText.exit().remove();\r\n\r\n        gColsText = gColsText\r\n            .enter()\r\n            .append('text')\r\n            .attr('x', d => cols(d) + boxWidth / 2)\r\n            .style('text-anchor', 'middle')\r\n            .attr('y', this.effectiveHeight())\r\n            .attr('dy', 12)\r\n            .on('click', this.xAxisOnClick())\r\n            .text(this.colsLabel())\r\n            .merge(gColsText);\r\n\r\n        transition(gColsText, this.transitionDuration(), this.transitionDelay())\r\n            .text(this.colsLabel())\r\n            .attr('x', d => cols(d) + boxWidth / 2)\r\n            .attr('y', this.effectiveHeight());\r\n\r\n        let gRows = this._chartBody.select('g.rows');\r\n        if (gRows.empty()) {\r\n            gRows = this._chartBody.append('g').attr('class', 'rows axis');\r\n        }\r\n\r\n        let gRowsText = gRows.selectAll('text').data(rows.domain());\r\n\r\n        gRowsText.exit().remove();\r\n\r\n        gRowsText = gRowsText\r\n            .enter()\r\n            .append('text')\r\n            .style('text-anchor', 'end')\r\n            .attr('x', 0)\r\n            .attr('dx', -2)\r\n            .attr('y', d => rows(d) + boxHeight / 2)\r\n            .attr('dy', 6)\r\n            .on('click', this.yAxisOnClick())\r\n            .text(this.rowsLabel())\r\n            .merge(gRowsText);\r\n\r\n        transition(gRowsText, this.transitionDuration(), this.transitionDelay())\r\n            .text(this.rowsLabel())\r\n            .attr('y', d => rows(d) + boxHeight / 2);\r\n\r\n        if (this.hasFilter()) {\r\n            const chart = this;\r\n            this.selectAll('g.box-group').each(function (d) {\r\n                if (chart.isSelectedNode(d)) {\r\n                    chart.highlightSelected(this);\r\n                } else {\r\n                    chart.fadeDeselected(this);\r\n                }\r\n            });\r\n        } else {\r\n            const chart = this;\r\n            this.selectAll('g.box-group').each(function () {\r\n                chart.resetHighlight(this);\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the handler that fires when an individual cell is clicked in the heatmap.\r\n     * By default, filtering of the cell will be toggled.\r\n     * @example\r\n     * // default box on click handler\r\n     * chart.boxOnClick(function (d) {\r\n     *     var filter = d.key;\r\n     *     events.trigger(function () {\r\n     *         _chart.filter(filter);\r\n     *         _chart.redrawGroup();\r\n     *     });\r\n     * });\r\n     * @param  {Function} [handler]\r\n     * @returns {Function|HeatMap}\r\n     */\r\n    boxOnClick (handler) {\r\n        if (!arguments.length) {\r\n            return this._boxOnClick;\r\n        }\r\n        this._boxOnClick = handler;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the handler that fires when a column tick is clicked in the x axis.\r\n     * By default, if any cells in the column are unselected, the whole column will be selected,\r\n     * otherwise the whole column will be unselected.\r\n     * @param  {Function} [handler]\r\n     * @returns {Function|HeatMap}\r\n     */\r\n    xAxisOnClick (handler) {\r\n        if (!arguments.length) {\r\n            return this._xAxisOnClick;\r\n        }\r\n        this._xAxisOnClick = handler;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the handler that fires when a row tick is clicked in the y axis.\r\n     * By default, if any cells in the row are unselected, the whole row will be selected,\r\n     * otherwise the whole row will be unselected.\r\n     * @param  {Function} [handler]\r\n     * @returns {Function|HeatMap}\r\n     */\r\n    yAxisOnClick (handler) {\r\n        if (!arguments.length) {\r\n            return this._yAxisOnClick;\r\n        }\r\n        this._yAxisOnClick = handler;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the X border radius.  Set to 0 to get full rectangles.\r\n     * @param  {Number} [xBorderRadius=6.75]\r\n     * @returns {Number|HeatMap}\r\n     */\r\n    xBorderRadius (xBorderRadius) {\r\n        if (!arguments.length) {\r\n            return this._xBorderRadius;\r\n        }\r\n        this._xBorderRadius = xBorderRadius;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the Y border radius.  Set to 0 to get full rectangles.\r\n     * @param  {Number} [yBorderRadius=6.75]\r\n     * @returns {Number|HeatMap}\r\n     */\r\n    yBorderRadius (yBorderRadius) {\r\n        if (!arguments.length) {\r\n            return this._yBorderRadius;\r\n        }\r\n        this._yBorderRadius = yBorderRadius;\r\n        return this;\r\n    }\r\n\r\n    isSelectedNode (d) {\r\n        return this.hasFilter(d.key);\r\n    }\r\n}\r\n\r\nexport const heatMap = (parent, chartGroup) => new HeatMap(parent, chartGroup);\r\n","import {select} from 'd3-selection';\r\n\r\nimport {pluck, utils} from '../core/utils';\r\nimport {constants} from '../core/constants';\r\n\r\n/**\r\n * htmlLegend is a attachable widget that can be added to other dc charts to render horizontal/vertical legend\r\n * labels.\r\n * @example\r\n * chart.legend(HtmlLegend().container(legendContainerElement).horizontal(false))\r\n * @returns {HtmlLegend}\r\n */\r\nexport class HtmlLegend {\r\n    constructor () {\r\n        this._htmlLegendDivCssClass = 'dc-html-legend';\r\n        this._legendItemCssClassHorizontal = 'dc-legend-item-horizontal';\r\n        this._legendItemCssClassVertical = 'dc-legend-item-vertical';\r\n        this._parent = undefined;\r\n        this._container = undefined;\r\n        this._legendText = pluck('name');\r\n        this._maxItems = undefined;\r\n        this._horizontal = false;\r\n        this._legendItemClass = undefined;\r\n        this._highlightSelected = false;\r\n    }\r\n\r\n    parent (p) {\r\n        if (!arguments.length) {\r\n            return this._parent;\r\n        }\r\n        this._parent = p;\r\n        return this;\r\n    }\r\n\r\n    render () {\r\n        this._defaultLegendItemCssClass = this._horizontal ? this._legendItemCssClassHorizontal : this._legendItemCssClassVertical;\r\n        this._container.select(`div.${this._htmlLegendDivCssClass}`).remove();\r\n\r\n        const container = this._container.append('div').attr('class', this._htmlLegendDivCssClass);\r\n        container.attr('style', `max-width:${this._container.nodes()[0].style.width}`);\r\n\r\n        let legendables = this._parent.legendables();\r\n        const filters = this._parent.filters();\r\n\r\n        if (this._maxItems !== undefined) {\r\n            legendables = legendables.slice(0, this._maxItems);\r\n        }\r\n\r\n        const legendItemClassName = this._legendItemClass ? this._legendItemClass : this._defaultLegendItemCssClass;\r\n\r\n        const itemEnter = container.selectAll(`div.${legendItemClassName}`)\r\n            .data(legendables).enter()\r\n            .append('div')\r\n            .classed(legendItemClassName, true)\r\n            .on('mouseover', d => this._parent.legendHighlight(d))\r\n            .on('mouseout', d => this._parent.legendReset(d))\r\n            .on('click', d => this._parent.legendToggle(d));\r\n\r\n        if (this._highlightSelected) {\r\n            itemEnter.classed(constants.SELECTED_CLASS, d => filters.indexOf(d.name) !== -1);\r\n        }\r\n\r\n        itemEnter.append('span')\r\n            .attr('class', 'dc-legend-item-color')\r\n            .style('background-color', pluck('color'));\r\n\r\n        itemEnter.append('span')\r\n            .attr('class', 'dc-legend-item-label')\r\n            .attr('title', this._legendText)\r\n            .text(this._legendText);\r\n    }\r\n\r\n    /**\r\n     * Set the container selector for the legend widget. Required.\r\n     * @param {String} [container]\r\n     * @return {String|HtmlLegend}\r\n     */\r\n    container (container) {\r\n        if (!arguments.length) {\r\n            return this._container;\r\n        }\r\n        this._container = select(container);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * This can be optionally used to override class for legenditem and just use this class style.\r\n     * This is helpful for overriding the style of a particular chart rather than overriding\r\n     * the style for all charts.\r\n     *\r\n     * Setting this will disable the highlighting of selected items also.\r\n     * @param {String} [legendItemClass]\r\n     * @return {String|HtmlLegend}\r\n     */\r\n    legendItemClass (legendItemClass) {\r\n        if (!arguments.length) {\r\n            return this._legendItemClass;\r\n        }\r\n        this._legendItemClass = legendItemClass;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * This can be optionally used to enable highlighting legends for the selections/filters for the\r\n     * chart.\r\n     * @param {String} [highlightSelected]\r\n     * @return {String|HtmlLegend}\r\n     */\r\n    highlightSelected (highlightSelected) {\r\n        if (!arguments.length) {\r\n            return this._highlightSelected;\r\n        }\r\n        this._highlightSelected = highlightSelected;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Display the legend horizontally instead of vertically\r\n     * @param {String} [horizontal]\r\n     * @return {String|HtmlLegend}\r\n     */\r\n    horizontal (horizontal) {\r\n        if (!arguments.length) {\r\n            return this._horizontal;\r\n        }\r\n        this._horizontal = horizontal;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the legend text function. The legend widget uses this function to render the legend\r\n     * text for each item. If no function is specified the legend widget will display the names\r\n     * associated with each group.\r\n     * @param  {Function} [legendText]\r\n     * @returns {Function|HtmlLegend}\r\n     * @example\r\n     * // default legendText\r\n     * legend.legendText(pluck('name'))\r\n     *\r\n     * // create numbered legend items\r\n     * chart.legend(new HtmlLegend().legendText(function(d, i) { return i + '. ' + d.name; }))\r\n     *\r\n     * // create legend displaying group counts\r\n     * chart.legend(new HtmlLegend().legendText(function(d) { return d.name + ': ' d.data; }))\r\n     */\r\n    legendText (legendText) {\r\n        if (!arguments.length) {\r\n            return this._legendText;\r\n        }\r\n        this._legendText = legendText;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Maximum number of legend items to display\r\n     * @param  {Number} [maxItems]\r\n     * @return {HtmlLegend}\r\n     */\r\n    maxItems (maxItems) {\r\n        if (!arguments.length) {\r\n            return this._maxItems;\r\n        }\r\n        this._maxItems = utils.isNumber(maxItems) ? maxItems : undefined;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport const htmlLegend = () => new HtmlLegend();\r\n","import {pluck, utils} from '../core/utils';\r\nimport {constants} from '../core/constants';\r\n\r\nconst LABEL_GAP = 2;\r\n\r\n/**\r\n * Legend is a attachable widget that can be added to other dc charts to render horizontal legend\r\n * labels.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\r\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\r\n * @example\r\n * chart.legend(new Legend().x(400).y(10).itemHeight(13).gap(5))\r\n * @returns {Legend}\r\n */\r\nexport class Legend {\r\n    constructor () {\r\n        this._parent = undefined;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._itemHeight = 12;\r\n        this._gap = 5;\r\n        this._horizontal = false;\r\n        this._hiddenVisibility = true;\r\n        this._legendWidth = 560;\r\n        this._itemWidth = 70;\r\n        this._autoItemWidth = false;\r\n        this._legendText = pluck('name');\r\n        this._maxItems = undefined;\r\n        this._highlightSelected = false;\r\n\r\n        this._g = undefined;\r\n    }\r\n\r\n    parent (p) {\r\n        if (!arguments.length) {\r\n            return this._parent;\r\n        }\r\n        this._parent = p;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get x coordinate for legend widget.\r\n     * @param  {Number} [x=0]\r\n     * @returns {Number|Legend}\r\n     */\r\n    x (x) {\r\n        if (!arguments.length) {\r\n            return this._x;\r\n        }\r\n        this._x = x;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get y coordinate for legend widget.\r\n     * @param  {Number} [y=0]\r\n     * @returns {Number|Legend}\r\n     */\r\n    y (y) {\r\n        if (!arguments.length) {\r\n            return this._y;\r\n        }\r\n        this._y = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get gap between legend items.\r\n     * @param  {Number} [gap=5]\r\n     * @returns {Number|Legend}\r\n     */\r\n    gap (gap) {\r\n        if (!arguments.length) {\r\n            return this._gap;\r\n        }\r\n        this._gap = gap;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * This can be optionally used to enable highlighting legends for the selections/filters for the\r\n     * chart.\r\n     * @param {String} [highlightSelected]\r\n     * @return {String|dc.legend}\r\n     **/\r\n    highlightSelected (highlightSelected) {\r\n        if (!arguments.length) {\r\n            return this._highlightSelected;\r\n        }\r\n        this._highlightSelected = highlightSelected;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get legend item height.\r\n     * @param  {Number} [itemHeight=12]\r\n     * @returns {Number|Legend}\r\n     */\r\n    itemHeight (itemHeight) {\r\n        if (!arguments.length) {\r\n            return this._itemHeight;\r\n        }\r\n        this._itemHeight = itemHeight;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Position legend horizontally instead of vertically.\r\n     * @param  {Boolean} [horizontal=false]\r\n     * @returns {Boolean|Legend}\r\n     */\r\n    horizontal (horizontal) {\r\n        if (!arguments.length) {\r\n            return this._horizontal;\r\n        }\r\n        this._horizontal = horizontal;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Hidden stack Legend visibility settings\r\n     * @param  {Boolean} [hiddenVisibility=true]\r\n     * @returns {Boolean|Legend}\r\n     */\r\n    hiddenVisibility(hiddenVisibility) {\r\n        if (!arguments.length) {\r\n            return this._hiddenVisibility;\r\n        }\r\n        this._hiddenVisibility = hiddenVisibility;\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * Maximum width for horizontal legend.\r\n     * @param  {Number} [legendWidth=500]\r\n     * @returns {Number|Legend}\r\n     */\r\n    legendWidth (legendWidth) {\r\n        if (!arguments.length) {\r\n            return this._legendWidth;\r\n        }\r\n        this._legendWidth = legendWidth;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Legend item width for horizontal legend.\r\n     * @param  {Number} [itemWidth=70]\r\n     * @returns {Number|Legend}\r\n     */\r\n    itemWidth (itemWidth) {\r\n        if (!arguments.length) {\r\n            return this._itemWidth;\r\n        }\r\n        this._itemWidth = itemWidth;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Turn automatic width for legend items on or off. If true, {@link Legend#itemWidth itemWidth} is ignored.\r\n     * This setting takes into account the {@link Legend#gap gap}.\r\n     * @param  {Boolean} [autoItemWidth=false]\r\n     * @returns {Boolean|Legend}\r\n     */\r\n    autoItemWidth (autoItemWidth) {\r\n        if (!arguments.length) {\r\n            return this._autoItemWidth;\r\n        }\r\n        this._autoItemWidth = autoItemWidth;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get the legend text function. The legend widget uses this function to render the legend\r\n     * text for each item. If no function is specified the legend widget will display the names\r\n     * associated with each group.\r\n     * @param  {Function} [legendText]\r\n     * @returns {Function|Legend}\r\n     * @example\r\n     * // default legendText\r\n     * legend.legendText(pluck('name'))\r\n     *\r\n     * // create numbered legend items\r\n     * chart.legend(new Legend().legendText(function(d, i) { return i + '. ' + d.name; }))\r\n     *\r\n     * // create legend displaying group counts\r\n     * chart.legend(new Legend().legendText(function(d) { return d.name + ': ' d.data; }))\r\n     */\r\n    legendText (legendText) {\r\n        if (!arguments.length) {\r\n            return this._legendText;\r\n        }\r\n        this._legendText = legendText;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Maximum number of legend items to display\r\n     * @param  {Number} [maxItems]\r\n     * @return {Legend}\r\n     */\r\n    maxItems (maxItems) {\r\n        if (!arguments.length) {\r\n            return this._maxItems;\r\n        }\r\n        this._maxItems = utils.isNumber(maxItems) ? maxItems : undefined;\r\n        return this;\r\n    }\r\n\r\n    // Implementation methods\r\n\r\n    _legendItemHeight () {\r\n        return this._gap + this._itemHeight;\r\n    }\r\n\r\n    render () {\r\n        this._parent.svg().select('g.dc-legend').remove();\r\n        this._g = this._parent.svg().append('g')\r\n            .attr('class', 'dc-legend')\r\n            .attr('transform', `translate(${this._x},${this._y})`);\r\n        let legendables = this._parent.legendables();\r\n        const filters = this._parent.filters();\r\n\r\n        if (this._maxItems !== undefined) {\r\n            legendables = legendables.slice(0, this._maxItems);\r\n        }\r\n\r\n        const itemEnter = this._g.selectAll('g.dc-legend-item')\r\n            .data(legendables)\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', 'dc-legend-item')\r\n            .on('mouseover', d => {\r\n                this._parent.legendHighlight(d);\r\n            })\r\n            .on('mouseout', d => {\r\n                this._parent.legendReset(d);\r\n            })\r\n            .on('click', d => {\r\n                d.chart.legendToggle(d);\r\n            });\r\n\r\n        if (this._highlightSelected) {\r\n            itemEnter.classed(constants.SELECTED_CLASS,\r\n                              d => filters.indexOf(d.name) !== -1);\r\n        }\r\n\r\n\r\n        this._g.selectAll('g.dc-legend-item')\r\n            .classed('fadeout', d => d.chart.isLegendableHidden(d));\r\n\r\n        if (legendables.some(pluck('dashstyle'))) {\r\n            itemEnter\r\n                .append('line')\r\n                .attr('x1', 0)\r\n                .attr('y1', this._itemHeight / 2)\r\n                .attr('x2', this._itemHeight)\r\n                .attr('y2', this._itemHeight / 2)\r\n                .attr('stroke-width', 2)\r\n                .attr('stroke-dasharray', pluck('dashstyle'))\r\n                .attr('stroke', pluck('color'));\r\n        } else {\r\n            itemEnter\r\n                .append('rect')\r\n                .attr('width', this._itemHeight)\r\n                .attr('height', this._itemHeight)\r\n                .attr('fill', d => d ? d.color : 'blue');\r\n        }\r\n\r\n        {\r\n            const self = this;\r\n\r\n            itemEnter.append('text')\r\n                .text(self._legendText)\r\n                .attr('x', self._itemHeight + LABEL_GAP)\r\n                .attr('y', function () {\r\n                    return self._itemHeight / 2 + (this.clientHeight ? this.clientHeight : 13) / 2 - 2;\r\n                });\r\n        }\r\n\r\n        let cumulativeLegendTextWidth = 0;\r\n        let row = 0;\r\n\r\n        {\r\n            const self = this;\r\n            const LEGEND_HIDE_Y = -100;\r\n            const legendItemHeight = self._legendItemHeight();\r\n            let n = 0;\r\n\r\n            itemEnter.attr('transform', function (d, i) {\r\n                let translateBy;\r\n                let hidden = d.hidden && !self._hiddenVisibility;\r\n                if (self._horizontal) {\r\n                    const itemWidth = self._autoItemWidth === true ? this.getBBox().width + self._gap : self._itemWidth;\r\n                    if ((cumulativeLegendTextWidth + itemWidth) > self._legendWidth && cumulativeLegendTextWidth > 0) {\r\n                        ++row;\r\n                        cumulativeLegendTextWidth = 0;\r\n                    }\r\n                    translateBy = `translate(${cumulativeLegendTextWidth},${hidden ? LEGEND_HIDE_Y : row * legendItemHeight})`;\r\n                    cumulativeLegendTextWidth += hidden ? 0 : itemWidth;\r\n                } else {\r\n                    translateBy = `translate(0,${hidden ? LEGEND_HIDE_Y : n * legendItemHeight})`;\r\n                }\r\n                n += hidden ? 0 : 1;\r\n                return translateBy;\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const legend = () => new Legend();\r\n","import {\r\n    area,\r\n    curveBasis,\r\n    curveBasisClosed,\r\n    curveBasisOpen,\r\n    curveBundle,\r\n    curveCardinal,\r\n    curveCardinalClosed,\r\n    curveCardinalOpen,\r\n    curveLinear,\r\n    curveLinearClosed,\r\n    curveMonotoneX,\r\n    curveStep,\r\n    curveStepAfter,\r\n    curveStepBefore,\r\n    line\r\n} from 'd3-shape';\r\nimport {select} from 'd3-selection';\r\n\r\nimport {logger} from '../core/logger';\r\nimport {pluck, utils} from '../core/utils';\r\nimport {StackMixin} from '../base/stack-mixin';\r\nimport {transition} from '../core/core';\r\n\r\nconst DEFAULT_DOT_RADIUS = 5;\r\nconst TOOLTIP_G_CLASS = 'dc-tooltip';\r\nconst DOT_CIRCLE_CLASS = 'dot';\r\nconst Y_AXIS_REF_LINE_CLASS = 'yRef';\r\nconst X_AXIS_REF_LINE_CLASS = 'xRef';\r\nconst DEFAULT_DOT_OPACITY = 1e-6;\r\nconst LABEL_PADDING = 3;\r\n\r\n/**\r\n * Concrete line/area chart implementation.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\r\n * - {@link http://dc-js.github.com/dc.js/crime/index.html Canadian City Crime Stats}\r\n * @mixes StackMixin\r\n * @mixes CoordinateGridMixin\r\n */\r\nexport class LineChart extends StackMixin {\r\n    /**\r\n     * Create a Line Chart.\r\n     * @example\r\n     * // create a line chart under #chart-container1 element using the default global chart group\r\n     * var chart1 = new LineChart('#chart-container1');\r\n     * // create a line chart under #chart-container2 element using chart group A\r\n     * var chart2 = new LineChart('#chart-container2', 'chartGroupA');\r\n     * // create a sub-chart under a composite parent chart\r\n     * var chart3 = new LineChart(compositeChart);\r\n     * @param {String|node|d3.selection|CompositeChart} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\r\n     * specifying a dom block element such as a div; or a dom element or d3 selection.  If the line\r\n     * chart is a sub-chart in a {@link CompositeChart Composite Chart} then pass in the parent\r\n     * composite chart instance instead.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._renderArea = false;\r\n        this._dotRadius = DEFAULT_DOT_RADIUS;\r\n        this._dataPointRadius = null;\r\n        this._dataPointFillOpacity = DEFAULT_DOT_OPACITY;\r\n        this._dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\r\n        this._curve = null;\r\n        this._interpolate = null; // d3.curveLinear;  // deprecated in 3.0\r\n        this._tension = null;  // deprecated in 3.0\r\n        this._defined = undefined;\r\n        this._dashStyle = undefined;\r\n        this._xyTipsOn = true;\r\n\r\n        this.transitionDuration(500);\r\n        this.transitionDelay(0);\r\n        this._rangeBandPadding(1);\r\n\r\n        this.label(d => utils.printSingleValue(d.y0 + d.y), false);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    plotData () {\r\n        const chartBody = this.chartBodyG();\r\n        let layersList = chartBody.select('g.stack-list');\r\n\r\n        if (layersList.empty()) {\r\n            layersList = chartBody.append('g').attr('class', 'stack-list');\r\n        }\r\n\r\n        let layers = layersList.selectAll('g.stack').data(this.data());\r\n\r\n        const layersEnter = layers\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', (d, i) => `stack _${i}`);\r\n\r\n        layers = layersEnter.merge(layers);\r\n\r\n        this._drawLine(layersEnter, layers);\r\n\r\n        this._drawArea(layersEnter, layers);\r\n\r\n        this._drawDots(chartBody, layers);\r\n\r\n        if (this.renderLabel()) {\r\n            this._drawLabels(layers);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the curve factory to use for lines and areas drawn, allowing e.g. step\r\n     * functions, splines, and cubic interpolation. Typically you would use one of the interpolator functions\r\n     * provided by {@link https://github.com/d3/d3-shape/blob/master/README.md#curves d3 curves}.\r\n     *\r\n     * Replaces the use of {@link LineChart#interpolate} and {@link LineChart#tension}\r\n     * in dc.js < 3.0\r\n     *\r\n     * This is passed to\r\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve line.curve} and\r\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve area.curve}.\r\n     * @example\r\n     * // default\r\n     * chart\r\n     *     .curve(d3.curveLinear);\r\n     * // Add tension to curves that support it\r\n     * chart\r\n     *     .curve(d3.curveCardinal.tension(0.5));\r\n     * // You can use some specialized variation like\r\n     * // https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline\r\n     * chart\r\n     *     .curve(d3.curveCatmullRom.alpha(0.5));\r\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve line.curve}\r\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve area.curve}\r\n     * @param  {d3.curve} [curve=d3.curveLinear]\r\n     * @returns {d3.curve|LineChart}\r\n     */\r\n    curve (curve) {\r\n        if (!arguments.length) {\r\n            return this._curve;\r\n        }\r\n        this._curve = curve;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the interpolator to use for lines drawn, by string name, allowing e.g. step\r\n     * functions, splines, and cubic interpolation.\r\n     *\r\n     * Possible values are: 'linear', 'linear-closed', 'step', 'step-before', 'step-after', 'basis',\r\n     * 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', and\r\n     * 'monotone'.\r\n     *\r\n     * This function exists for backward compatibility. Use {@link LineChart#curve}\r\n     * which is generic and provides more options.\r\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\r\n     * @deprecated since version 3.0 use {@link LineChart#curve} instead\r\n     * @see {@link LineChart#curve}\r\n     * @param  {d3.curve} [interpolate=d3.curveLinear]\r\n     * @returns {d3.curve|LineChart}\r\n     */\r\n    interpolate (interpolate) {\r\n        logger.warnOnce('dc.lineChart.interpolate has been deprecated since version 3.0 use dc.lineChart.curve instead');\r\n        if (!arguments.length) {\r\n            return this._interpolate;\r\n        }\r\n        this._interpolate = interpolate;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the tension to use for lines drawn, in the range 0 to 1.\r\n     *\r\n     * Passed to the {@link https://github.com/d3/d3-shape/blob/master/README.md#curves d3 curve function}\r\n     * if it provides a `.tension` function. Example:\r\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#curveCardinal_tension curveCardinal.tension}.\r\n     *\r\n     * This function exists for backward compatibility. Use {@link LineChart#curve}\r\n     * which is generic and provides more options.\r\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\r\n     * @deprecated since version 3.0 use {@link LineChart#curve} instead\r\n     * @see {@link LineChart#curve}\r\n     * @param  {Number} [tension=0]\r\n     * @returns {Number|LineChart}\r\n     */\r\n    tension (tension) {\r\n        logger.warnOnce('dc.lineChart.tension has been deprecated since version 3.0 use dc.lineChart.curve instead');\r\n        if (!arguments.length) {\r\n            return this._tension;\r\n        }\r\n        this._tension = tension;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets a function that will determine discontinuities in the line which should be\r\n     * skipped: the path will be broken into separate subpaths if some points are undefined.\r\n     * This function is passed to\r\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined line.defined}\r\n     *\r\n     * Note: crossfilter will sometimes coerce nulls to 0, so you may need to carefully write\r\n     * custom reduce functions to get this to work, depending on your data. See\r\n     * {@link https://github.com/dc-js/dc.js/issues/615#issuecomment-49089248 this GitHub comment}\r\n     * for more details and an example.\r\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined line.defined}\r\n     * @param  {Function} [defined]\r\n     * @returns {Function|LineChart}\r\n     */\r\n    defined (defined) {\r\n        if (!arguments.length) {\r\n            return this._defined;\r\n        }\r\n        this._defined = defined;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the line's d3 dashstyle. This value becomes the 'stroke-dasharray' of line. Defaults to empty\r\n     * array (solid line).\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray stroke-dasharray}\r\n     * @example\r\n     * // create a Dash Dot Dot Dot\r\n     * chart.dashStyle([3,1,1,1]);\r\n     * @param  {Array<Number>} [dashStyle=[]]\r\n     * @returns {Array<Number>|LineChart}\r\n     */\r\n    dashStyle (dashStyle) {\r\n        if (!arguments.length) {\r\n            return this._dashStyle;\r\n        }\r\n        this._dashStyle = dashStyle;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set render area flag. If the flag is set to true then the chart will render the area\r\n     * beneath each line and the line chart effectively becomes an area chart.\r\n     * @param  {Boolean} [renderArea=false]\r\n     * @returns {Boolean|LineChart}\r\n     */\r\n    renderArea (renderArea) {\r\n        if (!arguments.length) {\r\n            return this._renderArea;\r\n        }\r\n        this._renderArea = renderArea;\r\n        return this;\r\n    }\r\n\r\n    _getColor (d, i) {\r\n        return this.getColor.call(d, d.values, i);\r\n    }\r\n\r\n    // To keep it backward compatible, this covers multiple cases\r\n    // See https://github.com/dc-js/dc.js/issues/1376\r\n    // It will be removed when interpolate and tension are removed.\r\n    _getCurveFactory () {\r\n        let curve = null;\r\n\r\n        // _curve takes precedence\r\n        if (this._curve) {\r\n            return this._curve;\r\n        }\r\n\r\n        // Approximate the D3v3 behavior\r\n        if (typeof this._interpolate === 'function') {\r\n            curve = this._interpolate;\r\n        } else {\r\n            // If _interpolate is string\r\n            const mapping = {\r\n                'linear': curveLinear,\r\n                'linear-closed': curveLinearClosed,\r\n                'step': curveStep,\r\n                'step-before': curveStepBefore,\r\n                'step-after': curveStepAfter,\r\n                'basis': curveBasis,\r\n                'basis-open': curveBasisOpen,\r\n                'basis-closed': curveBasisClosed,\r\n                'bundle': curveBundle,\r\n                'cardinal': curveCardinal,\r\n                'cardinal-open': curveCardinalOpen,\r\n                'cardinal-closed': curveCardinalClosed,\r\n                'monotone': curveMonotoneX\r\n            };\r\n            curve = mapping[this._interpolate];\r\n        }\r\n\r\n        // Default value\r\n        if (!curve) {\r\n            curve = curveLinear;\r\n        }\r\n\r\n        if (this._tension !== null) {\r\n            if (typeof curve.tension !== 'function') {\r\n                logger.warn('tension was specified but the curve/interpolate does not support it.');\r\n            } else {\r\n                curve = curve.tension(this._tension);\r\n            }\r\n        }\r\n        return curve;\r\n    }\r\n\r\n    _drawLine (layersEnter, layers) {\r\n        const _line = line()\r\n            .x(d => this.x()(d.x))\r\n            .y(d => this.y()(d.y + d.y0))\r\n            .curve(this._getCurveFactory());\r\n        if (this._defined) {\r\n            _line.defined(this._defined);\r\n        }\r\n\r\n        const path = layersEnter.append('path')\r\n            .attr('class', 'line')\r\n            .attr('stroke', (d, i) => this._getColor(d, i));\r\n        if (this._dashStyle) {\r\n            path.attr('stroke-dasharray', this._dashStyle);\r\n        }\r\n\r\n        transition(layers.select('path.line'), this.transitionDuration(), this.transitionDelay())\r\n        //.ease('linear')\r\n            .attr('stroke', (d, i) => this._getColor(d, i))\r\n            .attr('d', d => this._safeD(_line(d.values)));\r\n    }\r\n\r\n    _drawArea (layersEnter, layers) {\r\n        if (this._renderArea) {\r\n            const _area = area()\r\n                .x(d => this.x()(d.x))\r\n                .y1(d => this.y()(d.y + d.y0))\r\n                .y0(d => this.y()(d.y0))\r\n                .curve(this._getCurveFactory());\r\n            if (this._defined) {\r\n                _area.defined(this._defined);\r\n            }\r\n\r\n            layersEnter.append('path')\r\n                .attr('class', 'area')\r\n                .attr('fill', (d, i) => this._getColor(d, i))\r\n                .attr('d', d => this._safeD(_area(d.values)));\r\n\r\n            transition(layers.select('path.area'), this.transitionDuration(), this.transitionDelay())\r\n            //.ease('linear')\r\n                .attr('fill', (d, i) => this._getColor(d, i))\r\n                .attr('d', d => this._safeD(_area(d.values)));\r\n        }\r\n    }\r\n\r\n    _safeD (d) {\r\n        return (!d || d.indexOf('NaN') >= 0) ? 'M0,0' : d;\r\n    }\r\n\r\n    _drawDots (chartBody, layers) {\r\n        if (this.xyTipsOn() === 'always' || (!(this.brushOn() || this.parentBrushOn()) && this.xyTipsOn())) {\r\n            const tooltipListClass = `${TOOLTIP_G_CLASS}-list`;\r\n            let tooltips = chartBody.select(`g.${tooltipListClass}`);\r\n\r\n            if (tooltips.empty()) {\r\n                tooltips = chartBody.append('g').attr('class', tooltipListClass);\r\n            }\r\n\r\n            layers.each((data, layerIndex) => {\r\n                let points = data.values;\r\n                if (this._defined) {\r\n                    points = points.filter(this._defined);\r\n                }\r\n\r\n                let g = tooltips.select(`g.${TOOLTIP_G_CLASS}._${layerIndex}`);\r\n                if (g.empty()) {\r\n                    g = tooltips.append('g').attr('class', `${TOOLTIP_G_CLASS} _${layerIndex}`);\r\n                }\r\n\r\n                this._createRefLines(g);\r\n\r\n                const dots = g.selectAll(`circle.${DOT_CIRCLE_CLASS}`)\r\n                    .data(points, pluck('x'));\r\n\r\n                const chart = this;\r\n                const dotsEnterModify = dots\r\n                    .enter()\r\n                    .append('circle')\r\n                    .attr('class', DOT_CIRCLE_CLASS)\r\n                    .attr('cx', d => utils.safeNumber(this.x()(d.x)))\r\n                    .attr('cy', d => utils.safeNumber(this.y()(d.y + d.y0)))\r\n                    .attr('r', this._getDotRadius())\r\n                    .style('fill-opacity', this._dataPointFillOpacity)\r\n                    .style('stroke-opacity', this._dataPointStrokeOpacity)\r\n                    .attr('fill', this.getColor)\r\n                    .attr('stroke', this.getColor)\r\n                    .on('mousemove', function () {\r\n                        const dot = select(this);\r\n                        chart._showDot(dot);\r\n                        chart._showRefLines(dot, g);\r\n                    })\r\n                    .on('mouseout', function () {\r\n                        const dot = select(this);\r\n                        chart._hideDot(dot);\r\n                        chart._hideRefLines(g);\r\n                    })\r\n                    .merge(dots);\r\n\r\n                dotsEnterModify.call(dot => this._doRenderTitle(dot, data));\r\n\r\n                transition(dotsEnterModify, this.transitionDuration())\r\n                    .attr('cx', d => utils.safeNumber(this.x()(d.x)))\r\n                    .attr('cy', d => utils.safeNumber(this.y()(d.y + d.y0)))\r\n                    .attr('fill', this.getColor);\r\n\r\n                dots.exit().remove();\r\n            });\r\n        }\r\n    }\r\n\r\n    _drawLabels (layers) {\r\n        const chart = this;\r\n        layers.each(function (data, layerIndex) {\r\n            const layer = select(this);\r\n            const labels = layer.selectAll('text.lineLabel')\r\n                .data(data.values, pluck('x'));\r\n\r\n            const labelsEnterModify = labels\r\n                .enter()\r\n                .append('text')\r\n                .attr('class', 'lineLabel')\r\n                .attr('text-anchor', 'middle')\r\n                .merge(labels);\r\n\r\n            transition(labelsEnterModify, chart.transitionDuration())\r\n                .attr('x', d => utils.safeNumber(chart.x()(d.x)))\r\n                .attr('y', d => {\r\n                    const y = chart.y()(d.y + d.y0) - LABEL_PADDING;\r\n                    return utils.safeNumber(y);\r\n                })\r\n                .text(d => chart.label()(d));\r\n\r\n            transition(labels.exit(), chart.transitionDuration())\r\n                .attr('height', 0)\r\n                .remove();\r\n        });\r\n    }\r\n\r\n    _createRefLines (g) {\r\n        const yRefLine = g.select(`path.${Y_AXIS_REF_LINE_CLASS}`).empty() ?\r\n            g.append('path').attr('class', Y_AXIS_REF_LINE_CLASS) : g.select(`path.${Y_AXIS_REF_LINE_CLASS}`);\r\n        yRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\r\n\r\n        const xRefLine = g.select(`path.${X_AXIS_REF_LINE_CLASS}`).empty() ?\r\n            g.append('path').attr('class', X_AXIS_REF_LINE_CLASS) : g.select(`path.${X_AXIS_REF_LINE_CLASS}`);\r\n        xRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\r\n    }\r\n\r\n    _showDot (dot) {\r\n        dot.style('fill-opacity', 0.8);\r\n        dot.style('stroke-opacity', 0.8);\r\n        dot.attr('r', this._dotRadius);\r\n        return dot;\r\n    }\r\n\r\n    _showRefLines (dot, g) {\r\n        const x = dot.attr('cx');\r\n        const y = dot.attr('cy');\r\n        const yAxisX = (this._yAxisX() - this.margins().left);\r\n        const yAxisRefPathD = `M${yAxisX} ${y}L${x} ${y}`;\r\n        const xAxisRefPathD = `M${x} ${this.yAxisHeight()}L${x} ${y}`;\r\n        g.select(`path.${Y_AXIS_REF_LINE_CLASS}`).style('display', '').attr('d', yAxisRefPathD);\r\n        g.select(`path.${X_AXIS_REF_LINE_CLASS}`).style('display', '').attr('d', xAxisRefPathD);\r\n    }\r\n\r\n    _getDotRadius () {\r\n        return this._dataPointRadius || this._dotRadius;\r\n    }\r\n\r\n    _hideDot (dot) {\r\n        dot.style('fill-opacity', this._dataPointFillOpacity)\r\n            .style('stroke-opacity', this._dataPointStrokeOpacity)\r\n            .attr('r', this._getDotRadius());\r\n    }\r\n\r\n    _hideRefLines (g) {\r\n        g.select(`path.${Y_AXIS_REF_LINE_CLASS}`).style('display', 'none');\r\n        g.select(`path.${X_AXIS_REF_LINE_CLASS}`).style('display', 'none');\r\n    }\r\n\r\n    _doRenderTitle (dot, d) {\r\n        if (this.renderTitle()) {\r\n            dot.select('title').remove();\r\n            dot.append('title').text(pluck('data', this.title(d.name)));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Turn on/off the mouseover behavior of an individual data point which renders a circle and x/y axis\r\n     * dashed lines back to each respective axis.  This is ignored if the chart\r\n     * {@link CoordinateGridMixin#brushOn brush} is on\r\n     * @param  {Boolean} [xyTipsOn=false]\r\n     * @returns {Boolean|LineChart}\r\n     */\r\n    xyTipsOn (xyTipsOn) {\r\n        if (!arguments.length) {\r\n            return this._xyTipsOn;\r\n        }\r\n        this._xyTipsOn = xyTipsOn;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the radius (in px) for dots displayed on the data points.\r\n     * @param  {Number} [dotRadius=5]\r\n     * @returns {Number|LineChart}\r\n     */\r\n    dotRadius (dotRadius) {\r\n        if (!arguments.length) {\r\n            return this._dotRadius;\r\n        }\r\n        this._dotRadius = dotRadius;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Always show individual dots for each datapoint.\r\n     *\r\n     * If `options` is falsy, it disables data point rendering. If no `options` are provided, the\r\n     * current `options` values are instead returned.\r\n     * @example\r\n     * chart.renderDataPoints({radius: 2, fillOpacity: 0.8, strokeOpacity: 0.0})\r\n     * @param  {{fillOpacity: Number, strokeOpacity: Number, radius: Number}} [options={fillOpacity: 0.8, strokeOpacity: 0.0, radius: 2}]\r\n     * @returns {{fillOpacity: Number, strokeOpacity: Number, radius: Number}|LineChart}\r\n     */\r\n    renderDataPoints (options) {\r\n        if (!arguments.length) {\r\n            return {\r\n                fillOpacity: this._dataPointFillOpacity,\r\n                strokeOpacity: this._dataPointStrokeOpacity,\r\n                radius: this._dataPointRadius\r\n            };\r\n        } else if (!options) {\r\n            this._dataPointFillOpacity = DEFAULT_DOT_OPACITY;\r\n            this._dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\r\n            this._dataPointRadius = null;\r\n        } else {\r\n            this._dataPointFillOpacity = options.fillOpacity || 0.8;\r\n            this._dataPointStrokeOpacity = options.strokeOpacity || 0.0;\r\n            this._dataPointRadius = options.radius || 2;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _colorFilter (color, dashstyle, inv) {\r\n        return function () {\r\n            const item = select(this);\r\n            const match = (item.attr('stroke') === color &&\r\n                item.attr('stroke-dasharray') === ((dashstyle instanceof Array) ?\r\n                    dashstyle.join(',') : null)) || item.attr('fill') === color;\r\n            return inv ? !match : match;\r\n        };\r\n    }\r\n\r\n    legendHighlight (d) {\r\n        if (!this.isLegendableHidden(d)) {\r\n            this.g().selectAll('path.line, path.area')\r\n                .classed('highlight', this._colorFilter(d.color, d.dashstyle))\r\n                .classed('fadeout', this._colorFilter(d.color, d.dashstyle, true));\r\n        }\r\n    }\r\n\r\n    legendReset () {\r\n        this.g().selectAll('path.line, path.area')\r\n            .classed('highlight', false)\r\n            .classed('fadeout', false);\r\n    }\r\n\r\n    legendables () {\r\n        const legendables = super.legendables();\r\n        if (!this._dashStyle) {\r\n            return legendables;\r\n        }\r\n        return legendables.map(l => {\r\n            l.dashstyle = this._dashStyle;\r\n            return l;\r\n        });\r\n    }\r\n}\r\n\r\nexport const lineChart = (parent, chartGroup) => new LineChart(parent, chartGroup);\r\n","import {format} from 'd3-format';\r\nimport {easeQuad} from 'd3-ease';\r\nimport {interpolateNumber} from 'd3-interpolate';\r\n\r\nimport {BaseMixin} from '../base/base-mixin';\r\n\r\nconst SPAN_CLASS = 'number-display';\r\n\r\n/**\r\n * A display of a single numeric value.\r\n *\r\n * Unlike other charts, you do not need to set a dimension. Instead a group object must be provided and\r\n * a valueAccessor that returns a single value.\r\n *\r\n * If the group is a {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_groupAll groupAll}\r\n * then its `.value()` will be displayed. This is the recommended usage.\r\n *\r\n * However, if it is given an ordinary group, the `numberDisplay` will show the last bin's value, after\r\n * sorting with the {@link https://dc-js.github.io/dc.js/docs/html/dc.baseMixin.html#ordering__anchor ordering}\r\n * function. `numberDisplay` defaults the `ordering` function to sorting by value, so this will display\r\n * the largest value if the values are numeric.\r\n * @mixes BaseMixin\r\n */\r\nexport class NumberDisplay extends BaseMixin {\r\n    /**\r\n     * Create a Number Display widget.\r\n     *\r\n     * @example\r\n     * // create a number display under #chart-container1 element using the default global chart group\r\n     * var display1 = new NumberDisplay('#chart-container1');\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._formatNumber = format('.2s');\r\n        this._html = {one: '', some: '', none: ''};\r\n        this._lastValue = undefined;\r\n\r\n        // dimension not required\r\n        this._mandatoryAttributes(['group']);\r\n\r\n        // default to ordering by value, to emulate old group.top(1) behavior when multiple groups\r\n        this.ordering(kv => kv.value);\r\n\r\n        this.data(group => {\r\n            const valObj = group.value ? group.value() : this._maxBin(group.all());\r\n            return this.valueAccessor()(valObj);\r\n        });\r\n\r\n        this.transitionDuration(250); // good default\r\n        this.transitionDelay(0);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    /**\r\n     * Gets or sets an optional object specifying HTML templates to use depending on the number\r\n     * displayed.  The text `%number` will be replaced with the current value.\r\n     * - one: HTML template to use if the number is 1\r\n     * - zero: HTML template to use if the number is 0\r\n     * - some: HTML template to use otherwise\r\n     * @example\r\n     * numberWidget.html({\r\n     *      one:'%number record',\r\n     *      some:'%number records',\r\n     *      none:'no records'})\r\n     * @param {{one:String, some:String, none:String}} [html={one: '', some: '', none: ''}]\r\n     * @returns {{one:String, some:String, none:String}|NumberDisplay}\r\n     */\r\n    html (html) {\r\n        if (!arguments.length) {\r\n            return this._html;\r\n        }\r\n        if (html.none) {\r\n            this._html.none = html.none;//if none available\r\n        } else if (html.one) {\r\n            this._html.none = html.one;//if none not available use one\r\n        } else if (html.some) {\r\n            this._html.none = html.some;//if none and one not available use some\r\n        }\r\n        if (html.one) {\r\n            this._html.one = html.one;//if one available\r\n        } else if (html.some) {\r\n            this._html.one = html.some;//if one not available use some\r\n        }\r\n        if (html.some) {\r\n            this._html.some = html.some;//if some available\r\n        } else if (html.one) {\r\n            this._html.some = html.one;//if some not available use one\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Calculate and return the underlying value of the display.\r\n     * @returns {Number}\r\n     */\r\n    value () {\r\n        return this.data();\r\n    }\r\n\r\n    _maxBin (all) {\r\n        if (!all.length) {\r\n            return null;\r\n        }\r\n        const sorted = this._computeOrderedGroups(all);\r\n        return sorted[sorted.length - 1];\r\n    }\r\n\r\n    _doRender () {\r\n        const newValue = this.value();\r\n        let span = this.selectAll(`.${SPAN_CLASS}`);\r\n\r\n        if (span.empty()) {\r\n            span = span.data([0])\r\n                .enter()\r\n                .append('span')\r\n                .attr('class', SPAN_CLASS)\r\n                .merge(span);\r\n        }\r\n\r\n        {\r\n            const chart = this;\r\n            span.transition()\r\n                .duration(chart.transitionDuration())\r\n                .delay(chart.transitionDelay())\r\n                .ease(easeQuad)\r\n                .tween('text', function () {\r\n                    // [XA] don't try and interpolate from Infinity, else this breaks.\r\n                    const interpStart = isFinite(chart._lastValue) ? chart._lastValue : 0;\r\n                    const interp = interpolateNumber(interpStart || 0, newValue);\r\n                    chart._lastValue = newValue;\r\n\r\n                    // need to save it in D3v4\r\n                    const node = this;\r\n                    return t => {\r\n                        let html = null;\r\n                        const num = chart.formatNumber()(interp(t));\r\n                        if (newValue === 0 && (chart._html.none !== '')) {\r\n                            html = chart._html.none;\r\n                        } else if (newValue === 1 && (chart._html.one !== '')) {\r\n                            html = chart._html.one;\r\n                        } else if (chart._html.some !== '') {\r\n                            html = chart._html.some;\r\n                        }\r\n                        node.innerHTML = html ? html.replace('%number', num) : num;\r\n                    };\r\n                });\r\n        }\r\n    }\r\n\r\n    _doRedraw () {\r\n        return this._doRender();\r\n    }\r\n\r\n    /**\r\n     * Get or set a function to format the value for the display.\r\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\r\n     * @param {Function} [formatter=d3.format('.2s')]\r\n     * @returns {Function|NumberDisplay}\r\n     */\r\n    formatNumber (formatter) {\r\n        if (!arguments.length) {\r\n            return this._formatNumber;\r\n        }\r\n        this._formatNumber = formatter;\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport const numberDisplay = (parent, chartGroup) => new NumberDisplay(parent, chartGroup);\r\n","import {min, sum} from 'd3-array';\r\nimport {arc, pie} from 'd3-shape';\r\nimport {select} from 'd3-selection';\r\nimport {interpolate} from 'd3-interpolate';\r\n\r\nimport {CapMixin} from '../base/cap-mixin';\r\nimport {ColorMixin} from '../base/color-mixin';\r\nimport {BaseMixin} from '../base/base-mixin';\r\nimport {transition} from '../core/core';\r\n\r\nconst DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\r\n\r\n/**\r\n * The pie chart implementation is usually used to visualize a small categorical distribution.  The pie\r\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\r\n * slice relative to the sum of all values. Slices are ordered by {@link BaseMixin#ordering ordering}\r\n * which defaults to sorting by key.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\r\n * @mixes CapMixin\r\n * @mixes ColorMixin\r\n * @mixes BaseMixin\r\n */\r\nexport class PieChart extends CapMixin(ColorMixin(BaseMixin)) {\r\n    /**\r\n     * Create a Pie Chart\r\n     *\r\n     * @example\r\n     * // create a pie chart under #chart-container1 element using the default global chart group\r\n     * var chart1 = new PieChart('#chart-container1');\r\n     * // create a pie chart under #chart-container2 element using chart group A\r\n     * var chart2 = new PieChart('#chart-container2', 'chartGroupA');\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._sliceCssClass = 'pie-slice';\r\n        this._labelCssClass = 'pie-label';\r\n        this._sliceGroupCssClass = 'pie-slice-group';\r\n        this._labelGroupCssClass = 'pie-label-group';\r\n        this._emptyCssClass = 'empty-chart';\r\n        this._emptyTitle = 'empty';\r\n\r\n        this._radius = undefined;\r\n        this._givenRadius = undefined; // specified radius, if any\r\n        this._innerRadius = 0;\r\n        this._externalRadiusPadding = 0;\r\n\r\n\r\n        this._g = undefined;\r\n        this._cx = undefined;\r\n        this._cy = undefined;\r\n        this._minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\r\n        this._externalLabelRadius = undefined;\r\n        this._drawPaths = false;\r\n\r\n        this.colorAccessor(d => this.cappedKeyAccessor(d));\r\n\r\n        this.title(d => `${this.cappedKeyAccessor(d)}: ${this.cappedValueAccessor(d)}`);\r\n\r\n        this.label(d => this.cappedKeyAccessor(d));\r\n        this.renderLabel(true);\r\n\r\n        this.transitionDuration(350);\r\n        this.transitionDelay(0);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    /**\r\n     * Get or set the maximum number of slices the pie chart will generate. The top slices are determined by\r\n     * value from high to low. Other slices exceeding the cap will be rolled up into one single *Others* slice.\r\n     * @param {Number} [cap]\r\n     * @returns {Number|PieChart}\r\n     */\r\n    slicesCap (cap) {\r\n        return this.cap(cap)\r\n    }\r\n\r\n    _doRender () {\r\n        this.resetSvg();\r\n\r\n        this._g = this.svg()\r\n            .append('g')\r\n            .attr('transform', `translate(${this.cx()},${this.cy()})`);\r\n\r\n        this._g.append('g').attr('class', this._sliceGroupCssClass);\r\n        this._g.append('g').attr('class', this._labelGroupCssClass);\r\n\r\n        this._drawChart();\r\n\r\n        return this;\r\n    }\r\n\r\n    _drawChart () {\r\n        // set radius from chart size if none given, or if given radius is too large\r\n        const maxRadius = min([this.width(), this.height()]) / 2;\r\n        this._radius = this._givenRadius && this._givenRadius < maxRadius ? this._givenRadius : maxRadius;\r\n\r\n        const arcs = this._buildArcs();\r\n\r\n        const pieLayout = this._pieLayout();\r\n        let pieData;\r\n        // if we have data...\r\n        if (sum(this.data(), d => this.cappedValueAccessor(d))) {\r\n            pieData = pieLayout(this.data());\r\n            this._g.classed(this._emptyCssClass, false);\r\n        } else {\r\n            // otherwise we'd be getting NaNs, so override\r\n            // note: abuse others for its ignoring the value accessor\r\n            pieData = pieLayout([{key: this._emptyTitle, value: 1, others: [this._emptyTitle]}]);\r\n            this._g.classed(this._emptyCssClass, true);\r\n        }\r\n\r\n        if (this._g) {\r\n            const slices = this._g.select(`g.${this._sliceGroupCssClass}`)\r\n                .selectAll(`g.${this._sliceCssClass}`)\r\n                .data(pieData);\r\n\r\n            const labels = this._g.select(`g.${this._labelGroupCssClass}`)\r\n                .selectAll(`text.${this._labelCssClass}`)\r\n                .data(pieData);\r\n\r\n            this._removeElements(slices, labels);\r\n\r\n            this._createElements(slices, labels, arcs, pieData);\r\n\r\n            this._updateElements(pieData, arcs);\r\n\r\n            this._highlightFilter();\r\n\r\n            transition(this._g, this.transitionDuration(), this.transitionDelay())\r\n                .attr('transform', `translate(${this.cx()},${this.cy()})`);\r\n        }\r\n    }\r\n\r\n    _createElements (slices, labels, arcs, pieData) {\r\n        const slicesEnter = this._createSliceNodes(slices);\r\n\r\n        this._createSlicePath(slicesEnter, arcs);\r\n\r\n        this._createTitles(slicesEnter);\r\n\r\n        this._createLabels(labels, pieData, arcs);\r\n    }\r\n\r\n    _createSliceNodes (slices) {\r\n        return slices\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', (d, i) => `${this._sliceCssClass} _${i}`);\r\n    }\r\n\r\n    _createSlicePath (slicesEnter, arcs) {\r\n        const slicePath = slicesEnter.append('path')\r\n            .attr('fill', (d, i) => this._fill(d, i))\r\n            .on('click', (d, i) => this._onClick(d, i))\r\n            .attr('d', (d, i) => this._safeArc(d, i, arcs));\r\n\r\n        const tranNodes = transition(slicePath, this.transitionDuration(), this.transitionDelay());\r\n        if (tranNodes.attrTween) {\r\n            const chart = this;\r\n            tranNodes.attrTween('d', function (d) {\r\n                return chart._tweenPie(d, this);\r\n            });\r\n        }\r\n    }\r\n\r\n    _createTitles (slicesEnter) {\r\n        if (this.renderTitle()) {\r\n            slicesEnter.append('title').text(d => this.title()(d.data));\r\n        }\r\n    }\r\n\r\n    _applyLabelText (labels) {\r\n        labels\r\n            .text(d => {\r\n                const data = d.data;\r\n                if ((this._sliceHasNoData(data) || this._sliceTooSmall(d)) && !this._isSelectedSlice(d)) {\r\n                    return '';\r\n                }\r\n                return this.label()(d.data);\r\n            });\r\n    }\r\n\r\n    _positionLabels (labels, arcs) {\r\n        this._applyLabelText(labels);\r\n        transition(labels, this.transitionDuration(), this.transitionDelay())\r\n            .attr('transform', d => this._labelPosition(d, arcs))\r\n            .attr('text-anchor', 'middle');\r\n    }\r\n\r\n    _highlightSlice (i, whether) {\r\n        this.select(`g.pie-slice._${i}`)\r\n            .classed('highlight', whether);\r\n    }\r\n\r\n    _createLabels (labels, pieData, arcs) {\r\n        if (this.renderLabel()) {\r\n            const labelsEnter = labels\r\n                .enter()\r\n                .append('text')\r\n                .attr('class', (d, i) => {\r\n                    let classes = `${this._sliceCssClass} ${this._labelCssClass} _${i}`;\r\n                    if (this._externalLabelRadius) {\r\n                        classes += ' external';\r\n                    }\r\n                    return classes;\r\n                })\r\n                .on('click', (d, i) => this._onClick(d, i))\r\n                .on('mouseover', (d, i) => {\r\n                    this._highlightSlice(i, true);\r\n                })\r\n                .on('mouseout', (d, i) => {\r\n                    this._highlightSlice(i, false);\r\n                });\r\n            this._positionLabels(labelsEnter, arcs);\r\n            if (this._externalLabelRadius && this._drawPaths) {\r\n                this._updateLabelPaths(pieData, arcs);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateLabelPaths (pieData, arcs) {\r\n        let polyline = this._g.selectAll(`polyline.${this._sliceCssClass}`)\r\n            .data(pieData);\r\n\r\n        polyline.exit().remove();\r\n\r\n        polyline = polyline\r\n            .enter()\r\n            .append('polyline')\r\n            .attr('class', (d, i) => `pie-path _${i} ${this._sliceCssClass}`)\r\n            .on('click', (d, i) => this._onClick(d, i))\r\n            .on('mouseover', (d, i) => {\r\n                this._highlightSlice(i, true);\r\n            })\r\n            .on('mouseout', (d, i) => {\r\n                this._highlightSlice(i, false);\r\n            })\r\n            .merge(polyline);\r\n\r\n        const arc2 = arc()\r\n            .outerRadius(this._radius - this._externalRadiusPadding + this._externalLabelRadius)\r\n            .innerRadius(this._radius - this._externalRadiusPadding);\r\n        const tranNodes = transition(polyline, this.transitionDuration(), this.transitionDelay());\r\n        // this is one rare case where d3.selection differs from d3.transition\r\n        if (tranNodes.attrTween) {\r\n            tranNodes\r\n                .attrTween('points', function (d) {\r\n                    let current = this._current || d;\r\n                    current = {startAngle: current.startAngle, endAngle: current.endAngle};\r\n                    const _interpolate = interpolate(current, d);\r\n                    this._current = _interpolate(0);\r\n                    return t => {\r\n                        const d2 = _interpolate(t);\r\n                        return [arcs.centroid(d2), arc2.centroid(d2)];\r\n                    };\r\n                });\r\n        } else {\r\n            tranNodes.attr('points', d => [arcs.centroid(d), arc2.centroid(d)]);\r\n        }\r\n        tranNodes.style('visibility', d => d.endAngle - d.startAngle < 0.0001 ? 'hidden' : 'visible');\r\n\r\n    }\r\n\r\n    _updateElements (pieData, arcs) {\r\n        this._updateSlicePaths(pieData, arcs);\r\n        this._updateLabels(pieData, arcs);\r\n        this._updateTitles(pieData);\r\n    }\r\n\r\n    _updateSlicePaths (pieData, arcs) {\r\n        const slicePaths = this._g.selectAll(`g.${this._sliceCssClass}`)\r\n            .data(pieData)\r\n            .select('path')\r\n            .attr('d', (d, i) => this._safeArc(d, i, arcs));\r\n        const tranNodes = transition(slicePaths, this.transitionDuration(), this.transitionDelay());\r\n        if (tranNodes.attrTween) {\r\n            const chart = this;\r\n            tranNodes.attrTween('d', function (d) {\r\n                return chart._tweenPie(d, this);\r\n            });\r\n        }\r\n        tranNodes.attr('fill', (d, i) => this._fill(d, i));\r\n    }\r\n\r\n    _updateLabels (pieData, arcs) {\r\n        if (this.renderLabel()) {\r\n            const labels = this._g.selectAll(`text.${this._labelCssClass}`)\r\n                .data(pieData);\r\n            this._positionLabels(labels, arcs);\r\n            if (this._externalLabelRadius && this._drawPaths) {\r\n                this._updateLabelPaths(pieData, arcs);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateTitles (pieData) {\r\n        if (this.renderTitle()) {\r\n            this._g.selectAll(`g.${this._sliceCssClass}`)\r\n                .data(pieData)\r\n                .select('title')\r\n                .text(d => this.title()(d.data));\r\n        }\r\n    }\r\n\r\n    _removeElements (slices, labels) {\r\n        slices.exit().remove();\r\n        labels.exit().remove();\r\n    }\r\n\r\n    _highlightFilter () {\r\n        const chart = this;\r\n        if (this.hasFilter()) {\r\n            this.selectAll(`g.${this._sliceCssClass}`).each(function (d) {\r\n                if (chart._isSelectedSlice(d)) {\r\n                    chart.highlightSelected(this);\r\n                } else {\r\n                    chart.fadeDeselected(this);\r\n                }\r\n            });\r\n        } else {\r\n            this.selectAll(`g.${this._sliceCssClass}`).each(function () {\r\n                chart.resetHighlight(this);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get or set the external radius padding of the pie chart. This will force the radius of the\r\n     * pie chart to become smaller or larger depending on the value.\r\n     * @param {Number} [externalRadiusPadding=0]\r\n     * @returns {Number|PieChart}\r\n     */\r\n    externalRadiusPadding (externalRadiusPadding) {\r\n        if (!arguments.length) {\r\n            return this._externalRadiusPadding;\r\n        }\r\n        this._externalRadiusPadding = externalRadiusPadding;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the inner radius of the pie chart. If the inner radius is greater than 0px then the\r\n     * pie chart will be rendered as a doughnut chart.\r\n     * @param {Number} [innerRadius=0]\r\n     * @returns {Number|PieChart}\r\n     */\r\n    innerRadius (innerRadius) {\r\n        if (!arguments.length) {\r\n            return this._innerRadius;\r\n        }\r\n        this._innerRadius = innerRadius;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\r\n     * chart width and height.\r\n     * @param {Number} [radius]\r\n     * @returns {Number|PieChart}\r\n     */\r\n    radius (radius) {\r\n        if (!arguments.length) {\r\n            return this._givenRadius;\r\n        }\r\n        this._givenRadius = radius;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set center x coordinate position. Default is center of svg.\r\n     * @param {Number} [cx]\r\n     * @returns {Number|PieChart}\r\n     */\r\n    cx (cx) {\r\n        if (!arguments.length) {\r\n            return (this._cx || this.width() / 2);\r\n        }\r\n        this._cx = cx;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set center y coordinate position. Default is center of svg.\r\n     * @param {Number} [cy]\r\n     * @returns {Number|PieChart}\r\n     */\r\n    cy (cy) {\r\n        if (!arguments.length) {\r\n            return (this._cy || this.height() / 2);\r\n        }\r\n        this._cy = cy;\r\n        return this;\r\n    }\r\n\r\n    _buildArcs () {\r\n        return arc()\r\n            .outerRadius(this._radius - this._externalRadiusPadding)\r\n            .innerRadius(this._innerRadius);\r\n    }\r\n\r\n    _isSelectedSlice (d) {\r\n        return this.hasFilter(this.cappedKeyAccessor(d.data));\r\n    }\r\n\r\n    _doRedraw () {\r\n        this._drawChart();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\r\n     * display a slice label.\r\n     * @param {Number} [minAngleForLabel=0.5]\r\n     * @returns {Number|PieChart}\r\n     */\r\n    minAngleForLabel (minAngleForLabel) {\r\n        if (!arguments.length) {\r\n            return this._minAngleForLabel;\r\n        }\r\n        this._minAngleForLabel = minAngleForLabel;\r\n        return this;\r\n    }\r\n\r\n    _pieLayout () {\r\n        return pie().sort(null).value(d => this.cappedValueAccessor(d));\r\n    }\r\n\r\n    _sliceTooSmall (d) {\r\n        const angle = (d.endAngle - d.startAngle);\r\n        return isNaN(angle) || angle < this._minAngleForLabel;\r\n    }\r\n\r\n    _sliceHasNoData (d) {\r\n        return this.cappedValueAccessor(d) === 0;\r\n    }\r\n\r\n    _isOffCanvas (current) {\r\n        return !current || isNaN(current.startAngle) || isNaN(current.endAngle);\r\n    }\r\n\r\n    _fill (d, i) {\r\n        return this.getColor(d.data, i);\r\n    }\r\n\r\n    _onClick (d, i) {\r\n        if (this._g.attr('class') !== this._emptyCssClass) {\r\n            this.onClick(d.data, i);\r\n        }\r\n    }\r\n\r\n    _safeArc (d, i, _arc) {\r\n        let path = _arc(d, i);\r\n        if (path.indexOf('NaN') >= 0) {\r\n            path = 'M0,0';\r\n        }\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * Title to use for the only slice when there is no data.\r\n     * @param {String} [title]\r\n     * @returns {String|PieChart}\r\n     */\r\n    emptyTitle (title) {\r\n        if (arguments.length === 0) {\r\n            return this._emptyTitle;\r\n        }\r\n        this._emptyTitle = title;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Position slice labels offset from the outer edge of the chart.\r\n     *\r\n     * The argument specifies the extra radius to be added for slice labels.\r\n     * @param {Number} [externalLabelRadius]\r\n     * @returns {Number|PieChart}\r\n     */\r\n    externalLabels (externalLabelRadius) {\r\n        if (arguments.length === 0) {\r\n            return this._externalLabelRadius;\r\n        } else if (externalLabelRadius) {\r\n            this._externalLabelRadius = externalLabelRadius;\r\n        } else {\r\n            this._externalLabelRadius = undefined;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set whether to draw lines from pie slices to their labels.\r\n     *\r\n     * @param {Boolean} [drawPaths]\r\n     * @returns {Boolean|PieChart}\r\n     */\r\n    drawPaths (drawPaths) {\r\n        if (arguments.length === 0) {\r\n            return this._drawPaths;\r\n        }\r\n        this._drawPaths = drawPaths;\r\n        return this;\r\n    }\r\n\r\n    _labelPosition (d, _arc) {\r\n        let centroid;\r\n        if (this._externalLabelRadius) {\r\n            centroid = arc()\r\n                .outerRadius(this._radius - this._externalRadiusPadding + this._externalLabelRadius)\r\n                .innerRadius(this._radius - this._externalRadiusPadding + this._externalLabelRadius)\r\n                .centroid(d);\r\n        } else {\r\n            centroid = _arc.centroid(d);\r\n        }\r\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\r\n            return 'translate(0,0)';\r\n        } else {\r\n            return `translate(${centroid})`;\r\n        }\r\n    }\r\n\r\n    legendables () {\r\n        return this.data().map((d, i) => {\r\n            const legendable = {name: d.key, data: d.value, others: d.others, chart: this};\r\n            legendable.color = this.getColor(d, i);\r\n            return legendable;\r\n        });\r\n    }\r\n\r\n    legendHighlight (d) {\r\n        this._highlightSliceFromLegendable(d, true);\r\n    }\r\n\r\n    legendReset (d) {\r\n        this._highlightSliceFromLegendable(d, false);\r\n    }\r\n\r\n    legendToggle (d) {\r\n        this.onClick({key: d.name, others: d.others});\r\n    }\r\n\r\n    _highlightSliceFromLegendable (legendable, highlighted) {\r\n        this.selectAll('g.pie-slice').each(function (d) {\r\n            if (legendable.name === d.data.key) {\r\n                select(this).classed('highlight', highlighted);\r\n            }\r\n        });\r\n    }\r\n\r\n    _tweenPie (b, element) {\r\n        b.innerRadius = this._innerRadius;\r\n        let current = element._current;\r\n        if (this._isOffCanvas(current)) {\r\n            current = {startAngle: 0, endAngle: 0};\r\n        } else {\r\n            // only interpolate startAngle & endAngle, not the whole data object\r\n            current = {startAngle: current.startAngle, endAngle: current.endAngle};\r\n        }\r\n        const i = interpolate(current, b);\r\n        element._current = i(0);\r\n        return t => this._safeArc(i(t), 0, this._buildArcs());\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const pieChart = (parent, chartGroup) => new PieChart(parent, chartGroup);\r\n","import {extent} from 'd3-array';\r\nimport {axisBottom} from 'd3-axis';\r\nimport {scaleLinear} from 'd3-scale';\r\n\r\nimport {CapMixin} from '../base/cap-mixin';\r\nimport {MarginMixin} from '../base/margin-mixin';\r\nimport {ColorMixin} from '../base/color-mixin';\r\nimport {transition} from '../core/core';\r\n\r\n/**\r\n * Concrete row chart implementation.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.com/dc.js/ Nasdaq 100 Index}\r\n * @mixes CapMixin\r\n * @mixes MarginMixin\r\n * @mixes ColorMixin\r\n * @mixes BaseMixin\r\n */\r\nexport class RowChart extends CapMixin(ColorMixin(MarginMixin)) {\r\n    /**\r\n     * Create a Row Chart.\r\n     * @example\r\n     * // create a row chart under #chart-container1 element using the default global chart group\r\n     * var chart1 = new RowChart('#chart-container1');\r\n     * // create a row chart under #chart-container2 element using chart group A\r\n     * var chart2 = new RowChart('#chart-container2', 'chartGroupA');\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._g = undefined;\r\n\r\n        this._labelOffsetX = 10;\r\n        this._labelOffsetY = 15;\r\n        this._hasLabelOffsetY = false;\r\n        this._dyOffset = '0.35em'; // this helps center labels https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#svg_text\r\n        this._titleLabelOffsetX = 2;\r\n\r\n        this._gap = 5;\r\n\r\n        this._fixedBarHeight = false;\r\n        this._rowCssClass = 'row';\r\n        this._titleRowCssClass = 'titlerow';\r\n        this._renderTitleLabel = false;\r\n\r\n        this._x = undefined;\r\n\r\n        this._elasticX = undefined;\r\n\r\n        this._xAxis = axisBottom();\r\n\r\n        this._rowData = undefined;\r\n\r\n        this.rowsCap = this.cap;\r\n\r\n        this.title(d => `${this.cappedKeyAccessor(d)}: ${this.cappedValueAccessor(d)}`);\r\n\r\n        this.label(d => this.cappedKeyAccessor(d));\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    _calculateAxisScale () {\r\n        if (!this._x || this._elasticX) {\r\n            const _extent = extent(this._rowData, d => this.cappedValueAccessor(d));\r\n            if (_extent[0] > 0) {\r\n                _extent[0] = 0;\r\n            }\r\n            if (_extent[1] < 0) {\r\n                _extent[1] = 0;\r\n            }\r\n            this._x = scaleLinear().domain(_extent)\r\n                .range([0, this.effectiveWidth()]);\r\n        }\r\n        this._xAxis.scale(this._x);\r\n    }\r\n\r\n    _drawAxis () {\r\n        let axisG = this._g.select('g.axis');\r\n\r\n        this._calculateAxisScale();\r\n\r\n        if (axisG.empty()) {\r\n            axisG = this._g.append('g').attr('class', 'axis');\r\n        }\r\n        axisG.attr('transform', `translate(0, ${this.effectiveHeight()})`);\r\n\r\n        transition(axisG, this.transitionDuration(), this.transitionDelay())\r\n            .call(this._xAxis);\r\n    }\r\n\r\n    _doRender () {\r\n        this.resetSvg();\r\n\r\n        this._g = this.svg()\r\n            .append('g')\r\n            .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\r\n\r\n        this._drawChart();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the x scale. The x scale can be any d3\r\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}.\r\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\r\n     * @param {d3.scale} [scale]\r\n     * @returns {d3.scale|RowChart}\r\n     */\r\n    x (scale) {\r\n        if (!arguments.length) {\r\n            return this._x;\r\n        }\r\n        this._x = scale;\r\n        return this;\r\n    }\r\n\r\n    _drawGridLines () {\r\n        this._g.selectAll('g.tick')\r\n            .select('line.grid-line')\r\n            .remove();\r\n\r\n        this._g.selectAll('g.tick')\r\n            .append('line')\r\n            .attr('class', 'grid-line')\r\n            .attr('x1', 0)\r\n            .attr('y1', 0)\r\n            .attr('x2', 0)\r\n            .attr('y2', () => -this.effectiveHeight());\r\n    }\r\n\r\n    _drawChart () {\r\n        this._rowData = this.data();\r\n\r\n        this._drawAxis();\r\n        this._drawGridLines();\r\n\r\n        let rows = this._g.selectAll(`g.${this._rowCssClass}`)\r\n            .data(this._rowData);\r\n\r\n        this._removeElements(rows);\r\n        rows = this._createElements(rows)\r\n            .merge(rows);\r\n        this._updateElements(rows);\r\n    }\r\n\r\n    _createElements (rows) {\r\n        const rowEnter = rows.enter()\r\n            .append('g')\r\n            .attr('class', (d, i) => `${this._rowCssClass} _${i}`);\r\n\r\n        rowEnter.append('rect').attr('width', 0);\r\n\r\n        this._createLabels(rowEnter);\r\n\r\n        return rowEnter;\r\n    }\r\n\r\n    _removeElements (rows) {\r\n        rows.exit().remove();\r\n    }\r\n\r\n    _rootValue () {\r\n        const root = this._x(0);\r\n        return (root === -Infinity || root !== root) ? this._x(1) : root;\r\n    }\r\n\r\n    _updateElements (rows) {\r\n        const n = this._rowData.length;\r\n\r\n        let height;\r\n        if (!this._fixedBarHeight) {\r\n            height = (this.effectiveHeight() - (n + 1) * this._gap) / n;\r\n        } else {\r\n            height = this._fixedBarHeight;\r\n        }\r\n\r\n        // vertically align label in center unless they override the value via property setter\r\n        if (!this._hasLabelOffsetY) {\r\n            this._labelOffsetY = height / 2;\r\n        }\r\n\r\n        const rect = rows.attr('transform', (d, i) => `translate(0,${(i + 1) * this._gap + i * height})`).select('rect')\r\n            .attr('height', height)\r\n            .attr('fill', this.getColor)\r\n            .on('click', d => this._onClick(d))\r\n            .classed('deselected', d => (this.hasFilter()) ? !this._isSelectedRow(d) : false)\r\n            .classed('selected', d => (this.hasFilter()) ? this._isSelectedRow(d) : false);\r\n\r\n        transition(rect, this.transitionDuration(), this.transitionDelay())\r\n            .attr('width', d => Math.abs(this._rootValue() - this._x(this.cappedValueAccessor(d))))\r\n            .attr('transform', d => this._translateX(d));\r\n\r\n        this._createTitles(rows);\r\n        this._updateLabels(rows);\r\n    }\r\n\r\n    _createTitles (rows) {\r\n        if (this.renderTitle()) {\r\n            rows.select('title').remove();\r\n            rows.append('title').text(this.title());\r\n        }\r\n    }\r\n\r\n    _createLabels (rowEnter) {\r\n        if (this.renderLabel()) {\r\n            rowEnter.append('text')\r\n                .on('click', d => this._onClick(d));\r\n        }\r\n        if (this.renderTitleLabel()) {\r\n            rowEnter.append('text')\r\n                .attr('class', this._titleRowCssClass)\r\n                .on('click', d => this._onClick(d));\r\n        }\r\n    }\r\n\r\n    _updateLabels (rows) {\r\n        if (this.renderLabel()) {\r\n            const lab = rows.select('text')\r\n                .attr('x', this._labelOffsetX)\r\n                .attr('y', this._labelOffsetY)\r\n                .attr('dy', this._dyOffset)\r\n                .on('click', d => this._onClick(d))\r\n                .attr('class', (d, i) => `${this._rowCssClass} _${i}`)\r\n                .text(d => this.label()(d));\r\n            transition(lab, this.transitionDuration(), this.transitionDelay())\r\n                .attr('transform', d => this._translateX(d));\r\n        }\r\n        if (this.renderTitleLabel()) {\r\n            const titlelab = rows.select(`.${this._titleRowCssClass}`)\r\n                .attr('x', this.effectiveWidth() - this._titleLabelOffsetX)\r\n                .attr('y', this._labelOffsetY)\r\n                .attr('dy', this._dyOffset)\r\n                .attr('text-anchor', 'end')\r\n                .on('click', d => this._onClick(d))\r\n                .attr('class', (d, i) => `${this._titleRowCssClass} _${i}`)\r\n                .text(d => this.title()(d));\r\n            transition(titlelab, this.transitionDuration(), this.transitionDelay())\r\n                .attr('transform', d => this._translateX(d));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Turn on/off Title label rendering (values) using SVG style of text-anchor 'end'.\r\n     * @param {Boolean} [renderTitleLabel=false]\r\n     * @returns {Boolean|RowChart}\r\n     */\r\n    renderTitleLabel (renderTitleLabel) {\r\n        if (!arguments.length) {\r\n            return this._renderTitleLabel;\r\n        }\r\n        this._renderTitleLabel = renderTitleLabel;\r\n        return this;\r\n    }\r\n\r\n    _onClick (d) {\r\n        this.onClick(d);\r\n    }\r\n\r\n    _translateX (d) {\r\n        const x = this._x(this.cappedValueAccessor(d)),\r\n            x0 = this._rootValue(),\r\n            s = x > x0 ? x0 : x;\r\n        return `translate(${s},0)`;\r\n    }\r\n\r\n    _doRedraw () {\r\n        this._drawChart();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or sets the x axis for the row chart instance.\r\n     * See the {@link https://github.com/d3/d3-axis/blob/master/README.md d3.axis}\r\n     * documention for more information.\r\n     * @param {d3.axis} [xAxis]\r\n     * @example\r\n     * // customize x axis tick format\r\n     * chart.xAxis().tickFormat(function (v) {return v + '%';});\r\n     * // customize x axis tick values\r\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\r\n     * // use a top-oriented axis. Note: position of the axis and grid lines will need to\r\n     * // be set manually, see https://dc-js.github.io/dc.js/examples/row-top-axis.html\r\n     * chart.xAxis(d3.axisTop())\r\n     * @returns {d3.axis|RowChart}\r\n     */\r\n    xAxis (xAxis) {\r\n        if (!arguments.length) {\r\n            return this._xAxis;\r\n        }\r\n        this._xAxis = xAxis;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the fixed bar height. Default is [false] which will auto-scale bars.\r\n     * For example, if you want to fix the height for a specific number of bars (useful in TopN charts)\r\n     * you could fix height as follows (where count = total number of bars in your TopN and gap is\r\n     * your vertical gap space).\r\n     * @example\r\n     * chart.fixedBarHeight( chartheight - (count + 1) * gap / count);\r\n     * @param {Boolean|Number} [fixedBarHeight=false]\r\n     * @returns {Boolean|Number|RowChart}\r\n     */\r\n    fixedBarHeight (fixedBarHeight) {\r\n        if (!arguments.length) {\r\n            return this._fixedBarHeight;\r\n        }\r\n        this._fixedBarHeight = fixedBarHeight;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the vertical gap space between rows on a particular row chart instance.\r\n     * @param {Number} [gap=5]\r\n     * @returns {Number|RowChart}\r\n     */\r\n    gap (gap) {\r\n        if (!arguments.length) {\r\n            return this._gap;\r\n        }\r\n        this._gap = gap;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the elasticity on x axis. If this attribute is set to true, then the x axis will rescale to auto-fit the\r\n     * data range when filtered.\r\n     * @param {Boolean} [elasticX]\r\n     * @returns {Boolean|RowChart}\r\n     */\r\n    elasticX (elasticX) {\r\n        if (!arguments.length) {\r\n            return this._elasticX;\r\n        }\r\n        this._elasticX = elasticX;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the x offset (horizontal space to the top left corner of a row) for labels on a particular row chart.\r\n     * @param {Number} [labelOffsetX=10]\r\n     * @returns {Number|RowChart}\r\n     */\r\n    labelOffsetX (labelOffsetX) {\r\n        if (!arguments.length) {\r\n            return this._labelOffsetX;\r\n        }\r\n        this._labelOffsetX = labelOffsetX;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the y offset (vertical space to the top left corner of a row) for labels on a particular row chart.\r\n     * @param {Number} [labelOffsety=15]\r\n     * @returns {Number|RowChart}\r\n     */\r\n    labelOffsetY (labelOffsety) {\r\n        if (!arguments.length) {\r\n            return this._labelOffsetY;\r\n        }\r\n        this._labelOffsetY = labelOffsety;\r\n        this._hasLabelOffsetY = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get of set the x offset (horizontal space between right edge of row and right edge or text.\r\n     * @param {Number} [titleLabelOffsetX=2]\r\n     * @returns {Number|RowChart}\r\n     */\r\n    titleLabelOffsetX (titleLabelOffsetX) {\r\n        if (!arguments.length) {\r\n            return this._titleLabelOffsetX;\r\n        }\r\n        this._titleLabelOffsetX = titleLabelOffsetX;\r\n        return this;\r\n    }\r\n\r\n    _isSelectedRow (d) {\r\n        return this.hasFilter(this.cappedKeyAccessor(d));\r\n    }\r\n}\r\n\r\nexport const rowChart = (parent, chartGroup) => new RowChart(parent, chartGroup);\r\n","import {symbol} from 'd3-shape';\r\nimport {event, select} from 'd3-selection';\r\nimport {brush} from 'd3-brush';\r\n\r\nimport {CoordinateGridMixin} from '../base/coordinate-grid-mixin';\r\nimport {optionalTransition, transition} from '../core/core';\r\nimport {filters} from '../core/filters';\r\nimport {constants} from '../core/constants';\r\nimport {events} from '../core/events';\r\n\r\n/**\r\n * A scatter plot chart\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.io/dc.js/examples/scatter.html Scatter Chart}\r\n * - {@link http://dc-js.github.io/dc.js/examples/multi-scatter.html Multi-Scatter Chart}\r\n * @mixes CoordinateGridMixin\r\n */\r\nexport class ScatterPlot extends CoordinateGridMixin {\r\n    /**\r\n     * Create a Scatter Plot.\r\n     * @example\r\n     * // create a scatter plot under #chart-container1 element using the default global chart group\r\n     * var chart1 = new ScatterPlot('#chart-container1');\r\n     * // create a scatter plot under #chart-container2 element using chart group A\r\n     * var chart2 = new ScatterPlot('#chart-container2', 'chartGroupA');\r\n     * // create a sub-chart under a composite parent chart\r\n     * var chart3 = new ScatterPlot(compositeChart);\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._symbol = symbol();\r\n\r\n        this._existenceAccessor = d => d.value;\r\n\r\n        const originalKeyAccessor = this.keyAccessor();\r\n        this.keyAccessor(d => originalKeyAccessor(d)[0]);\r\n        this.valueAccessor(d => originalKeyAccessor(d)[1]);\r\n        this.colorAccessor(() => this._groupName);\r\n\r\n        // this basically just counteracts the setting of its own key/value accessors\r\n        // see https://github.com/dc-js/dc.js/issues/702\r\n        this.title(d => `${this.keyAccessor()(d)},${this.valueAccessor()(d)}: ${this.existenceAccessor()(d)}`);\r\n\r\n        this._highlightedSize = 7;\r\n        this._symbolSize = 5;\r\n        this._excludedSize = 3;\r\n        this._excludedColor = null;\r\n        this._excludedOpacity = 1.0;\r\n        this._emptySize = 0;\r\n        this._emptyOpacity = 0;\r\n        this._nonemptyOpacity = 1;\r\n        this._emptyColor = null;\r\n        this._filtered = [];\r\n        this._canvas = null;\r\n        this._context = null;\r\n        this._useCanvas = false;\r\n\r\n\r\n        // Use a 2 dimensional brush\r\n        this.brush(brush());\r\n\r\n        this._symbol.size((d, i) => this._elementSize(d, i));\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    // Calculates element radius for canvas plot to be comparable to D3 area based symbol sizes\r\n    _canvasElementSize (d, isFiltered) {\r\n        if (!this._existenceAccessor(d)) {\r\n            return this._emptySize / Math.sqrt(Math.PI);\r\n        } else if (isFiltered) {\r\n            return this._symbolSize / Math.sqrt(Math.PI);\r\n        } else {\r\n            return this._excludedSize / Math.sqrt(Math.PI);\r\n        }\r\n    }\r\n\r\n    _elementSize (d, i) {\r\n        if (!this._existenceAccessor(d)) {\r\n            return Math.pow(this._emptySize, 2);\r\n        } else if (this._filtered[i]) {\r\n            return Math.pow(this._symbolSize, 2);\r\n        } else {\r\n            return Math.pow(this._excludedSize, 2);\r\n        }\r\n    }\r\n\r\n    _locator (d) {\r\n        return `translate(${this.x()(this.keyAccessor()(d))},${ \r\n            this.y()(this.valueAccessor()(d))})`;\r\n    }\r\n\r\n    filter (filter) {\r\n        if (!arguments.length) {\r\n            return super.filter();\r\n        }\r\n\r\n        return super.filter(filters.RangedTwoDimensionalFilter(filter));\r\n    }\r\n\r\n    /**\r\n     * Method that replaces original resetSvg and appropriately inserts canvas\r\n     * element along with svg element and sets their CSS properties appropriately\r\n     * so they are overlapped on top of each other.\r\n     * Remove the chart's SVGElements from the dom and recreate the container SVGElement.\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement SVGElement}\r\n     * @returns {SVGElement}\r\n     */\r\n    resetSvg () {\r\n        if (!this._useCanvas) {\r\n            return super.resetSvg();\r\n        } else {\r\n            super.resetSvg(); // Perform original svgReset inherited from baseMixin\r\n            this.select('canvas').remove(); // remove old canvas\r\n\r\n            const svgSel = this.svg();\r\n            const rootSel = this.root();\r\n\r\n            // Set root node to relative positioning and svg to absolute\r\n            rootSel.style('position', 'relative');\r\n            svgSel.style('position', 'relative');\r\n\r\n            // Check if SVG element already has any extra top/left CSS offsets\r\n            const svgLeft = isNaN(parseInt(svgSel.style('left'), 10)) ? 0 : parseInt(svgSel.style('left'), 10);\r\n            const svgTop = isNaN(parseInt(svgSel.style('top'), 10)) ? 0 : parseInt(svgSel.style('top'), 10);\r\n            const width = this.effectiveWidth();\r\n            const height = this.effectiveHeight();\r\n            const margins = this.margins(); // {top: 10, right: 130, bottom: 42, left: 42}\r\n\r\n            // Add the canvas element such that it perfectly overlaps the plot area of the scatter plot SVG\r\n            const devicePixelRatio = window.devicePixelRatio || 1;\r\n            this._canvas = this.root().append('canvas')\r\n                .attr('x', 0)\r\n                .attr('y', 0)\r\n                .attr('width', (width) * devicePixelRatio)\r\n                .attr('height', (height) * devicePixelRatio)\r\n                .style('width', `${width}px`)\r\n                .style('height', `${height}px`)\r\n                .style('position', 'absolute')\r\n                .style('top', `${margins.top + svgTop}px`)\r\n                .style('left', `${margins.left + svgLeft}px`)\r\n                .style('z-index', -1) // Place behind SVG\r\n                .style('pointer-events', 'none'); // Disable pointer events on canvas so SVG can capture brushing\r\n\r\n            // Define canvas context and set clipping path\r\n            this._context = this._canvas.node().getContext('2d');\r\n            this._context.scale(devicePixelRatio, devicePixelRatio);\r\n            this._context.rect(0, 0, width, height);\r\n            this._context.clip(); // Setup clipping path\r\n            this._context.imageSmoothingQuality = 'high';\r\n\r\n            return this.svg(); // Respect original return param for this.resetSvg;\r\n        }\r\n    }\r\n\r\n    _resizeCanvas () {\r\n        const width = this.effectiveWidth();\r\n        const height = this.effectiveHeight();\r\n\r\n        const devicePixelRatio = window.devicePixelRatio || 1;\r\n        this._canvas\r\n            .attr('width', (width) * devicePixelRatio)\r\n            .attr('height', (height) * devicePixelRatio)\r\n            .style('width', `${width}px`)\r\n            .style('height', `${height}px`);\r\n        this._context.scale(devicePixelRatio, devicePixelRatio);\r\n    }\r\n\r\n\r\n    /**\r\n     * Set or get whether to use canvas backend for plotting scatterPlot. Note that the\r\n     * canvas backend does not currently support\r\n     * {@link ScatterPlot#customSymbol customSymbol} or\r\n     * {@link ScatterPlot#symbol symbol} methods and is limited to always plotting\r\n     * with filled circles. Symbols are drawn with\r\n     * {@link ScatterPlot#symbolSize symbolSize} radius. By default, the SVG backend\r\n     * is used when `useCanvas` is set to `false`.\r\n     * @param {Boolean} [useCanvas=false]\r\n     * @return {Boolean|d3.selection}\r\n     */\r\n    useCanvas (useCanvas) {\r\n        if (!arguments.length) {\r\n            return this._useCanvas;\r\n        }\r\n        this._useCanvas = useCanvas;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get canvas element. You should usually only ever use the get method as\r\n     * dc.js will handle canvas element generation.  Provides valid canvas only when\r\n     * {@link ScatterPlot#useCanvas useCanvas} is set to `true`\r\n     * @param {CanvasElement|d3.selection} [canvasElement]\r\n     * @return {CanvasElement|d3.selection}\r\n     */\r\n    canvas (canvasElement) {\r\n        if (!arguments.length) {\r\n            return this._canvas;\r\n        }\r\n        this._canvas = canvasElement;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get canvas 2D context. Provides valid context only when\r\n     * {@link ScatterPlot#useCanvas useCanvas} is set to `true`\r\n     * @return {CanvasContext}\r\n     */\r\n    context () {\r\n        return this._context;\r\n    }\r\n\r\n    /*eslint complexity: [2,11] */\r\n    // Plots data on canvas element. If argument provided, assumes legend is\r\n    // currently being highlighted and modifies opacity/size of symbols accordingly\r\n    // @param {Object} [legendHighlightDatum] - Datum provided to legendHighlight method\r\n    _plotOnCanvas (legendHighlightDatum) {\r\n        this._resizeCanvas();\r\n        const context = this.context();\r\n        context.clearRect(0, 0, (context.canvas.width + 2) * 1, (context.canvas.height + 2) * 1);\r\n        const data = this.data();\r\n\r\n        // Draw the data on canvas\r\n        data.forEach((d, i) => {\r\n            const isFiltered = !this.filter() || this.filter().isFiltered([d.key[0], d.key[1]]);\r\n            // Calculate opacity for current data point\r\n            let cOpacity = 1;\r\n            if (!this._existenceAccessor(d)) {\r\n                cOpacity = this._emptyOpacity;\r\n            } else if (isFiltered) {\r\n                cOpacity = this._nonemptyOpacity;\r\n            } else {\r\n                cOpacity = this.excludedOpacity();\r\n            }\r\n            // Calculate color for current data point\r\n            let cColor = null;\r\n            if (this._emptyColor && !this._existenceAccessor(d)) {\r\n                cColor = this._emptyColor;\r\n            } else if (this.excludedColor() && !isFiltered) {\r\n                cColor = this.excludedColor();\r\n            } else {\r\n                cColor = this.getColor(d);\r\n            }\r\n            let cSize = this._canvasElementSize(d, isFiltered);\r\n\r\n            // Adjust params for data points if legend is highlighted\r\n            if (legendHighlightDatum) {\r\n                const isHighlighted = (cColor === legendHighlightDatum.color);\r\n                // Calculate opacity for current data point\r\n                const fadeOutOpacity = 0.1; // TODO: Make this programmatically setable\r\n                if (!isHighlighted) { // Fade out non-highlighted colors + highlighted colors outside filter\r\n                    cOpacity = fadeOutOpacity;\r\n                }\r\n                if (isHighlighted) { // Set size for highlighted color data points\r\n                    cSize = this._highlightedSize / Math.sqrt(Math.PI);\r\n                }\r\n            }\r\n\r\n            // Draw point on canvas\r\n            context.save();\r\n            context.globalAlpha = cOpacity;\r\n            context.beginPath();\r\n            context.arc(this.x()(this.keyAccessor()(d)), this.y()(this.valueAccessor()(d)), cSize, 0, 2 * Math.PI, true);\r\n            context.fillStyle = cColor;\r\n            context.fill();\r\n            // context.lineWidth = 0.5; // Commented out code to add stroke around scatter points if desired\r\n            // context.strokeStyle = '#333';\r\n            // context.stroke();\r\n            context.restore();\r\n        });\r\n    }\r\n\r\n    _plotOnSVG () {\r\n        let symbols = this.chartBodyG().selectAll('path.symbol')\r\n            .data(this.data());\r\n\r\n        transition(symbols.exit(), this.transitionDuration(), this.transitionDelay())\r\n            .attr('opacity', 0).remove();\r\n\r\n        symbols = symbols\r\n            .enter()\r\n            .append('path')\r\n            .attr('class', 'symbol')\r\n            .attr('opacity', 0)\r\n            .attr('fill', this.getColor)\r\n            .attr('transform', d => this._locator(d))\r\n            .merge(symbols);\r\n\r\n        symbols.call(s => this._renderTitles(s, this.data()));\r\n\r\n        symbols.each((d, i) => {\r\n            this._filtered[i] = !this.filter() || this.filter().isFiltered([this.keyAccessor()(d), this.valueAccessor()(d)]);\r\n        });\r\n\r\n        transition(symbols, this.transitionDuration(), this.transitionDelay())\r\n            .attr('opacity', (d, i) => {\r\n                if (!this._existenceAccessor(d)) {\r\n                    return this._emptyOpacity;\r\n                } else if (this._filtered[i]) {\r\n                    return this._nonemptyOpacity;\r\n                } else {\r\n                    return this.excludedOpacity();\r\n                }\r\n            })\r\n            .attr('fill', (d, i) => {\r\n                if (this._emptyColor && !this._existenceAccessor(d)) {\r\n                    return this._emptyColor;\r\n                } else if (this.excludedColor() && !this._filtered[i]) {\r\n                    return this.excludedColor();\r\n                } else {\r\n                    return this.getColor(d);\r\n                }\r\n            })\r\n            .attr('transform', d => this._locator(d))\r\n            .attr('d', this._symbol);\r\n    }\r\n\r\n    plotData () {\r\n        if (this._useCanvas) {\r\n            this._plotOnCanvas();\r\n        } else {\r\n            this._plotOnSVG();\r\n        }\r\n    }\r\n\r\n    _renderTitles (_symbol, _d) {\r\n        if (this.renderTitle()) {\r\n            _symbol.selectAll('title').remove();\r\n            _symbol.append('title').text(d => this.title()(d));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get or set the existence accessor.  If a point exists, it is drawn with\r\n     * {@link ScatterPlot#symbolSize symbolSize} radius and\r\n     * opacity 1; if it does not exist, it is drawn with\r\n     * {@link ScatterPlot#emptySize emptySize} radius and opacity 0. By default,\r\n     * the existence accessor checks if the reduced value is truthy.\r\n     * @see {@link ScatterPlot#symbolSize symbolSize}\r\n     * @see {@link ScatterPlot#emptySize emptySize}\r\n     * @example\r\n     * // default accessor\r\n     * chart.existenceAccessor(function (d) { return d.value; });\r\n     * @param {Function} [accessor]\r\n     * @returns {Function|ScatterPlot}\r\n     */\r\n    existenceAccessor (accessor) {\r\n        if (!arguments.length) {\r\n            return this._existenceAccessor;\r\n        }\r\n        this._existenceAccessor = accessor;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the symbol type used for each point. By default the symbol is a circle (d3.symbolCircle).\r\n     * Type can be a constant or an accessor.\r\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_type symbol.type}\r\n     * @example\r\n     * // Circle type\r\n     * chart.symbol(d3.symbolCircle);\r\n     * // Square type\r\n     * chart.symbol(d3.symbolSquare);\r\n     * @param {Function} [type=d3.symbolCircle]\r\n     * @returns {Function|ScatterPlot}\r\n     */\r\n    symbol (type) {\r\n        if (!arguments.length) {\r\n            return this._symbol.type();\r\n        }\r\n        this._symbol.type(type);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the symbol generator. By default `ScatterPlot` will use\r\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol d3.symbol()}\r\n     * to generate symbols. `ScatterPlot` will set the\r\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size symbol size accessor}\r\n     * on the symbol generator.\r\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol d3.symbol}\r\n     * @see {@link https://stackoverflow.com/questions/25332120/create-additional-d3-js-symbols Create additional D3.js symbols}\r\n     * @param {String|Function} [customSymbol=d3.symbol()]\r\n     * @returns {String|Function|ScatterPlot}\r\n     */\r\n    customSymbol (customSymbol) {\r\n        if (!arguments.length) {\r\n            return this._symbol;\r\n        }\r\n        this._symbol = customSymbol;\r\n        this._symbol.size((d, i) => this._elementSize(d, i));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get radius for symbols.\r\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\r\n     * @param {Number} [symbolSize=3]\r\n     * @returns {Number|ScatterPlot}\r\n     */\r\n    symbolSize (symbolSize) {\r\n        if (!arguments.length) {\r\n            return this._symbolSize;\r\n        }\r\n        this._symbolSize = symbolSize;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get radius for highlighted symbols.\r\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\r\n     * @param {Number} [highlightedSize=5]\r\n     * @returns {Number|ScatterPlot}\r\n     */\r\n    highlightedSize (highlightedSize) {\r\n        if (!arguments.length) {\r\n            return this._highlightedSize;\r\n        }\r\n        this._highlightedSize = highlightedSize;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get size for symbols excluded from this chart's filter. If null, no\r\n     * special size is applied for symbols based on their filter status.\r\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\r\n     * @param {Number} [excludedSize=null]\r\n     * @returns {Number|ScatterPlot}\r\n     */\r\n    excludedSize (excludedSize) {\r\n        if (!arguments.length) {\r\n            return this._excludedSize;\r\n        }\r\n        this._excludedSize = excludedSize;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get color for symbols excluded from this chart's filter. If null, no\r\n     * special color is applied for symbols based on their filter status.\r\n     * @param {Number} [excludedColor=null]\r\n     * @returns {Number|ScatterPlot}\r\n     */\r\n    excludedColor (excludedColor) {\r\n        if (!arguments.length) {\r\n            return this._excludedColor;\r\n        }\r\n        this._excludedColor = excludedColor;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get opacity for symbols excluded from this chart's filter.\r\n     * @param {Number} [excludedOpacity=1.0]\r\n     * @returns {Number|ScatterPlot}\r\n     */\r\n    excludedOpacity (excludedOpacity) {\r\n        if (!arguments.length) {\r\n            return this._excludedOpacity;\r\n        }\r\n        this._excludedOpacity = excludedOpacity;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get radius for symbols when the group is empty.\r\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\r\n     * @param {Number} [emptySize=0]\r\n     * @returns {Number|ScatterPlot}\r\n     */\r\n    emptySize (emptySize) {\r\n        if (!arguments.length) {\r\n            return this._emptySize;\r\n        }\r\n        this._emptySize = emptySize;\r\n        return this;\r\n    }\r\n\r\n    hiddenSize (emptySize) {\r\n        if (!arguments.length) {\r\n            return this.emptySize();\r\n        }\r\n        return this.emptySize(emptySize);\r\n    }\r\n\r\n    /**\r\n     * Set or get color for symbols when the group is empty. If null, just use the\r\n     * {@link ColorMixin#colors colorMixin.colors} color scale zero value.\r\n     * @param {String} [emptyColor=null]\r\n     * @return {String}\r\n     * @return {ScatterPlot}/\r\n     */\r\n    emptyColor (emptyColor) {\r\n        if (!arguments.length) {\r\n            return this._emptyColor;\r\n        }\r\n        this._emptyColor = emptyColor;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get opacity for symbols when the group is empty.\r\n     * @param {Number} [emptyOpacity=0]\r\n     * @return {Number}\r\n     * @return {ScatterPlot}\r\n     */\r\n    emptyOpacity (emptyOpacity) {\r\n        if (!arguments.length) {\r\n            return this._emptyOpacity;\r\n        }\r\n        this._emptyOpacity = emptyOpacity;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set or get opacity for symbols when the group is not empty.\r\n     * @param {Number} [nonemptyOpacity=1]\r\n     * @return {Number}\r\n     * @return {ScatterPlot}\r\n     */\r\n    nonemptyOpacity (nonemptyOpacity) {\r\n        if (!arguments.length) {\r\n            return this._emptyOpacity;\r\n        }\r\n        this._nonemptyOpacity = nonemptyOpacity;\r\n        return this;\r\n    }\r\n\r\n    legendables () {\r\n        return [{chart: this, name: this._groupName, color: this.getColor()}];\r\n    }\r\n\r\n    legendHighlight (d) {\r\n        if (this._useCanvas) {\r\n            this._plotOnCanvas(d); // Supply legend datum to plotOnCanvas\r\n        } else {\r\n            this._resizeSymbolsWhere(s => s.attr('fill') === d.color, this._highlightedSize);\r\n            this.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\r\n                return select(this).attr('fill') !== d.color;\r\n            }).classed('fadeout', true);\r\n        }\r\n    }\r\n\r\n    legendReset (d) {\r\n        if (this._useCanvas) {\r\n            this._plotOnCanvas(d); // Supply legend datum to plotOnCanvas\r\n        } else {\r\n            this._resizeSymbolsWhere(s => s.attr('fill') === d.color, this._symbolSize);\r\n            this.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\r\n                return select(this).attr('fill') !== d.color;\r\n            }).classed('fadeout', false);\r\n        }\r\n    }\r\n\r\n    _resizeSymbolsWhere (condition, size) {\r\n        const symbols = this.chartBodyG().selectAll('.chart-body path.symbol').filter(function () {\r\n            return condition(select(this));\r\n        });\r\n        const oldSize = this._symbol.size();\r\n        this._symbol.size(Math.pow(size, 2));\r\n        transition(symbols, this.transitionDuration(), this.transitionDelay()).attr('d', this._symbol);\r\n        this._symbol.size(oldSize);\r\n    }\r\n    createBrushHandlePaths () {\r\n        // no handle paths for poly-brushes\r\n    }\r\n\r\n    extendBrush (brushSelection) {\r\n        if (this.round()) {\r\n            brushSelection[0] = brushSelection[0].map(this.round());\r\n            brushSelection[1] = brushSelection[1].map(this.round());\r\n        }\r\n        return brushSelection;\r\n    }\r\n\r\n    brushIsEmpty (brushSelection) {\r\n        return !brushSelection || brushSelection[0][0] >= brushSelection[1][0] || brushSelection[0][1] >= brushSelection[1][1];\r\n    }\r\n\r\n    _brushing () {\r\n        // Avoids infinite recursion (mutual recursion between range and focus operations)\r\n        // Source Event will be null when brush.move is called programmatically (see below as well).\r\n        if (!event.sourceEvent) {\r\n            return;\r\n        }\r\n\r\n        // Ignore event if recursive event - i.e. not directly generated by user action (like mouse/touch etc.)\r\n        // In this case we are more worried about this handler causing brush move programmatically which will\r\n        // cause this handler to be invoked again with a new d3.event (and current event set as sourceEvent)\r\n        // This check avoids recursive calls\r\n        if (event.sourceEvent.type && ['start', 'brush', 'end'].indexOf(event.sourceEvent.type) !== -1) {\r\n            return;\r\n        }\r\n\r\n        let brushSelection = event.selection;\r\n\r\n        // Testing with pixels is more reliable\r\n        let brushIsEmpty = this.brushIsEmpty(brushSelection);\r\n\r\n        if (brushSelection) {\r\n            brushSelection = brushSelection.map(point => point.map((coord, i) => {\r\n                const scale = i === 0 ? this.x() : this.y();\r\n                return scale.invert(coord);\r\n            }));\r\n\r\n            brushSelection = this.extendBrush(brushSelection);\r\n\r\n            // The rounding process might have made brushSelection empty, so we need to recheck\r\n            brushIsEmpty = brushIsEmpty && this.brushIsEmpty(brushSelection);\r\n        }\r\n\r\n        this.redrawBrush(brushSelection, false);\r\n\r\n        const ranged2DFilter = brushIsEmpty ? null : filters.RangedTwoDimensionalFilter(brushSelection);\r\n\r\n        events.trigger(() => {\r\n            this.replaceFilter(ranged2DFilter);\r\n            this.redrawGroup();\r\n        }, constants.EVENT_DELAY);\r\n    }\r\n\r\n    redrawBrush (brushSelection, doTransition) {\r\n        // override default x axis brush from parent chart\r\n        this._brush = this.brush();\r\n        this._gBrush = this.gBrush();\r\n\r\n        if (this.brushOn() && this._gBrush) {\r\n            if (this.resizing()) {\r\n                this.setBrushExtents(doTransition);\r\n            }\r\n\r\n            if (!brushSelection) {\r\n                this._gBrush\r\n                    .call(this._brush.move, brushSelection);\r\n\r\n            } else {\r\n                brushSelection = brushSelection.map(point => point.map((coord, i) => {\r\n                    const scale = i === 0 ? this.x() : this.y();\r\n                    return scale(coord);\r\n                }));\r\n\r\n                const gBrush =\r\n                    optionalTransition(doTransition, this.transitionDuration(), this.transitionDelay())(this._gBrush);\r\n\r\n                gBrush\r\n                    .call(this._brush.move, brushSelection);\r\n\r\n            }\r\n        }\r\n\r\n        this.fadeDeselectedArea(brushSelection);\r\n    }\r\n\r\n    setBrushY (gBrush) {\r\n        gBrush.call(this.brush().y(this.y()));\r\n    }\r\n}\r\n\r\nexport const scatterPlot = (parent, chartGroup) => new ScatterPlot(parent, chartGroup);\r\n","import {event} from 'd3-selection';\r\n\r\nimport {events} from '../core/events';\r\nimport {BaseMixin} from '../base/base-mixin';\r\nimport {logger} from '../core/logger';\r\n\r\nconst SELECT_CSS_CLASS = 'dc-select-menu';\r\nconst OPTION_CSS_CLASS = 'dc-select-option';\r\n\r\n/**\r\n * The select menu is a simple widget designed to filter a dimension by selecting an option from\r\n * an HTML `<select/>` menu. The menu can be optionally turned into a multiselect.\r\n * @mixes BaseMixin\r\n */\r\nexport class SelectMenu extends BaseMixin {\r\n    /**\r\n     * Create a Select Menu.\r\n     * @example\r\n     * // create a select menu under #select-container using the default global chart group\r\n     * var select = new SelectMenu('#select-container')\r\n     *                .dimension(states)\r\n     *                .group(stateGroup);\r\n     * // the option text can be set via the title() function\r\n     * // by default the option text is '`key`: `value`'\r\n     * select.title(function (d){\r\n     *     return 'STATE: ' + d.key;\r\n     * })\r\n     * @param {String|node|d3.selection|CompositeChart} parent - Any valid\r\n     * [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this widget should be placed in.\r\n     * Interaction with the widget will only trigger events and redraws within its group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._select = undefined;\r\n        this._promptText = 'Select all';\r\n        this._multiple = false;\r\n        this._promptValue = null;\r\n        this._numberVisible = null;\r\n\r\n        this.data(group => group.all().filter(this._filterDisplayed));\r\n\r\n        this._filterDisplayed = d => this.valueAccessor()(d) > 0;\r\n\r\n        this._order = (a, b) => {\r\n            if (this.keyAccessor()(a) > this.keyAccessor()(b)) {\r\n                return 1;\r\n            }\r\n            if (this.keyAccessor()(a) < this.keyAccessor()(b)) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        };\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    _doRender () {\r\n        this.select('select').remove();\r\n        this._select = this.root().append('select')\r\n            .classed(SELECT_CSS_CLASS, true);\r\n        this._select.append('option').text(this._promptText).attr('value', '');\r\n\r\n        this._doRedraw();\r\n        return this;\r\n    }\r\n\r\n    _doRedraw () {\r\n        this._setAttributes();\r\n        this._renderOptions();\r\n        // select the option(s) corresponding to current filter(s)\r\n        if (this.hasFilter() && this._multiple) {\r\n            this._select.selectAll('option')\r\n                .property('selected', d => typeof d !== 'undefined' && this.filters().indexOf(String(this.keyAccessor()(d))) >= 0);\r\n        } else if (this.hasFilter()) {\r\n            this._select.property('value', this.filter());\r\n        } else {\r\n            this._select.property('value', '');\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _renderOptions () {\r\n        const options = this._select.selectAll(`option.${OPTION_CSS_CLASS}`)\r\n            .data(this.data(), d => this.keyAccessor()(d));\r\n\r\n        options.exit().remove();\r\n\r\n        options.enter()\r\n            .append('option')\r\n            .classed(OPTION_CSS_CLASS, true)\r\n            .attr('value', d => this.keyAccessor()(d))\r\n            .merge(options)\r\n            .text(this.title());\r\n\r\n        this._select.selectAll(`option.${OPTION_CSS_CLASS}`).sort(this._order);\r\n\r\n        this._select.on('change', (d, i) => this._onChange(d, i));\r\n    }\r\n\r\n    _onChange (_d, i) {\r\n        let values;\r\n        const target = event.target;\r\n        if (target.selectedOptions) {\r\n            const selectedOptions = Array.prototype.slice.call(target.selectedOptions);\r\n            values = selectedOptions.map(d => d.value);\r\n        } else { // IE and other browsers do not support selectedOptions\r\n            // adapted from this polyfill: https://gist.github.com/brettz9/4212217\r\n            const options = [].slice.call(event.target.options);\r\n            values = options.filter(option => option.selected).map(option => option.value);\r\n        }\r\n        // console.log(values);\r\n        // check if only prompt option is selected\r\n        if (values.length === 1 && values[0] === '') {\r\n            values = this._promptValue || null;\r\n        } else if (!this._multiple && values.length === 1) {\r\n            values = values[0];\r\n        }\r\n        this.onChange(values);\r\n    }\r\n\r\n    onChange (val) {\r\n        if (val && this._multiple) {\r\n            this.replaceFilter([val]);\r\n        } else if (val) {\r\n            this.replaceFilter(val);\r\n        } else {\r\n            this.filterAll();\r\n        }\r\n        events.trigger(() => {\r\n            this.redrawGroup();\r\n        });\r\n    }\r\n\r\n    _setAttributes () {\r\n        if (this._multiple) {\r\n            this._select.attr('multiple', true);\r\n        } else {\r\n            this._select.attr('multiple', null);\r\n        }\r\n        if (this._numberVisible !== null) {\r\n            this._select.attr('size', this._numberVisible);\r\n        } else {\r\n            this._select.attr('size', null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get or set the function that controls the ordering of option tags in the\r\n     * select menu. By default options are ordered by the group key in ascending\r\n     * order.\r\n     * @param {Function} [order]\r\n     * @returns {Function|SelectMenu}\r\n     * @example\r\n     * // order by the group's value\r\n     * chart.order(function (a,b) {\r\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\r\n     * });\r\n     */\r\n    order (order) {\r\n        if (!arguments.length) {\r\n            return this._order;\r\n        }\r\n        this._order = order;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the text displayed in the options used to prompt selection.\r\n     * @param {String} [promptText='Select all']\r\n     * @returns {String|SelectMenu}\r\n     * @example\r\n     * chart.promptText('All states');\r\n     */\r\n    promptText (promptText) {\r\n        if (!arguments.length) {\r\n            return this._promptText;\r\n        }\r\n        this._promptText = promptText;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the function that filters option tags prior to display. By default options\r\n     * with a value of < 1 are not displayed.\r\n     * @param {function} [filterDisplayed]\r\n     * @returns {Function|SelectMenu}\r\n     * @example\r\n     * // display all options override the `filterDisplayed` function:\r\n     * chart.filterDisplayed(function () {\r\n     *     return true;\r\n     * });\r\n     */\r\n    filterDisplayed (filterDisplayed) {\r\n        if (!arguments.length) {\r\n            return this._filterDisplayed;\r\n        }\r\n        this._filterDisplayed = filterDisplayed;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Controls the type of select menu. Setting it to true converts the underlying\r\n     * HTML tag into a multiple select.\r\n     * @param {boolean} [multiple=false]\r\n     * @returns {boolean|SelectMenu}\r\n     * @example\r\n     * chart.multiple(true);\r\n     */\r\n    multiple (multiple) {\r\n        if (!arguments.length) {\r\n            return this._multiple;\r\n        }\r\n        this._multiple = multiple;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Controls the default value to be used for\r\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\r\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\r\n     * just the prompt is selected.\r\n     * @param {?*} [promptValue=null]\r\n     * @returns {*|SelectMenu}\r\n     */\r\n    promptValue (promptValue) {\r\n        if (!arguments.length) {\r\n            return this._promptValue;\r\n        }\r\n        this._promptValue = promptValue;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Controls the number of items to show in the select menu, when `.multiple()` is true. This\r\n     * controls the [`size` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Attributes) of\r\n     * the `select` element. If `null` (the default), uses the browser's default height.\r\n     * @param {?number} [numberVisible=null]\r\n     * @returns {number|SelectMenu}\r\n     * @example\r\n     * chart.numberVisible(10);\r\n     */\r\n    numberVisible (numberVisible) {\r\n        if (!arguments.length) {\r\n            return this._numberVisible;\r\n        }\r\n        this._numberVisible = numberVisible;\r\n\r\n        return this;\r\n    }\r\n\r\n    size (numberVisible) {\r\n        logger.warnOnce('selectMenu.size is ambiguous - use selectMenu.numberVisible instead');\r\n        if (!arguments.length) {\r\n            return this.numberVisible();\r\n        }\r\n        return this.numberVisible(numberVisible);\r\n    }\r\n}\r\n\r\nexport const selectMenu = (parent, chartGroup) => new SelectMenu(parent, chartGroup);\r\n","import {ascending} from 'd3-array';\r\nimport {nest} from 'd3-collection';\r\n\r\nimport {CompositeChart} from './composite-chart';\r\nimport {lineChart} from './line-chart';\r\nimport {utils} from '../core/utils';\r\n\r\n/**\r\n * A series chart is a chart that shows multiple series of data overlaid on one chart, where the\r\n * series is specified in the data. It is a specialization of Composite Chart and inherits all\r\n * composite features other than recomposing the chart.\r\n *\r\n * Examples:\r\n * - {@link http://dc-js.github.io/dc.js/examples/series.html Series Chart}\r\n * @mixes CompositeChart\r\n */\r\nexport class SeriesChart extends CompositeChart {\r\n    /**\r\n     * Create a Series Chart.\r\n     * @example\r\n     * // create a series chart under #chart-container1 element using the default global chart group\r\n     * var seriesChart1 = new SeriesChart(\"#chart-container1\");\r\n     * // create a series chart under #chart-container2 element using chart group A\r\n     * var seriesChart2 = new SeriesChart(\"#chart-container2\", \"chartGroupA\");\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super(parent, chartGroup);\r\n\r\n        this._keySort = (a, b) => ascending(this.keyAccessor()(a), this.keyAccessor()(b));\r\n\r\n        this._charts = {};\r\n        this._chartFunction = lineChart;\r\n        this._chartGroup = chartGroup;\r\n        this._seriesAccessor = undefined;\r\n        this._seriesSort = ascending;\r\n        this._valueSort = this._keySort;\r\n\r\n        this._mandatoryAttributes().push('seriesAccessor', 'chart');\r\n        this.shareColors(true);\r\n    }\r\n\r\n    _compose (subChartArray) {\r\n        super.compose(subChartArray);\r\n    }\r\n\r\n    compose (subChartArray) {\r\n        throw new Error('Not supported for this chart type');\r\n    }\r\n\r\n    _preprocessData () {\r\n        const keep = [];\r\n        let childrenChanged;\r\n        const nester = nest().key(this._seriesAccessor);\r\n        if (this._seriesSort) {\r\n            nester.sortKeys(this._seriesSort);\r\n        }\r\n        if (this._valueSort) {\r\n            nester.sortValues(this._valueSort);\r\n        }\r\n        const nesting = nester.entries(this.data());\r\n        const children =\r\n            nesting.map((sub, i) => {\r\n                const subChart = this._charts[sub.key] || this._chartFunction(this, this._chartGroup , sub.key, i);\r\n                if (!this._charts[sub.key]) {\r\n                    childrenChanged = true;\r\n                }\r\n                this._charts[sub.key] = subChart;\r\n                keep.push(sub.key);\r\n                return subChart\r\n                    .dimension(this.dimension())\r\n                    .group({\r\n                        all: typeof sub.values === 'function' ? sub.values : utils.constant(sub.values)\r\n                    }, sub.key)\r\n                    .keyAccessor(this.keyAccessor())\r\n                    .valueAccessor(this.valueAccessor())\r\n                    .brushOn(false);\r\n            });\r\n        // this works around the fact compositeChart doesn't really\r\n        // have a removal interface\r\n        Object.keys(this._charts)\r\n            .filter(c => keep.indexOf(c) === -1)\r\n            .forEach(c => {\r\n                this._clearChart(c);\r\n                childrenChanged = true;\r\n            });\r\n        this._compose(children);\r\n        if (childrenChanged && this.legend()) {\r\n            this.legend().render();\r\n        }\r\n    }\r\n\r\n    _clearChart (c) {\r\n        if (this._charts[c].g()) {\r\n            this._charts[c].g().remove();\r\n        }\r\n        delete this._charts[c];\r\n    }\r\n\r\n    _resetChildren () {\r\n        Object.keys(this._charts).map(this._clearChart);\r\n        this._charts = {};\r\n    }\r\n\r\n    /**\r\n     * Get or set the chart function, which generates the child charts.\r\n     * @example\r\n     * // put curve on the line charts used for the series\r\n     * chart.chart(function(c) { return new LineChart(c).curve(d3.curveBasis); })\r\n     * // do a scatter series chart\r\n     * chart.chart(anchor => new ScatterPlot(anchor))\r\n     * @param {Function} [chartFunction= (anchor) =>  new LineChart(anchor)]\r\n     * @returns {Function|SeriesChart}\r\n     */\r\n    chart (chartFunction) {\r\n        if (!arguments.length) {\r\n            return this._chartFunction;\r\n        }\r\n        this._chartFunction = chartFunction;\r\n        this._resetChildren();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * **mandatory**\r\n     *\r\n     * Get or set accessor function for the displayed series. Given a datum, this function\r\n     * should return the series that datum belongs to.\r\n     * @example\r\n     * // simple series accessor\r\n     * chart.seriesAccessor(function(d) { return \"Expt: \" + d.key[0]; })\r\n     * @param {Function} [accessor]\r\n     * @returns {Function|SeriesChart}\r\n     */\r\n    seriesAccessor (accessor) {\r\n        if (!arguments.length) {\r\n            return this._seriesAccessor;\r\n        }\r\n        this._seriesAccessor = accessor;\r\n        this._resetChildren();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set a function to sort the list of series by, given series values.\r\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\r\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\r\n     * @example\r\n     * chart.seriesSort(d3.descending);\r\n     * @param {Function} [sortFunction=d3.ascending]\r\n     * @returns {Function|SeriesChart}\r\n     */\r\n    seriesSort (sortFunction) {\r\n        if (!arguments.length) {\r\n            return this._seriesSort;\r\n        }\r\n        this._seriesSort = sortFunction;\r\n        this._resetChildren();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set a function to sort each series values by. By default this is the key accessor which,\r\n     * for example, will ensure a lineChart series connects its points in increasing key/x order,\r\n     * rather than haphazardly.\r\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\r\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\r\n     * @example\r\n     * // Default value sort\r\n     * _chart.valueSort(function keySort (a, b) {\r\n     *     return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\r\n     * });\r\n     * @param {Function} [sortFunction]\r\n     * @returns {Function|SeriesChart}\r\n     */\r\n    valueSort (sortFunction) {\r\n        if (!arguments.length) {\r\n            return this._valueSort;\r\n        }\r\n        this._valueSort = sortFunction;\r\n        this._resetChildren();\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport const seriesChart = (parent, chartGroup) => new SeriesChart(parent, chartGroup);\r\n","import {hierarchy, partition} from 'd3-hierarchy';\r\nimport {ascending, min, sum} from 'd3-array';\r\nimport {arc} from 'd3-shape';\r\nimport {select} from 'd3-selection';\r\nimport {interpolate} from 'd3-interpolate';\r\n\r\nimport {transition} from '../core/core';\r\nimport {filters} from '../core/filters';\r\nimport {utils, pluck} from '../core/utils';\r\nimport {events} from '../core/events';\r\nimport {ColorMixin} from '../base/color-mixin';\r\nimport {BaseMixin} from '../base/base-mixin';\r\nimport {constants} from '../core/constants';\r\nimport {BadArgumentException} from '../core/bad-argument-exception';\r\n\r\nconst DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\r\n\r\n/**\r\n * The sunburst chart implementation is usually used to visualize a small tree distribution.  The sunburst\r\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\r\n * slice relative to the sum of all values. Slices are ordered by {@link BaseMixin#ordering ordering} which defaults to sorting\r\n * by key.\r\n *\r\n * The keys used in the sunburst chart should be arrays, representing paths in the tree.\r\n *\r\n * When filtering, the sunburst chart creates instances of {@link Filters.HierarchyFilter HierarchyFilter}.\r\n *\r\n * @mixes CapMixin\r\n * @mixes ColorMixin\r\n * @mixes BaseMixin\r\n */\r\nexport class SunburstChart extends ColorMixin(BaseMixin) {\r\n    /**\r\n     * Create a Sunburst Chart\r\n     * @example\r\n     * // create a sunburst chart under #chart-container1 element using the default global chart group\r\n     * var chart1 = new SunburstChart('#chart-container1');\r\n     * // create a sunburst chart under #chart-container2 element using chart group A\r\n     * var chart2 = new SunburstChart('#chart-container2', 'chartGroupA');\r\n     *\r\n     * @param {String|node|d3.selection} parent - Any valid\r\n     * {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#selecting-elements d3 single selector} specifying\r\n     * a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._sliceCssClass = 'pie-slice';\r\n        this._emptyCssClass = 'empty-chart';\r\n        this._emptyTitle = 'empty';\r\n\r\n        this._radius = undefined;\r\n        this._givenRadius = undefined; // given radius, if any\r\n        this._innerRadius = 0;\r\n        this._ringSizes = null;\r\n\r\n        this._g = undefined;\r\n        this._cx = undefined;\r\n        this._cy = undefined;\r\n        this._minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;\r\n        this._externalLabelRadius = undefined;\r\n\r\n        this.colorAccessor(d => this.keyAccessor()(d));\r\n\r\n        // override cap mixin\r\n        this.ordering(pluck('key'));\r\n\r\n        this.title(d => `${this.keyAccessor()(d)}: ${this._extendedValueAccessor(d)}`);\r\n\r\n        this.label(d => this.keyAccessor()(d));\r\n        this.renderLabel(true);\r\n\r\n        this.transitionDuration(350);\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    // Handle cases if value corresponds to generated parent nodes\r\n    _extendedValueAccessor (d) {\r\n        if (d.path) {\r\n            return d.value;\r\n        }\r\n        return this.valueAccessor()(d);\r\n    }\r\n\r\n    _scaleRadius (ringIndex, y) {\r\n        if (ringIndex === 0) {\r\n            return this._innerRadius;\r\n        } else {\r\n            const customRelativeRadius = sum(this.ringSizes().relativeRingSizes.slice(0, ringIndex));\r\n            const scaleFactor = (ringIndex * (1 / this.ringSizes().relativeRingSizes.length)) /\r\n                  customRelativeRadius;\r\n            const standardRadius = (y - this.ringSizes().rootOffset) /\r\n                  (1 - this.ringSizes().rootOffset) * (this._radius - this._innerRadius);\r\n            return this._innerRadius + standardRadius / scaleFactor;\r\n        }\r\n    }\r\n\r\n    _doRender () {\r\n        this.resetSvg();\r\n\r\n        this._g = this.svg()\r\n            .append('g')\r\n            .attr('transform', `translate(${this.cx()},${this.cy()})`);\r\n\r\n        this._drawChart();\r\n\r\n        return this;\r\n    }\r\n\r\n    _drawChart () {\r\n        // set radius from chart size if none given, or if given radius is too large\r\n        const maxRadius = min([this.width(), this.height()]) / 2;\r\n        this._radius = this._givenRadius && this._givenRadius < maxRadius ? this._givenRadius : maxRadius;\r\n\r\n        const arcs = this._buildArcs();\r\n\r\n        let partitionedNodes, cdata;\r\n        // if we have data...\r\n        if (sum(this.data(), this.valueAccessor())) {\r\n            cdata = utils.toHierarchy(this.data(), this.valueAccessor());\r\n            partitionedNodes = this._partitionNodes(cdata);\r\n            // First one is the root, which is not needed\r\n            partitionedNodes.nodes.shift();\r\n            this._g.classed(this._emptyCssClass, false);\r\n        } else {\r\n            // otherwise we'd be getting NaNs, so override\r\n            // note: abuse others for its ignoring the value accessor\r\n            cdata = utils.toHierarchy([], d => d.value);\r\n            partitionedNodes = this._partitionNodes(cdata);\r\n            this._g.classed(this._emptyCssClass, true);\r\n        }\r\n        this.ringSizes().rootOffset = partitionedNodes.rootOffset;\r\n        this.ringSizes().relativeRingSizes = partitionedNodes.relativeRingSizes;\r\n\r\n        if (this._g) {\r\n            const slices = this._g.selectAll(`g.${this._sliceCssClass}`)\r\n                .data(partitionedNodes.nodes);\r\n            this._createElements(slices, arcs, partitionedNodes.nodes);\r\n\r\n            this._updateElements(partitionedNodes.nodes, arcs);\r\n\r\n            this._removeElements(slices);\r\n\r\n            this._highlightFilter();\r\n\r\n            transition(this._g, this.transitionDuration(), this.transitionDelay())\r\n                .attr('transform', `translate(${this.cx()},${this.cy()})`);\r\n        }\r\n    }\r\n\r\n    _createElements (slices, arcs, sunburstData) {\r\n        const slicesEnter = this._createSliceNodes(slices);\r\n\r\n        this._createSlicePath(slicesEnter, arcs);\r\n        this._createTitles(slicesEnter);\r\n        this._createLabels(sunburstData, arcs);\r\n    }\r\n\r\n    _createSliceNodes (slices) {\r\n        return slices\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', (d, i) => `${this._sliceCssClass\r\n            } _${i} ${\r\n                this._sliceCssClass}-level-${d.depth}`);\r\n    }\r\n\r\n    _createSlicePath (slicesEnter, arcs) {\r\n        const slicePath = slicesEnter.append('path')\r\n            .attr('fill', (d, i) => this._fill(d, i))\r\n            .on('click', (d, i) => this.onClick(d, i))\r\n            .attr('d', d => this._safeArc(arcs, d));\r\n\r\n        const tranNodes = transition(slicePath, this.transitionDuration());\r\n        if (tranNodes.attrTween) {\r\n            const chart = this;\r\n            tranNodes.attrTween('d', function (d) {\r\n                return chart._tweenSlice(d, this);\r\n            });\r\n        }\r\n    }\r\n\r\n    _createTitles (slicesEnter) {\r\n        if (this.renderTitle()) {\r\n            slicesEnter.append('title').text(d => this.title()(d));\r\n        }\r\n    }\r\n\r\n    _positionLabels (labelsEnter, arcs) {\r\n        transition(labelsEnter, this.transitionDuration())\r\n            .attr('transform', d => this._labelPosition(d, arcs))\r\n            .attr('text-anchor', 'middle')\r\n            .text(d => {\r\n                // position label...\r\n                if (this._sliceHasNoData(d) || this._sliceTooSmall(d)) {\r\n                    return '';\r\n                }\r\n                return this.label()(d);\r\n            });\r\n    }\r\n\r\n    _createLabels (sunburstData, arcs) {\r\n        if (this.renderLabel()) {\r\n            const labels = this._g.selectAll(`text.${this._sliceCssClass}`)\r\n                .data(sunburstData);\r\n\r\n            labels.exit().remove();\r\n\r\n            const labelsEnter = labels\r\n                .enter()\r\n                .append('text')\r\n                .attr('class', (d, i) => {\r\n                    let classes = `${this._sliceCssClass} _${i}`;\r\n                    if (this._externalLabelRadius) {\r\n                        classes += ' external';\r\n                    }\r\n                    return classes;\r\n                })\r\n                .on('click', (d, i) => this.onClick(d, i));\r\n            this._positionLabels(labelsEnter, arcs);\r\n        }\r\n    }\r\n\r\n    _updateElements (sunburstData, arcs) {\r\n        this._updateSlicePaths(sunburstData, arcs);\r\n        this._updateLabels(sunburstData, arcs);\r\n        this._updateTitles(sunburstData);\r\n    }\r\n\r\n    _updateSlicePaths (sunburstData, arcs) {\r\n        const slicePaths = this._g.selectAll(`g.${this._sliceCssClass}`)\r\n            .data(sunburstData)\r\n            .select('path')\r\n            .attr('d', (d, i) => this._safeArc(arcs, d));\r\n        const tranNodes = transition(slicePaths, this.transitionDuration());\r\n        if (tranNodes.attrTween) {\r\n            const chart = this;\r\n            tranNodes.attrTween('d', function (d) {\r\n                return chart._tweenSlice(d, this);\r\n            });\r\n        }\r\n        tranNodes.attr('fill', (d, i) => this._fill(d, i));\r\n    }\r\n\r\n    _updateLabels (sunburstData, arcs) {\r\n        if (this.renderLabel()) {\r\n            const labels = this._g.selectAll(`text.${this._sliceCssClass}`)\r\n                .data(sunburstData);\r\n            this._positionLabels(labels, arcs);\r\n        }\r\n    }\r\n\r\n    _updateTitles (sunburstData) {\r\n        if (this.renderTitle()) {\r\n            this._g.selectAll(`g.${this._sliceCssClass}`)\r\n                .data(sunburstData)\r\n                .select('title')\r\n                .text(d => this.title()(d));\r\n        }\r\n    }\r\n\r\n    _removeElements (slices) {\r\n        slices.exit().remove();\r\n    }\r\n\r\n    _highlightFilter () {\r\n        const chart = this;\r\n        if (chart.hasFilter()) {\r\n            chart.selectAll(`g.${chart._sliceCssClass}`).each(function (d) {\r\n                if (chart._isSelectedSlice(d)) {\r\n                    chart.highlightSelected(this);\r\n                } else {\r\n                    chart.fadeDeselected(this);\r\n                }\r\n            });\r\n        } else {\r\n            chart.selectAll(`g.${chart._sliceCssClass}`).each(function (d) {\r\n                chart.resetHighlight(this);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get or set the inner radius of the sunburst chart. If the inner radius is greater than 0px then the\r\n     * sunburst chart will be rendered as a doughnut chart. Default inner radius is 0px.\r\n     * @param {Number} [innerRadius=0]\r\n     * @returns {Number|SunburstChart}\r\n     */\r\n    innerRadius (innerRadius) {\r\n        if (!arguments.length) {\r\n            return this._innerRadius;\r\n        }\r\n        this._innerRadius = innerRadius;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\r\n     * chart width and height.\r\n     * @param {Number} [radius]\r\n     * @returns {Number|SunburstChart}\r\n     */\r\n    radius (radius) {\r\n        if (!arguments.length) {\r\n            return this._givenRadius;\r\n        }\r\n        this._givenRadius = radius;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set center x coordinate position. Default is center of svg.\r\n     * @param {Number} [cx]\r\n     * @returns {Number|SunburstChart}\r\n     */\r\n    cx (cx) {\r\n        if (!arguments.length) {\r\n            return (this._cx || this.width() / 2);\r\n        }\r\n        this._cx = cx;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set center y coordinate position. Default is center of svg.\r\n     * @param {Number} [cy]\r\n     * @returns {Number|SunburstChart}\r\n     */\r\n    cy (cy) {\r\n        if (!arguments.length) {\r\n            return (this._cy || this.height() / 2);\r\n        }\r\n        this._cy = cy;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\r\n     * display a slice label.\r\n     * @param {Number} [minAngleForLabel=0.5]\r\n     * @returns {Number|SunburstChart}\r\n     */\r\n    minAngleForLabel (minAngleForLabel) {\r\n        if (!arguments.length) {\r\n            return this._minAngleForLabel;\r\n        }\r\n        this._minAngleForLabel = minAngleForLabel;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Title to use for the only slice when there is no data.\r\n     * @param {String} [title]\r\n     * @returns {String|SunburstChart}\r\n     */\r\n    emptyTitle (title) {\r\n        if (arguments.length === 0) {\r\n            return this._emptyTitle;\r\n        }\r\n        this._emptyTitle = title;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Position slice labels offset from the outer edge of the chart.\r\n     *\r\n     * The argument specifies the extra radius to be added for slice labels.\r\n     * @param {Number} [externalLabelRadius]\r\n     * @returns {Number|SunburstChart}\r\n     */\r\n    externalLabels (externalLabelRadius) {\r\n        if (arguments.length === 0) {\r\n            return this._externalLabelRadius;\r\n        } else if (externalLabelRadius) {\r\n            this._externalLabelRadius = externalLabelRadius;\r\n        } else {\r\n            this._externalLabelRadius = undefined;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Constructs the default RingSizes parameter for {@link SunburstChart#ringSizes ringSizes()},\r\n     * which makes the rings narrower as they get farther away from the center.\r\n     *\r\n     * Can be used as a parameter to ringSizes() to reset the default behavior, or modified for custom ring sizes.\r\n     *\r\n     * @example\r\n     *   var chart = new dc.SunburstChart(...);\r\n     *   chart.ringSizes(chart.defaultRingSizes())\r\n     * @returns {RingSizes}\r\n     */\r\n    defaultRingSizes () {\r\n        return {\r\n            partitionDy: () => this._radius * this._radius,\r\n            scaleInnerRadius: d => d.data.path && d.data.path.length === 1 ?\r\n                this._innerRadius :\r\n                Math.sqrt(d.y0),\r\n            scaleOuterRadius: d => Math.sqrt(d.y1),\r\n            relativeRingSizesFunction: () => []\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Constructs a RingSizes parameter for {@link SunburstChart#ringSizes ringSizes()}\r\n     * that will make the chart rings equally wide.\r\n     *\r\n     * @example\r\n     *   var chart = new dc.SunburstChart(...);\r\n     *   chart.ringSizes(chart.equalRingSizes())\r\n     * @returns {RingSizes}\r\n     */\r\n    equalRingSizes () {\r\n        return this.relativeRingSizes(\r\n            ringCount => {\r\n                const result = [];\r\n                for (let i = 0; i < ringCount; i++) {\r\n                    result.push(1 / ringCount);\r\n                }\r\n                return result;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Constructs a RingSizes parameter for {@link SunburstChart#ringSizes ringSizes()} using the given function\r\n     * to determine each rings width.\r\n     *\r\n     * * The function must return an array containing portion values for each ring/level of the chart.\r\n     * * The length of the array must match the number of rings of the chart at runtime, which is provided as the only\r\n     *   argument.\r\n     * * The sum of all portions from the array must be 1 (100%).\r\n     *\r\n     * @example\r\n     * // specific relative portions (the number of rings (3) is known in this case)\r\n     * chart.ringSizes(chart.relativeRingSizes(function (ringCount) {\r\n     *     return [.1, .3, .6];\r\n     * });\r\n     * @param {Function} [relativeRingSizesFunction]\r\n     * @returns {RingSizes}\r\n     */\r\n    relativeRingSizes (relativeRingSizesFunction) {\r\n        function assertPortionsArray (relativeSizes, numberOfRings) {\r\n            if (!Array.isArray(relativeSizes)) {\r\n                throw new BadArgumentException('relativeRingSizes function must return an array');\r\n            }\r\n\r\n            const portionsSum = sum(relativeSizes);\r\n            if (Math.abs(portionsSum - 1) > constants.NEGLIGIBLE_NUMBER) {\r\n                throw new BadArgumentException(\r\n                    `relativeRingSizes : portions must add up to 1, but sum was ${portionsSum}`);\r\n            }\r\n\r\n            if (relativeSizes.length !== numberOfRings) {\r\n                throw new BadArgumentException(\r\n                    `relativeRingSizes : number of values must match number of rings (${\r\n                        numberOfRings}) but was ${relativeSizes.length}`);\r\n            }\r\n        }\r\n        return {\r\n            partitionDy: () => 1,\r\n            scaleInnerRadius: d => this._scaleRadius(d.data.path.length - 1, d.y0),\r\n            scaleOuterRadius: d => this._scaleRadius(d.data.path.length, d.y1),\r\n            relativeRingSizesFunction: ringCount => {\r\n                const result = relativeRingSizesFunction(ringCount);\r\n                assertPortionsArray(result, ringCount);\r\n                return result;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get or set the strategy to use for sizing the charts rings.\r\n     *\r\n     * There are three strategies available\r\n     * * {@link SunburstChart#defaultRingSizes `defaultRingSizes`}: the rings get narrower farther away from the center\r\n     * * {@link SunburstChart#relativeRingSizes `relativeRingSizes`}: set the ring sizes as portions of 1\r\n     * * {@link SunburstChart#equalRingSizes `equalRingSizes`}: the rings are equally wide\r\n     *\r\n     * You can modify the returned strategy, or create your own, for custom ring sizing.\r\n     *\r\n     * RingSizes is a duck-typed interface that must support the following methods:\r\n     * * `partitionDy()`: used for\r\n     *   {@link https://github.com/d3/d3-hierarchy/blob/v1.1.9/README.md#partition_size `d3.partition.size`}\r\n     * * `scaleInnerRadius(d)`: takes datum and returns radius for\r\n     *    {@link https://github.com/d3/d3-shape/blob/v1.3.7/README.md#arc_innerRadius `d3.arc.innerRadius`}\r\n     * * `scaleOuterRadius(d)`: takes datum and returns radius for\r\n     *    {@link https://github.com/d3/d3-shape/blob/v1.3.7/README.md#arc_outerRadius `d3.arc.outerRadius`}\r\n     * * `relativeRingSizesFunction(ringCount)`: takes ring count and returns an array of portions that\r\n     *   must add up to 1\r\n     *\r\n     * @example\r\n     * // make rings equally wide\r\n     * chart.ringSizes(chart.equalRingSizes())\r\n     * // reset to default behavior\r\n     * chart.ringSizes(chart.defaultRingSizes()))\r\n     * @param {RingSizes} ringSizes\r\n     * @returns {Object|SunburstChart}\r\n     */\r\n    ringSizes (ringSizes) {\r\n        if (!arguments.length) {\r\n            if (!this._ringSizes) {\r\n                this._ringSizes = this.defaultRingSizes();\r\n            }\r\n            return this._ringSizes;\r\n        }\r\n        this._ringSizes = ringSizes;\r\n        return this;\r\n    }\r\n\r\n    _buildArcs () {\r\n        return arc()\r\n            .startAngle(d => d.x0)\r\n            .endAngle(d => d.x1)\r\n            .innerRadius(d => this.ringSizes().scaleInnerRadius(d))\r\n            .outerRadius(d => this.ringSizes().scaleOuterRadius(d));\r\n    }\r\n\r\n    _isSelectedSlice (d) {\r\n        return this._isPathFiltered(d.path);\r\n    }\r\n\r\n    _isPathFiltered (path) {\r\n        for (let i = 0; i < this.filters().length; i++) {\r\n            const currentFilter = this.filters()[i];\r\n            if (currentFilter.isFiltered(path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // returns all filters that are a parent or child of the path\r\n    _filtersForPath (path) {\r\n        const pathFilter = filters.HierarchyFilter(path);\r\n        const filtersList = [];\r\n        for (let i = 0; i < this.filters().length; i++) {\r\n            const currentFilter = this.filters()[i];\r\n            if (currentFilter.isFiltered(path) || pathFilter.isFiltered(currentFilter)) {\r\n                filtersList.push(currentFilter);\r\n            }\r\n        }\r\n        return filtersList;\r\n    }\r\n\r\n    _doRedraw () {\r\n        this._drawChart();\r\n        return this;\r\n    }\r\n\r\n    _partitionNodes (data) {\r\n        const getSortable = function (d) {\r\n            return {'key': d.data.key, 'value': d.value};\r\n        };\r\n        const _hierarchy = hierarchy(data)\r\n            .sum(d => d.children ? 0 : this._extendedValueAccessor(d))\r\n            .sort((a, b) => ascending(this.ordering()(getSortable(a)), this.ordering()(getSortable(b))));\r\n\r\n        const _partition = partition()\r\n              .size([2 * Math.PI, this.ringSizes().partitionDy()]);\r\n\r\n        _partition(_hierarchy);\r\n\r\n        // In D3v4 the returned data is slightly different, change it enough to suit our purposes.\r\n        const nodes = _hierarchy.descendants().map(d => {\r\n            d.key = d.data.key;\r\n            d.path = d.data.path;\r\n            return d;\r\n        });\r\n\r\n        const relativeSizes = this.ringSizes().relativeRingSizesFunction(_hierarchy.height);\r\n\r\n        return {\r\n            nodes,\r\n            rootOffset: _hierarchy.y1,\r\n            relativeRingSizes: relativeSizes\r\n        };\r\n    }\r\n\r\n    _sliceTooSmall (d) {\r\n        const angle = d.x1 - d.x0;\r\n        return isNaN(angle) || angle < this._minAngleForLabel;\r\n    }\r\n\r\n    _sliceHasNoData (d) {\r\n        return this._extendedValueAccessor(d) === 0;\r\n    }\r\n\r\n    _isOffCanvas (d) {\r\n        return !d || isNaN(d.x0) || isNaN(d.y0);\r\n    }\r\n\r\n    _fill (d, i) {\r\n        return this.getColor(d.data, i);\r\n    }\r\n\r\n    onClick (d, i) {\r\n        if (this._g.attr('class') === this._emptyCssClass) {\r\n            return;\r\n        }\r\n\r\n        // Must be better way to handle this, in legends we need to access `d.key`\r\n        const path = d.path || d.key;\r\n        const filter = filters.HierarchyFilter(path);\r\n\r\n        // filters are equal to, parents or children of the path.\r\n        const filtersList = this._filtersForPath(path);\r\n        let exactMatch = false;\r\n        // clear out any filters that cover the path filtered.\r\n        for (let j = filtersList.length - 1; j >= 0; j--) {\r\n            const currentFilter = filtersList[j];\r\n            if (utils.arraysIdentical(currentFilter, path)) {\r\n                exactMatch = true;\r\n            }\r\n            this.filter(filtersList[j]);\r\n        }\r\n        events.trigger(() => {\r\n            // if it is a new filter - put it in.\r\n            if (!exactMatch) {\r\n                this.filter(filter);\r\n            }\r\n            this.redrawGroup();\r\n        });\r\n    }\r\n\r\n    _safeArc (_arc, d) {\r\n        let path = _arc(d);\r\n        if (path.indexOf('NaN') >= 0) {\r\n            path = 'M0,0';\r\n        }\r\n        return path;\r\n    }\r\n\r\n    _labelPosition (d, _arc) {\r\n        let centroid;\r\n        if (this._externalLabelRadius) {\r\n            centroid = arc()\r\n                .outerRadius(this._radius + this._externalLabelRadius)\r\n                .innerRadius(this._radius + this._externalLabelRadius)\r\n                .centroid(d);\r\n        } else {\r\n            centroid = _arc.centroid(d);\r\n        }\r\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\r\n            return 'translate(0,0)';\r\n        } else {\r\n            return `translate(${centroid})`;\r\n        }\r\n    }\r\n\r\n    legendables () {\r\n        return this.data().map((d, i) => {\r\n            const legendable = {name: d.key, data: d.value, others: d.others, chart: this};\r\n            legendable.color = this.getColor(d, i);\r\n            return legendable;\r\n        });\r\n    }\r\n\r\n    legendHighlight (d) {\r\n        this._highlightSliceFromLegendable(d, true);\r\n    }\r\n\r\n    legendReset (d) {\r\n        this._highlightSliceFromLegendable(d, false);\r\n    }\r\n\r\n    legendToggle (d) {\r\n        this.onClick({key: d.name, others: d.others});\r\n    }\r\n\r\n    _highlightSliceFromLegendable (legendable, highlighted) {\r\n        this.selectAll('g.pie-slice').each(function (d) {\r\n            if (legendable.name === d.key) {\r\n                select(this).classed('highlight', highlighted);\r\n            }\r\n        });\r\n    }\r\n\r\n    _tweenSlice (d, element) {\r\n        let current = element._current;\r\n        if (this._isOffCanvas(current)) {\r\n            current = {x0: 0, x1: 0, y0: 0, y1: 0};\r\n        }\r\n        const tweenTarget = {\r\n            x0: d.x0,\r\n            x1: d.x1,\r\n            y0: d.y0,\r\n            y1: d.y1\r\n        };\r\n        const i = interpolate(current, tweenTarget);\r\n        element._current = i(0);\r\n        return t => this._safeArc(this._buildArcs(), Object.assign({}, d, i(t)));\r\n    }\r\n}\r\n\r\nexport const sunburstChart = (parent, chartGroup) => new SunburstChart(parent, chartGroup);\r\n","import {BaseMixin} from '../base/base-mixin';\r\nimport {constants} from '../core/constants';\r\nimport {events} from '../core/events';\r\nimport {redrawAll} from '../core/chart-registry';\r\n\r\nconst INPUT_CSS_CLASS = 'dc-text-filter-input';\r\n\r\n/**\r\n * Text Filter Widget\r\n *\r\n * The text filter widget is a simple widget designed to display an input field allowing to filter\r\n * data that matches the text typed.\r\n * As opposed to the other charts, this doesn't display any result and doesn't update its display,\r\n * it's just to input an filter other charts.\r\n *\r\n * @mixes BaseMixin\r\n */\r\nexport class TextFilterWidget extends BaseMixin {\r\n    /**\r\n     * Create Text Filter widget\r\n     * @example\r\n     *\r\n     * var data = [{\"firstName\":\"John\",\"lastName\":\"Coltrane\"}{\"firstName\":\"Miles\",lastName:\"Davis\"}]\r\n     * var ndx = crossfilter(data);\r\n     * var dimension = ndx.dimension(function(d) {\r\n     *     return d.lastName.toLowerCase() + ' ' + d.firstName.toLowerCase();\r\n     * });\r\n     *\r\n     * new TextFilterWidget('#search')\r\n     *     .dimension(dimension);\r\n     *     // you don't need the group() function\r\n     *\r\n     * @param {String|node|d3.selection|CompositeChart} parent - Any valid\r\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select d3 single selector}\r\n     * specifying a dom block element such as a div; or a dom element or d3 selection.\r\n     * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\r\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\r\n     */\r\n    constructor (parent, chartGroup) {\r\n        super();\r\n\r\n        this._normalize = s => s.toLowerCase();\r\n\r\n        this._filterFunctionFactory = query => {\r\n            query = this._normalize(query);\r\n            return d => this._normalize(d).indexOf(query) !== -1;\r\n        };\r\n\r\n        this._placeHolder = 'search';\r\n\r\n        this.group(() => {\r\n            throw 'the group function on textFilterWidget should never be called, please report the issue';\r\n        });\r\n\r\n        this.anchor(parent, chartGroup);\r\n    }\r\n\r\n    _doRender () {\r\n        this.select('input').remove();\r\n\r\n        this._input = this.root().append('input')\r\n            .classed(INPUT_CSS_CLASS, true);\r\n\r\n        const chart = this;\r\n        this._input.on('input', function () {\r\n            chart.dimension().filterFunction(chart._filterFunctionFactory(this.value));\r\n            events.trigger(() => {\r\n                redrawAll();\r\n            }, constants.EVENT_DELAY);\r\n        });\r\n\r\n        this._doRedraw();\r\n\r\n        return this;\r\n    }\r\n\r\n    _doRedraw () {\r\n        this.root().selectAll('input')\r\n            .attr('placeholder', this._placeHolder);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * This function will be called on values before calling the filter function.\r\n     * @example\r\n     * // This is the default\r\n     * chart.normalize(function (s) {\r\n     *   return s.toLowerCase();\r\n     * });\r\n     * @param {function} [normalize]\r\n     * @returns {TextFilterWidget|function}\r\n     */\r\n    normalize (normalize) {\r\n        if (!arguments.length) {\r\n            return this._normalize;\r\n        }\r\n        this._normalize = normalize;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Placeholder text in the search box.\r\n     * @example\r\n     * // This is the default\r\n     * chart.placeHolder('type to filter');\r\n     * @param {function} [placeHolder='search']\r\n     * @returns {TextFilterWidget|string}\r\n     */\r\n    placeHolder (placeHolder) {\r\n        if (!arguments.length) {\r\n            return this._placeHolder;\r\n        }\r\n        this._placeHolder = placeHolder;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * This function will be called with the search text, it needs to return a function that will be used to\r\n     * filter the data. The default function checks presence of the search text.\r\n     * @example\r\n     * // This is the default\r\n     * function (query) {\r\n     *     query = _normalize(query);\r\n     *     return function (d) {\r\n     *         return _normalize(d).indexOf(query) !== -1;\r\n     *     };\r\n     * };\r\n     * @param {function} [filterFunctionFactory]\r\n     * @returns {TextFilterWidget|function}\r\n     */\r\n    filterFunctionFactory (filterFunctionFactory) {\r\n        if (!arguments.length) {\r\n            return this._filterFunctionFactory;\r\n        }\r\n        this._filterFunctionFactory = filterFunctionFactory;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport const textFilterWidget = (parent, chartGroup) => new TextFilterWidget(parent, chartGroup);\r\n"],"names":["timeFormat","format","timeSecond","timeMinute","timeHour","timeDay","timeWeek","timeMonth","timeYear","dispatch","ascending","select","scaleOrdinal","min","max","scaleQuantize","scaleLinear","interpolateHcl","descending","sum","schemeCategory10","axisBottom","brushX","zoom","scaleBand","axisRight","axisLeft","event","zoomIdentity","range","timerFlush","quantile","stack","mouse","ITEM_CSS_CLASS","nest","LABEL_CSS_CLASS","SECTION_CSS_CLASS","geoPath","geoAlbersUsa","LABEL_PADDING","curveLinear","curveLinearClosed","curveStep","curveStepBefore","curveStepAfter","curveBasis","curveBasisOpen","curveBasisClosed","curveBundle","curveCardinal","curveCardinalOpen","curveCardinalClosed","curveMonotoneX","line","area","easeQuad","interpolateNumber","arc","interpolate","pie","extent","symbol","brush","DEFAULT_MIN_ANGLE_FOR_LABEL","hierarchy","partition"],"mappings":"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"}